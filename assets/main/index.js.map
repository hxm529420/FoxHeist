{"version":3,"sources":["assets/Script/plugins/ActionEx.js","assets/Script/games/game520/Config/AudioConf_520.js","assets/Script/games/game520/View/BonusLayer.js","assets/Script/controller/EnterGameScenceCommand.js","assets/Script/games/game/View/Fillbackground.js","assets/Script/FishFacade.js","assets/Script/model/data/FishGlobalDataProxy.js","assets/Script/model/data/FishGlobalData.js","assets/Script/controller/FishPrepControllerCommand.js","assets/Script/controller/FishPrepModelCommand.js","assets/Script/controller/FishStartUpCommand.js","assets/Script/games/game/Command/GameCommand.js","assets/Script/games/game520/View/GameHelpLayer.js","assets/Script/model/data/GameListDataProxy.js","assets/Script/model/data/GameListData.js","assets/Script/controller/GameLobbyLoginCommand.js","assets/Script/MessageDef/GameLobbyLoginProtocol.js","assets/Script/model/remoteProxy/GameLobbyLoginProxy.js","assets/Script/view/GameLobbyLoginUI.js","assets/Script/MessageDef/GameLobbyProtocol.js","assets/Script/games/game520/Modle/GameProtocol.js","assets/Script/games/game/Modle/GameProxy.js","assets/Script/games/game520/View/GameSpinLayer.js","assets/Script/games/game520/View/GameSpinReel.js","assets/Script/games/game/Command/GameTableCommand.js","assets/Script/games/game/Modle/GameTableDataManager.js","assets/Script/games/game/Modle/GameTableProtocol.js","assets/Script/games/game/Modle/GameTableProxy.js","assets/Script/games/game520/View/GameViewLayer.js","assets/Script/games/game/View/GameView.js","assets/Script/games/game520/Modle/Game_520_Proxy.js","assets/Script/plugins/Help.js","assets/Script/InitFishFacade.js","assets/Script/i18n/LabelLocalized.js","assets/Script/view/LoadingLogic.js","assets/Script/plugins/MaskEx.js","assets/Script/shader/Noise.js","assets/Script/i18n/RichTextLocalized.js","assets/Script/shader/RippleFishFightScene.js","assets/Script/shader/Ripple.js","assets/Script/games/game520/Config/SpineConfig_520.js","assets/Script/games/game520/Config/UIModuleInfo_520.js","assets/Script/i18n/data/en.js","assets/Script/games/game520/Config/gameConfig.js","assets/Script/games/game/View/gameLayer.js","assets/Script/games/game520/Modle/gameModel_520.js","assets/Script/games/game/Modle/gameModel.js","assets/Script/games/game/Util/gameUIManager.js","assets/Script/i18n/i18n.js","assets/Script/shader/lightLineMesh.js","assets/Script/i18n/polyglot.js","assets/Script/games/game/View/tipView_game.js","assets/Script/i18n/data/zh.js"],"names":["cc","Shake","Class","name","extends","ActionInterval","ctor","duration","strength","undefined","prototype","initWithDuration","call","this","strength_x","strength_y","m_strength_x","m_strength_y","clone","startWithTarget","target","m_initial_x","x","m_initial_y","y","time","update","dt","randx","Math","sin","randy","setPosition","v2","add","stop","reverse","shake","module","exports","_module$exports","sid","filepath","filename","vol","isbg","des","mimaTemp1","mimaWin","BonusLayer","Component","properties","btn_SenceChoose","Button","senceAni","sp","Skeleton","qiepingAni","bonusWin","btn_back11","bounsbackAni","onLoad","init","parent","callback","isAni","m_parent","i","node","on","OnButtonClickedToSelectSceneEvent","bind","InitAni","SceneNum","winScore","gostNum","mima","clickMima","jiangchiName","jiangchiAudio","SceneComplete","CreateBNScene","RecoverScene","BnSenceId","VerifyMailBox","bRewardGoodChoose","UnlockRewardID","RewardNum","SkullNum","intervalId","setInterval","active","SwitchBNScene","ShowBNScene","win_text","getComponent","Label","string","Help","FormatScore2","_i","BNSceneBtnList","off","OnButtonClickedGoodsEvent","FadeOutAction","fadeOut","runAction","bonus_gost_List","color","Color","SetjiangchiAni","setTimeout","Node_BaoXianXiang","Jackpot_node","MoveAction","moveTo","easing","easeElasticOut","BaoXianXiangskeleton","getChildByName","setAnimation","bonus_s_frame","setScale","ScaleAction","scaleTo","Func","callFunc","_i2","MiMaZhiSkeletonList","Number","sequence","clearInterval","tag","This","_loop","setCompleteListener","paused","_gameCtrl","requestSenceChoose","PlayQiePingAni","removeFromParent","addChild","j","PlayBonusWinAni","btcallback","btn_back","RemoveBonusLayer","getRandomInt","bmFont","scorllNumber","num1","CreateGoods","RewardGoodsID","RewardValue","GoodsID","Node","addComponent","BNScene","a","convertToWorldSpaceAR","b","convertToNodeSpaceAR","resources","load","Font","err","res","log","font","oldNum","newNum","num","BaoXianXiangSpr","Sprite","_a","_b","SpriteFrame","spriteFrame","EaseElasticOutAct","gost","_a2","_b2","Prefab","prefab","instantiate","BNSceneList","_tag","pick_your_treasure","JackpotTextList","JackpotKuang","Jackpottitle","_i3","SetJackpot","JackpotNum","spin","gameModel_520","_UnlockRewardID","btn_pass_List","_i4","OnButtonClickedMiMaZhiEvent","pick2_bg","mimaNum_text_list","_i5","pick2_btn_List","_i6","KaiBaoXianXiang","RewardID","CheckMiMaZhi","SetjiangchiAniName","ScaleAction1","Func1","ScaleAction2","Func2","_this","_loop2","fadeOutAction","fun","id","_this2","_loop4","_i7","type","Type","SLICED","insetTop","insetBottom","insetLeft","insetRight","_loop3","mimatab","deepClone","splice","_this3","_loop5","_i8","_bmFont","requestRewardChoose","arguments","_j","requestMailBoxReward","puremvc","define","SimpleCommand","execute","gameinfo","app","_gameinfo","gameProxy","facade","retrieveProxy","removeProxy","GameProxy","require","addProxy","gameTableProxy","GameTableProxy","registerProxy","registerNetInterface","NAME","game","addPersistRootNode","systemEvent","setAccelerometerEnabled","SystemEvent","EventType","DEVICEMOTION","s1","view","getFrameSize","s2","getDesignResolutionSize","game_set","real_size","ttt","width","height","h","w","director","getScene","setContentSize","start","FishStartUpCommand","FishFacade","Facade","constructor","multitonKey","isInit","initializeModel","initializeView","initializeController","registerCommand","FishConstants","START_UP","startup","sendNotification","getInstance","instanceMap","instance","FishGlobalData","Proxy","setFishApp","fishApp","getFishApp","setGameLobbyApp","gameLobbyApp","getGameLobbyApp","getLogonSuccessData","logonSuccessData","setLogonSuccessData","getGameServerInfo","GameServerInfo","setFishServerIpPort","ip","port","fishServerIp","fishServerPort","getFishServerPort","getFishServerIp","getFishGameKind","fishGameKind","setUserInfo","account","password","getUserId","userId","setUserId","uesrId","getAccount","getPassword","setTableId","tableId","setChairId","chairId","getTableId","getChairId","getWXUserInfo","wxUserInfo","setWXUserInfo","headImgUrl","openId","session_key","unionId","gender","nickName","getNickName","getHeadImgUrl","getOpenId","getUnionId","setNewUserGuideStep","newUserGuideStep","getNewUserGuideStep","setInviteUserID","InviteUserID","getInviteUserID","setNewUserWelfareLayerData","newUserWelfareLayerData","getNewUserWelfareLayerData","setNewUserMissionLayerData","newUserMissionLayerData","getNewUserMissionLayerData","GameLobbyLoginCommand","EnterGameScenceCommand","GameTableCommand","GameCommand","LOGIN_LOBBY","ENTER_GAME_SCENCE","GAME_TABLE_COMMAND","GAME_COMMAND","FishGlobalDataProxy","GameLobbyLoginProxy","GameListDataProxy","FishPrepModelCommand","FishPrepControllerCommand","MacroCommand","initializeMacroCommand","addSubCommand","startSpin","onGetNoticeReady","stopSpin","autoSpin","subBet","addBet","maxBet","UIManager","pageView","default","PageView","btnBack","btn_left","btn_right","BackButtonClickEvent","setCurrentPageIndex","LeftButtonClickEvent","RightButtonClickEvent","kindId","closeUI","viewId","getCurrentPageIndex","scrollToPage","onDestroy","GameListData","GetGameItemInfo","len","GameItmeList","length","wKindID","SetGameItem","ItemTableData","itemfind","push","GetGameItmeList","fishGlobalDataProxy","gameLobbyLoginProxy","socket","KBEngine","createApp","wssAddr","LobbyServerAddr","console","loginLobby","channelPlatformName","constVal","CMD_FRIST_MDM_GAME","CMD_FRIST_MDM_PLAZA","MDM_GP_LOGON","SUB_GP_LOGON_ACCOUNTS","SUB_GP_LOGON_PHONENUM","SUB_GP_LOGON_SUCCESS","SUB_GP_LOGON_FINISH","SUB_GP_LOGON_ERROR","SUB_GP_H5_REGISTER_ACCOUNTS","MDM_GP_SERVER_LIST","SUB_GP_LIST_TYPE","SUB_GP_LIST_KIND","SUB_GP_LIST_SERVER","SUB_GP_LIST_LUA_GAME","SUB_GP_LIST_FINISH","TYPE_LEN","KIND_LEN","STATION_LEN","SERVER_LEN","MODULE_LEN","MDM_KN_COMMAND","SUB_KN_DETECT_SOCKET","NAME_LEN","PASS_LEN","URL_LEN","datatypes","CMD_GP_LogonByAccounts","mainCmdID","subCmdID","argTypes","write2bundle","bundle","args","writeUint32","writeString","writeUint8","size","CMD_GP_LogonByPhoneNum","CMD_GP_LogonSuccess","createFromStream","stream","wFaceID","readUint16","cbGender","readUint8","dwUserID","readUint32","dwGameID","szAccount","readStringUTF8","szNickName","szToken","szUnderWrite","szSession","lUserScore","readInt64","lo","lDiamond","lLpValues","lTicket","dwLoginType","dwVipLv","dwVipPoint","dwClubPoint","lExperience","dwCurExLevel","dwNextExPoint","lNextExScore","szExtend","CMD_GP_LobbyServerAddr","szServerAddr","readString","CMD_GP_LogonError","lErrorCode","readInt32","szErrorDescribe","tagGameType","wSortID","wTypeID","szTypeName","tagGameKind","dwMaxVersion","dwOnLineCount","szKindName","szProcessName","tagLuaGameKind","gameItmeList","buffer","byteLength","item","dwClientVersion","dwResVersion","cbNullity","tagGameServer","wServerID","wStationID","wServerPort","szServerName","listFinish","CMD_GP_H5RegisterAccounts","onRegister","_globalData","_gameListData","net","registerClient","registerServer","register","inviteUserID","callServer","channelID","ChannelPlatformType","connect","toString","heartbeat","startHeartbeat","appFacade","setOncloseCallback","connected","loginSuccess","JSON","stringify","sys","isNative","os","OS_IOS","szUnionID","loginFinish","data","hideExchangeRedPacket2","loginError","errorCode","errorMsg","destroyApp","loadScene","gpLuaGameKind","gpListType","pGameType","gpListKind","pGameKind","gpListServer","pGameServer","gpListFinish","i18n","requestLoginResult","code","xmlHttp","loader","getXMLHttpRequest","open","PayServerAddr","setRequestHeader","onreadystatechange","readyState","status","result","parse","responseText","ON_GameLobbyLoginUI_Nativelogin","timeout","send","LoginResult","accountId","hideFirstPay","ChannelID","openid","unionid","openTipResult","loginUI","loginUINative","progressBar","ProgressBar","progressBarNode","psLogo","YXZL","versionlabel","info","manifestUrl","Asset","_updating","_canRetry","_storagePath","parmStr","window","location","href","split","forEach","element","parm","frameSize","rtFrame","setDesignResolutionSize","ResolutionPolicy","SHOW_ALL","Mask","FIXED_WIDTH","FIXED_HEIGHT","registerMediator","isBrowser","vars","search","substring","pair","getQueryVariable","onLoadNative","listNotificationInterests","evtType","LOGIN_LOBBY_FINISH","Nativelogin","wxGameLogin","t","substr","removeMediator","onDestroyNative","channelIDTemp","onLoadRes","onLogin","loadDir","completedCount","totalCount","progress","Date","getTime","onLoginTimeInterval","platform","WECHAT_GAME","onWxLogin","ANDROID","onWxLoginAndroid","PlatformID","self","wx","login","success","codeObj","request","url","header","content-type","successInfo","clientVersionVX","IosShow","hideExchangeRedPacket","wxSmallProgramPayWxappid","hideShopBuy","fail","error","complete","getRealtimeLogManager","jsb","reflection","callStaticMethod","confUtil","setUserNameLabel","updateCb","event","needRestart","failed","getEventCode","EventAssetsManager","ERROR_NO_LOCAL_MANIFEST","UPDATE_PROGRESSION","getPercent","msg","getMessage","ERROR_DOWNLOAD_MANIFEST","ERROR_PARSE_MANIFEST","ALREADY_UP_TO_DATE","clientVersion","UPDATE_FINISHED","UPDATE_FAILED","ERROR_UPDATING","getAssetId","ERROR_DECOMPRESS","_am","setEventCallback","_updateListener","searchPaths","fileUtils","getSearchPaths","newPaths","getLocalManifest","Array","unshift","apply","localStorage","setItem","setSearchPaths","audioEngine","stopAll","restart","hotUpdate","getState","AssetsManager","State","UNINITED","nativeUrl","md5Pipe","transformURL","loadLocalManifest","_failCount","getWritablePath","versionCompareHandle","versionA","versionB","vA","vB","parseInt","panel","setVerifyCallback","path","asset","compressed","expectedMD5","md5","relativePath","OS_ANDROID","setMaxConcurrentTask","CMD_FRIST_MDM_LOBBY","MDM_GL_LOBBY","SUB_GL_LOBBY_MSG","tagLobbyMessage","writeUint16","wMessageType","wMessageLength","szContent","SUB_KN_DETECT_ONLINE","CMD_KN_DetectSocket","constVal_FRIST_MDM_GAME","MDM_GF_GAME","MAX_LINE_COUNT","ITEM_X_COUNT","MAX_BET_COUNT","MAX_REWARD_POOL_INDEX","GAME_SCENE_FREE","GAME_SCENE_WAIT","GAME_SCENE_PLAY","GAME_SCENE_STOP","CMD_S_StatusFree","tmpMap","lCellScore","cbBetIndex","cbBetCount","lBetScoreArr","lBetScore","lLotteryScore","bUnlockRewardID","RewardPoolArr","llRewardPool","CMD_S_StatusPlay","cbLineCount","lLineScore","cbItemType","cbItemLineCount","ItemInfo","nGiveAwayCount","nTotalGiveAwayCount","cbFreeSpinState","dUserTotalWinScore","lTotalGameScore","bCanBn","bVerifyMailBox","bBnSenceId","bRewardGoodsNum","llRewardNum","bSkullNum","CMD_S_Scence_Stop","SUB_C_GAME_START","SUB_C_GIVE_AWAY_START","SUB_C_GAME_CONCLUDE","SUB_C_SENCE_CHOOSE","SUB_C_REWARD_CHOOSE","SUB_C_MAILBOX_REWARD","SUB_C_BET_REWARDPOOL","CMD_C_GAME_AWAY_START","CMD_C_GameStart","CMD_GF_Game_Conclude","CMD_C_SenceChoose","CMD_C_RewardChoose","CMD_C_MailBoxReward","CMD_C_BetRewardPool","SUB_S_GAME_START","SUB_S_GAME_CONCLUDE","SUB_S_GAME_LOTTERY","SUB_S_SET_BASESCORE","SUB_S_SUPERRABBIT_START","SUB_S_SUPERRABBIT_END","SUB_S_SENCE_CHOOSE","Sub_S_REWARD_CHOOSE","SUB_S_MAILBOX_REWARD","SUB_S_SEND_MAILBOX","SUB_S_LOCK_REWARDPOOL","SUB_S_BET_REWARDPOOL","CMD_S_GameStart","WildStickInfo","dLineScore","_i9","_i10","CMD_S_Game_Conclude","CMD_S_SendmailBox","CMD_S_SenceChoose","CMD_S_RewardChoose","bRewardGoodsID","llRewardValue","cbGoodsID","stSendMainbox","CMD_S_MailBoxReward","cdRewardID","CMD_S_LockMailBox","CMD_S_BetRewardPool","gameModel","GameUIManager","gameConfig","_globalDataProxy","gameUIManager","updateCellSprite","cell","col","isGetResult","cellKey","isReset","theCellKey","_resultItems","pop","getNextSprite","_autoSpin","_gameView","retrieveMediator","times","checknumber","fastStop","cleanStatusWithSpin","_spinResult","_totalWin","clearAnimate","cleanStatus","stopDrawAnimate","speedUpState","totalBet","getTotalBet","_freeSpin","lScore","spinBoard","requestSpin","_lineCount","_betIndex","playAudio","CurSpinLayer","getCurSpinLayer","getSpinConfig","spinConfig","_Object$entries","Object","entries","spinReels","_theReelConfig","_Object$entries$_i","theStartAction","getSpinColStartAction","theReelConfig","reelSpinConfig","spinAction","delay","spinDelay","speedUpTime","maxSpeed","upBounce","upBounceTime","upBounceMaxSpeed","createFreeRewardLayer","recvReward","freeGameEnd","_freewin","normalStop","fastStopBoard","adjustRecData","genSpecialSymbolState","stopReels","notifyState","cItemList","checkConfig","specialSymbolConfig","_Object$entries2","_Object$entries2$_i","itemKey","theItemConfig","itemCnt","colItemList","colRowCnt","row","curColMaxCnt","_Object$entries3","_Object$entries3$_i","_Object$entries4","_Object$entries4$_i","endCallFunc","nextCallFunc","spinning","handleResult","stopEndFunc","stopBoard","getStopConfig","stopConfig","_Object$entries5","_theReelConfig2","_Object$entries5$_i","_col","theStopAction","getSpinColStopAction","reelStopConfig","stopDelay","speedDownTime","downBounce","downBounceMaxSpeed","downBounceTime","stopType","checkSpeedUp","checkCol","isNeedSpeedUp","playReelNotifyEffect","stopReelNotifyEffect","onReelFallBottom","onReelFastFallBottom","onReelStop","playSpecialSymbolStopAni","symbols","dealSceneData","_baseScore","_betCount","_betList","_freeState","recoveryScene","sendUserReady","dealRequestSpinResult","data_","AddFakeData","scheduleOnce","drawAnimate","_curwinscore","requestStop","dealRequestStopResult","_Wincallbackfun","timeCallback","drawLinesThemeAnimate","winLines","lines","layer","rets","freeGameStart","IsinitSpinLayer","_Object$entries6","_Object$entries6$_i","keys","_Object$entries7","_Object$entries7$_i","key","getCell","onEventGameScene","GameSpinReel","ReelStatus","_ReelStatus","GameSpinLayer","winSize","Size","setAnchorPoint","reelConfigList","boardNode","gameViewLayer","isActive","running","stopping","reelConfig","reelNode","getReelNode","spinReel","Active","total","dt_60","onUpdate","calc_dt","updateCallFunc","timer","getScheduler","schedule","DeActive","resetBoard","unschedule","resetCol","setCellStatus","visible","getRetCell","getCellSize","colId","cellWidth","cellHeight","getCellPos","reel","addPos","basePos","adjustPos","checkDealWithReelStop","hasSpinningReel","curStatus","itemList","actionConfig","stopItemList","uplist","downlist","stopReelConfig","theCol","theAction","_Object$entries8","_Object$entries8$_i","colid","spinLayer","addBelow","addTop","number","maxIndex","minIndex","lastIndex","currentIndex","actionQueue","curAction","ExtraSymbolCount","cells","gameCtrl","initCell","theCell","createCellSprite","cellPos","curSpeed","isReelStoping","clearActions","resetCellsPosition","index","onDelayStopSchedule","delayTotalTime","onReelStartStop","shift","currentTime","acceleration","beginFun","refresh","timeLeft","isCurrentActionEnd","totalTime","moveY","getMoveY","_currentCell","getCurrentCell","increaseIndex","getNextCell","endFun","endSpeed","accelerationTime","tempSpeed","moveDis","cellIndex","tempIndex","getFirstCell","firstIndex","getLastCell","firstCell","decreaseIndex","lastCell","locked","parseStart","_this$actionQueue$pus5","_this$actionQueue$pus6","_this$actionQueue$pus","_this$actionQueue$pus2","_this$actionQueue$pus3","_this$actionQueue$pus4","tAcc","tMax","upitem","parseStop","downList","ClearAction","upList","actions","_this$actionQueue$pus7","action","downbounce","parseNormalBounceDown","paseEaseStop","pasePhyicalStop","parsePhysicalBounceDown","parseFastBounceDown","_this$actionQueue$pus8","extraCount","isTurbo","then","end","onReelReachBottom","_this$actionQueue$pus9","_this$actionQueue$pus10","bounceDis","distance","t1","_this$actionQueue$pus11","speed","_this$actionQueue$pus12","_this$actionQueue$pus13","onReelStoped","fixResult","_this$actionQueue$pus14","_this$actionQueue$pus15","_this$actionQueue$pus16","_this$actionQueue$pus17","_this$actionQueue$pus18","_this$actionQueue$pus19","_this$actionQueue$pus20","_this$actionQueue$pus21","_this$actionQueue$pus22","shakeDistance","fastResetResult","resultIndex","tmp_i","tmp_length","tableCmd","sendStandUpData","_wTableCount","_wChairCount","_wServerType","_dwServerRule","_roomUserList","Map","_tableUserList","_tableStatus","_wTableID","_wChairID","_cbGameStatus","_cbAllowLookon","_bChangeDesk","_bSendOption","setTableCount","TableCount","getTableCount","setChairCount","ChairCount","getChairCount","setServerType","ServerType","getServerType","setServerRule","ServerRule","getServerRule","setwTableID","TableID","getwTableID","setwChairID","ChairID","getwChairID","setGameStatus","GameStatus","getGameStatus","setAllowLookon","AllowLookon","getAllowLookon","setTableStatusById","tableStatus","getTableStatusById","setRoomUserList","ItemUserID","userItem","set","getRoomUserList","get","onRemoveUser","onUpDataTableUser","tableid","chairid","useritem","_tableid","_chairid","setChangeDesk","isChangeDesk","getChangeDesk","setSendOption","isSendOption","getSendOption","LEN_TOKEN","LEN_MACHINE_ID","MDM_GR_LOGON","SUB_GR_LOGON_H5_MOBILE","SUB_GR_LOGON_SUCCESS","SUB_GR_LOGON_ERROR","SUB_GR_LOGON_FINISH","SUB_GR_UPDATE_NOTIFY","CMD_GR_LogonMobile","grLogonSuccess","dwUserRight","dwMasterRight","CMD_GR_LogonError","szDescribeString","readStringUnicode","CMD_GR_LogonFinish","MDM_GR_CONFIG","SUB_GR_CONFIG_COLUMN","SUB_GR_CONFIG_SERVER","SUB_GR_CONFIG_PROPERTY","SUB_GR_CONFIG_FINISH","CMD_GR_ConfigServer","wTableCount","wChairCount","wServerType","dwServerRule","CMD_GR_ConfigFinish","MDM_GR_USER","SUB_GR_USER_RULE","SUB_GR_USER_SITDOWN","SUB_GR_USER_STANDUP","SUB_GR_USER_LEAVE","SUB_GR_USER_SYCNUSERSCORE","SUB_GR_USER_SYCNUSERMISSION","SUB_GR_USER_CHAIR_REQ","SUB_GR_USER_CHAIR_INFO_REQ","SUB_GR_USER_WAIT_DISTRIBUTE","SUB_GR_USER_CHANGE_CHAIR","SUB_GR_USER_ENTER","SUB_GR_USER_SCORE","SUB_GR_USER_STATUS","SUB_GR_REQUEST_FAILURE","SUB_GR_USER_GAME_DATA","SUB_GR_USER_EX_REWARD","SUB_GR_USER_EX_PROGRESS","SUB_GR_PUSHUSERPIG","DTP_GR_NICK_NAME","DTP_GR_UNDER_WRITE","CMD_GR_UserSitDown","CMD_GR_UserStandUp","CMD_GR_UserReqLeave","CMD_GR_ChairUserInfo","SUB_GR_UserEnter","SUB_GR_UserScore","SUB_GR_UserStatus","newstatus","CMD_GR_RequestFailure","rpos","CMD_GR_MobileUserExperienceReward","dwRewardExLevel","CurLvScore","readUint64","CMD_GR_MobileUserExperienceProgress","dwCurExPoint","NextLvScore","CMD_MB_PushUserPig","MDM_GR_STATUS","SUB_GR_TABLE_INFO","SUB_GR_TABLE_STATUS","SUB_GR_TableInfo","tempMap","cbTableLock","cbPlayStatus","SUB_GR_TableStatus","MDM_GF_FRAME","SUB_GF_GAME_OPTION","SUB_GF_USER_READY","SUB_GF_LOOKON_CONFIG","SUB_GF_DISTRIBUTE_AFFIRM","SUB_GF_USER_CHAT","SUB_GF_USER_EXPRESSION","SUB_GF_USER_VOICE","SUB_GF_GAME_STATUS","SUB_GF_GAME_SCENE","SUB_GF_LOOKON_STATUS","SUB_GF_SYSTEM_MESSAGE","SUB_GF_ACTION_MESSAGE","SUB_GF_NOTICE_READ","CMD_GF_GameOption","CMD_GF_User_Ready","CMD_GF_GameStatus","cbGameStatus","cbAllowLookon","CMD_GF_GameScene","CMD_CM_SystemMessage","wType","wLength","szString","CMD_CM_ActionMessage","nButtonType","CMD_CM_Nitice_Read","dwSendTickCount","dwRecvTickCount","GameTableDataManager","_gameTableDataManager","_kindVersion","_gameInfo","logonGame","token","G_isOffline","MyUserId","LOGIN_GAME_FINISH","grLogonError","kindid","onSocketLogonFinish","sendGameOption","grConfigServer","grConfigFinish","netCheck","sendTickCount","recvTickCount","RoomOffLine","queryChangeChair","force","sendLeaveRoomData","queryUserInfo","table","chair","onSocketUserEnter","userItemInfo","value","isMySelf","curlen","datalen","tmpSize","tmpCmd","isNeedAdd","oldstatus","US_LOOKON","onSocketUserScore","_data","bUpdate","_addScore","onSocketUserStatus","mySelfInfo","US_NULL","US_FREE","US_SIT","onSocketReQuestFailure","onSocketTableInfoEvent","onSocketSTabletatusEvent","onSocketSGameStatusEvent","userSitFailed","sendGFInfo","leaveGame","GameView","Notifications","SetJackpotText","SetFreeEnterBackAni","PushlistNotification","isOneFree","_super","animateWildNode","GameViewLayer_Node","bgNode","JackpotState","unlock_spin","lock_spin","Node_free","Text_free_num","Text_free_total_num","Text_total_bet","BGAniNode","BGAni","FreeBGAniNode","FreeBGAni","SetBGAni","EnterFreeAniNode","EnterFreeAni","BackFreeAniNode","BackFreeAni","ShowJackpotKuang","_oldState","_oldState2","oldState","tab1","stopAllActions","createBonusLayer","addMaskLayer","BonusLayer_Node","rewardNode","RecoverBonusLayer","maskNode","removeAllChildren","ResetBNGameData","setFreeTotalRemain","setFreeRemain","createStartFreeLayer","_callback","fntTimes","btnStart","skeleton","FormatScore","s","parts","replace","join","formatScore","recoveryFreeScene","theCellNode","theCellFile","_symbolPic","theCellSprite","sprite","getRes","spine","_lines","_layer","_rets","payLines","getPayLines","framedraw","symboldraw","linedraw","animateNode","drawEachLine","winLine","lineIndex","cols","endCol","symbol","drawPayLineItem","playLineEffect","drawAllWinPos","winPos","pos","theLineData","clearStatus","colItems","_isBreakLine","delayTime","asList","a1","a2","t2","repeatForever","drawWildStickItems","itemNode","frameNode","drawItemEffect","hideWildStickDownItems","_Object$entries9","_Object$entries9$_i","_Object$entries10$_i","_Object$entries10","_i11","LoadSpinePrefab","playFrameEffect","canBn","_i12","_Object$entries11","_step","_Object$entries11$_i","_pos","file","_CanFree","_iterator","_createForOfIteratorHelperLoose","done","cleanWildStickItems","_ZOrder","setOrientation","macro","ORIENTATION_LANDSCAPE","setFrameSize","externalThis","ZOrder","shakyNode","bg","board","ctrlNode","ctrl","mask","animate","reward","GameLayer_Node","resList","assets","uuidDict","getDirWithPath","uuid","_step2","_iterator2","boardNodeList","initBoardNodes","initSpinLayer","list","_step3","_iterator3","listNotification","boardConfigList","getBoardConfig","boardIndex","theConfig","theBoardNode","reelNodes","zIndex","MaskNode","reelIndex","config","vex","_spinLayerList","symbolParent","frameParent","playItemEffect","MaskLayer","BlockInputEvents","sizeMode","SizeMode","CUSTOM","opacity","hideBigWin","_canRemoveRewardNode","GameProtocol","GameModel_520","GameConfig","lineNum","betNum","wildList","_wildList","requestBetRewardPool","onGameMessageGameConclude","onGameMessageGameStart","_CanBn","_isPlayWaitAni","ret","hash","line","k","p","_GiveAwayCount","_index","_type","temp","_temp","_j2","_recoveryFreeList","totalWin","item_list","_temp2","_j3","onGameMessageSendmailBox","onEventGameSceneStop","onGameMessageSenceChoose","onGameMessageRewardChoose","cmd_table","onGameMessageMailBoxReward","onGameMessageLockMailBox","onGameMessageBetRewardPool","gameStatus","_index2","_type2","_temp3","_i13","_VerifyMailBox","_BnSenceId","_bRewardGoodChoose","_RewardNum","_SkullNum","startFree","_i14","_i15","_i16","trackIndex","loop","newNode","popDialog","_duration","fadeIn","spwan","spawn","scaleTo1","seq","hideDialog","cb","fnum","SCORE_RATIO","floor","toFixed","_num","_fnum","_from","_to","_delay","from","to","addSumNum","changeCnt","ceil","offset","abs","randomValue","actDelay","actCall","obj","newObj","isArray","hasOwnProperty","min","max","random","base","textKey","multiline","tooltip","notify","localizedString","override","tipLabel","EVENT_GAME_SIZE_CHANGED","scaleWidth","scaleHeight","scale","gameSize","resizeCanvas","NO_BORDER","_app","gameSceneName","G_LanguageType","preloadDir","map","preloadScene","totalCountr","setVertsDirtySprite","_spriteFrame","setVertsDirty","_updateMaterial","onEnable","SIZE_CHANGED","onDisable","PerlinNoise","reset","noise1d","imul","generateNoise1D","ix","r1","r2","interpolate","ft","f","cos","RichText","dynamicAtlasManager","enabled","_material","getMaterial","m_rippleList","rippleDirty","setProperty","addRipple","rippleList","centerCoordinate","runtime","lifespan","setRippleDirty","js","array","fastRemoveAt","effect","TOUCH_END","onTouchEnded","TOUCH_CANCEL","touch","getLocation","AnimationName","csbRes","Id","viewName","Zorder","isAudio","openAnimationName","GameLobbyLoginScene.fire.1","GameLobbyLoginScene.fire.2","fish.prefab.1","fish.prefab.2","fish.prefab.3","fish.prefab.4","fish.prefab.5","fish.prefab.6","fish.prefab.7","fish.prefab.8","fish.prefab.T1","fish.prefab.T2","fish.prefab.T3","fish.prefab.T4","fish.prefab.T5","fish.prefab.T6","fish.prefab.T7","fish.prefab.T8","fish.prefab.M1","fish.prefab.M2","fish.prefab.M3","fish.prefab.M4","fish.prefab.rule1","fish.prefab.rule2","fish.prefab.rule3","fish.prefab.rule4","fish.prefab.rule5","fish.prefab.rule6","fish.prefab.ruleT1","fish.prefab.ruleT2","fish.prefab.ruleT3","fish.prefab.ruleT4","fish.prefab.ruleT5","fish.prefab.ruleT6","fish.prefab.ruleI4","FishTypeView.1","FreeGoldLayer.1","FreeGoldLayer.2","FreeGoldLayer.3","FreeGoldLayer.4","FreeGoldLayer.prefab.1","FreeGoldLayer.prefab.2","PiggyBankLayer.prefab.1","PiggyBankLayer.prefab.2","ChangeCannonLayer.prefab.1","ChangeCannonLayer.prefab.2","ChangeCannonLayer.prefab.3","ChangeCannonLayer.prefab.4","ChangeCannonLayer.prefab.5","ChangeCannonLayer.prefab.6","ChangeCannonLayer.prefab.7","ExchangeRedPacketLayer.prefab.1","ExchangeRedPacketLayer.1","ExchangeRedPacketLayer.2","ExchangeRedPacketLayer.3","ExchangeRedPacketLayer.4","ExchangeRedPacketLayer.5","ExchangeRedPacketLayer.6","ExchangeRedPacketLayer.7","NewGuideLayer0.prefab.1","NewGuideLayer0.prefab.2","NewGuideLayer0.prefab.3","NewGuideLayer1.prefab.1","NewGuideLayer1.prefab.2","NewGuideLayer2.prefab.1","NewGuideLayer3.prefab.1","NewGuideLayer3.prefab.2","NewGuideLayer5.prefab.1","NewGuideLayer6.prefab.1","GameToolProxy.1","OutRoomView.1","OutRoomView.2","tanchukuang.prefab.1","fishUiLayer.1","fishUiLayer.2","fishUiLayer.3","fishUiLayer.Tip1","fishUiLayer.Tip2","fishUiLayer.Tip3","CompetitionRoomRink.prefab.1","CompetitionRoomRink.prefab.2","CompetitionRoomRink.prefab.3","CompetitionRoomRink.prefab.4","CompetitionRoomRink.prefab.5","CompetitionRoomRink.prefab.6","CompetitionRoomOver.prefab.1","CompetitionRoomOver.prefab.2","CompetitionRoomOver.prefab.3","CompetitionRoomBuy.prefab.1","CompetitionRoomBuy.prefab.2","CompetitionRoomBuy.prefab.3","CompetitionRoomBuy.prefab.4","CompetitionRoomBuy.prefab.5","CompetitionRoomBuy.prefab.6","game_resource.prefab.1","redPacketShowAni_0.prefab.1","redPacketShowAni_0.prefab.2","EmailSystemLayer.prefab.1","UserInfoLayer.1","UserInfoLayer.2","shopLayer.1","SendPacketItemLayer.1","ExchangeRedPacketLayer2.1","ExchangeRedPacketLayer2.2","ExchangeRedPacketLayer2.3","CompetitionRoomRinkView.1","GameLobbyLoginUI.1","fishPlayer.1","fishPlayer.2","fishPlayer.3","fishjiFenBanMatch.1","fishAnimationLayer.1","fishAnimationLayer.2","fishAnimationLayer.3","fishAnimationLayer.4","LotteryTicketTitle.prefab.1","LotteryTicketTitle.prefab.2","RedPacketRule.prefab.1","RedPacketRule.prefab.2","RedPacketRule.prefab.3","RedPacketRule.prefab.4","ExchangeRedPacketLayer2.prefab.1","ExchangeRedPacketLayer2.prefab.2","ExchangeRedPacketLayer2.prefab.3","RegistAccountLayer.1","RegistAccountLayer.2","RegistAccountLayer.3","RegistAccountLayer.4","RegistAccountLayer.5","RegistAccountLayer.6","RedPacketOpen.prefab.1","_config$gameConfig","_game_symbol_coinfig","_special_symbol_confi","_","_2","_game_type_config","_ref2","_ref","Button_back","Button_setting","FileNode_setting","Panel_bg","Button_spin","PanelTimes","Text_score","Text_total_win","Text_time_left","Button_sub_bet","Button_add_bet","Button_max_bet","Button_stop_spin","Button_times_10","Button_times_20","Button_times_50","Button_times_100","Button_times_500","Button_times_fast","Sprite_total_bet","Button_rule","Button_sound","Toggle","Button_music","_btnBack","_btnSetting","_nodeSetting","_btnSettingRule","_btnSound","_btnMusic","_panelTimes","_textUserScore","_textTotalBet","_textTotalWin","_textTimesLeft","_btnSubBet","_btnAddBet","_btnMaxBet","_btnStartSpin","_btnStopSpin","btnTimes10","btnTimes20","btnTimes50","btnTimes100","btnTimes500","btn_times_fast","TOUCH_START","onTouchBegan","SettingButtonClickEvent","SettingRuleButtonClickEvent","onClickSound","onClickMusic","SpinButtonClickEvent","onClickStopSpin","onClickAutoSpin","onClickSubBet","onClickAddBet","onClickMacBet","updateUIofUserInfo","showDialog","setTotalWin","changeGameBtnState","setTotalBet","changeSpinBtnState","updateScore","showTotalText","setAutoplayRemaining","showTotal_bet","attachUI","message","func","openTip","bshow","camera","Camera","main","nsp","getScreenToWorldPoint","Rect","contains","hideSettingDialog","_camera","_nsp","updateUIofSetting","BooleffectV","setEffectV","BoolmusicV","setMusicV","isChecked","openUI","_holdTime","CalculateTime","onClickStartSpin","interactable","_count","count","_oldScore","enable","enableColor","disableColor","initGameData","gameconfig","_gameConfig","initConfig","initGameConfig","_fakeItems","normalSymbolList","initPicsAndKeys","themeType","themeTypeConfig","initThemeType","borderConfig","idx","newReelConfig","posList","colCnt","oneConfig","rowCnt","_symbolKey","theSymbol","maxLine","getPlayType","getRandomKey","n","tempSymbol","winls","item_list_down","item_list_up","_t","v","reelList","UIModuleInfo","AudioConf","_openList","_curOpenUI","_preUI","uiOrder","closeAll","scene","_uiLayer","getAudioEngineData","removeUI","viewInfo","_curViewID","_view","setUITop","str","openTipEffect","TipsEffect","moveBy","removeSelf","getUIById","destroy","volume","musicV","setMusicVolume","pauseMusic","resumeMusic","saveAudioEngineData","effectV","setEffectsVolume","baseData","baseData1","getItem","isLoop","audioInf","AudioClip","playMusic","playEffect","saveAccountData","c","String","fromCharCode","charCodeAt","baseDataObject","escape","getAccountData","unescape","saveShopOrdersWeChat","getShopOrdersWeChat","saveShopOrdersWeChatCheck","getShopOrdersWeChatCheck","saveAccountDataNativeFirst","getAccountDataNativeFirst","saveDate","isSameDay","dateA","dateB","setHours","saveAutoCheckRedPacketTypeIndex","getAutoCheckRedPacketTypeIndex","saveNewPlayRedpacketRoomID","getNewPlayRedpacketRoomID","Polyglot","polyglot","phrases","allowMissing","language","lang","opt","m_PerlinNoise","gfx","setlightLine","Lines","vfmt","VertexFormat","ATTR_POSITION","ATTR_TYPE_FLOAT32","ATTR_UV0","ATTR_COLOR","ATTR_TYPE_UINT8","normalize","mesh","Mesh","m_Time","m_Width","m_Step","m_TextureLength","m_Amplitude0","m_Frequency0","m_ProgramState","m_TimeFactor","m_fTotalAlphaToZeroTime","m_fLeaveAlphaToZeroTime","dirty","initialCapacity","m_Vertices","tTriangle","vertexBuffer","indexBuffer","m_Lines","updateMesh","MeshRenderer","addOneStep","lineBegin","lineEnd","widthOffset","uvBegin","uvEnd","stepType","m_VertexSize","vertexesUV0","totalLength","sub","mag","stepCount","halfWidth","inverseTextueLength","_dir","_totalLength","normalizeSelf","invTotalLength","_stepCount","step","camForward","v3","cross","stepBegin","stepEnd","curLength","noiseParam","noise","randomPos","setVertices","setIndices","root","factory","amd","global","options","extend","currentLocale","locale","warn","VERSION","newLocale","morePhrases","prefix","phrase","unset","clear","newPhrases","text","texts","chosenText","smart_count","delimeter","pluralTypeIndex","trimRe","has","pluralTypes","chinese","german","french","russian","czech","polish","icelandic","pluralTypeToLanguages","langToTypeMap","mapping","langs","l","pluralTypeName","langToPluralType","en","dollarRegex","dollarBillsYall","arg","replacement","RegExp","source","prop","txtContent","onbtnOk","closeSelf","onBack"],"mappings":"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","sourcesContent":["cc.Shake = cc.Class({\r\n    name: 'cc.Shake',\r\n    extends: cc.ActionInterval,\r\n\r\n    ctor: function (duration, strength) {\r\n        duration !== undefined && cc.Shake.prototype.initWithDuration.call(this, duration, strength, strength);\r\n    },\r\n\r\n    initWithDuration: function (duration, strength_x, strength_y) {\r\n        if (cc.ActionInterval.prototype.initWithDuration.call(this, duration)) {\r\n            this.m_strength_x = strength_x;\r\n            this.m_strength_y = strength_y;\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    clone: function () {\r\n\r\n    },\r\n\r\n    startWithTarget: function (target) {\r\n        cc.ActionInterval.prototype.startWithTarget.call(this, target);\r\n        this.m_initial_x = target.x;\r\n        this.m_initial_y = target.y;\r\n        this.time = 0;\r\n    },\r\n\r\n    update: function (dt) {\r\n        this.time = this.time + dt\r\n        let randx = Math.sin(this.time * 1.2) * this.m_strength_x\r\n        let randy = Math.sin(this.time * 1.5) * this.m_strength_y;\r\n        this.target.setPosition(cc.v2(this.m_initial_x, this.m_initial_y).add(cc.v2(randx, randy)))\r\n    },\r\n\r\n    stop: function () {\r\n        this.target.setPosition(this.m_initial_x, this.m_initial_y);\r\n        cc.ActionInterval.prototype.stop.call(this);\r\n    },\r\n\r\n    reverse: function () {\r\n\r\n    },\r\n\r\n});\r\n\r\ncc.shake = function (duration, strength) {\r\n    return new cc.Shake(duration, strength);\r\n};","/*\n\t声音id, 文件夹路径, 文件名, 修改音量, 是否背景音乐, 作用描述, 备注, 更改音效\n\tsid, filepath, filename, vol, isbg, des\n*/\nmodule.exports = {\n\t[\"bg\"]: {\n\t\tsid: 1,\n\t\tfilepath: \"games/game520/audio\",\n\t\tfilename: \"base_bgm\",\n\t\tvol: 100,\n\t\tisbg: true,\n\t},\n\t[\"jp_lock\"]: {\n\t\tsid: 1,\n\t\tfilepath: \"games/game520/audio\",\n\t\tfilename: \"jp_lock\",\n\t\tvol: 100,\n\t\tisbg: null,\n\t\tdes: \"奖池锁音效\",\n\t},\n\t[\"start\"]: {\n\t\tsid: 1,\n\t\tfilepath: \"games/game520/audio\",\n\t\tfilename: \"Effect_start\",\n\t\tvol: 100,\n\t\tisbg: null,\n\t},\n\t[\"bell\"]: {\n\t\tsid: 1,\n\t\tfilepath: \"games/game520/audio\",\n\t\tfilename: \"bell\",\n\t\tvol: 100,\n\t\tisbg: null,\n\t},\n\t[\"anti_suc_vo1\"]: {\n\t\tsid: 1,\n\t\tfilepath: \"games/game520/audio\",\n\t\tfilename: \"anti_suc_vo1\",\n\t\tvol: 100,\n\t\tisbg: null,\n\t},\n\t[\"anti_suc_vo2\"]: {\n\t\tsid: 1,\n\t\tfilepath: \"games/game520/audio\",\n\t\tfilename: \"anti_suc_vo2\",\n\t\tvol: 100,\n\t\tisbg: null,\n\t},\n\n\t[\"win1\"]: {\n\t\tsid: 1,\n\t\tfilepath: \"games/game520/audio\",\n\t\tfilename: \"win1\",\n\t\tvol: 100,\n\t\tisbg: null,\n\t},\n\t[\"win1end\"]: {\n\t\tsid: 1,\n\t\tfilepath: \"games/game520/audio\",\n\t\tfilename: \"win1end\",\n\t\tvol: 100,\n\t\tisbg: null,\n\t},\n\t\n}","\r\nlet mimaTemp1 = [1357,2468,6666,8888]\r\n\r\nlet mimaWin = [[1,3,5,7],[2,4,6,8],[6,6,6,6],[8,8,8,8]]\r\n\r\nlet BonusLayer = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        btn_SenceChoose:[cc.Button],//场景选择按钮\r\n        senceAni:[sp.Skeleton],       //场景动画\r\n        qiepingAni:sp.Skeleton,     //切屏动画动画\r\n        bonusWin:sp.Skeleton,     //\r\n        btn_back11:cc.Button,\r\n        bounsbackAni:sp.Skeleton,     //退出动画\r\n    },\r\n\r\n    onLoad () {\r\n\r\n    },\r\n\r\n    init(parent,callback,isAni){\r\n\r\n        this.m_parent = parent\r\n        this.callback = callback\r\n        \r\n        for (let i = 0;i < 3;i++) {\r\n            this.btn_SenceChoose[i].node.on('click', this.OnButtonClickedToSelectSceneEvent.bind(this,i), this);\r\n        }\r\n        \r\n        this.InitAni(isAni)\r\n    \r\n    \r\n        //当前选择的场景\r\n        this.SceneNum = -1\r\n    \r\n        this.winScore = 0\r\n    \r\n        this.gostNum = 0\r\n    \r\n        //保险箱密码\r\n        this.mima = 0\r\n    \r\n        this.clickMima = -1\r\n    \r\n        //保险箱开奖池动画\r\n        this.jiangchiName = -1\r\n    \r\n        //保险箱开奖池音效名\r\n        this.jiangchiAudio = \"\"\r\n    \r\n        this.SceneComplete = false\r\n        this.CreateBNScene()\r\n    },\r\n\r\n    //恢复场景\r\n    RecoverScene(BnSenceId,VerifyMailBox,bRewardGoodChoose,UnlockRewardID,RewardNum,SkullNum){ \r\n\r\n        let intervalId = setInterval(function() {\r\n\r\n            if(this.SceneComplete){\r\n                for (let i = 0;i < 3;i++) {\r\n                    //禁用场景选择按钮\r\n                    this.btn_SenceChoose[i].node.active = false\r\n                }  \r\n        \r\n                this.SceneNum = BnSenceId - 1\r\n                this.SwitchBNScene(this.SceneNum)\r\n                this.ShowBNScene()\r\n        \r\n                this.winScore = this.winScore + RewardNum\r\n        \r\n                this.win_text.getComponent(cc.Label).string = Help.FormatScore2(this.winScore)\r\n        \r\n                for (let i = 0;i < 16;i++) {\r\n                    if (bRewardGoodChoose[i] === 1) {\r\n                        this.BNSceneBtnList[this.SceneNum][i].off('click', this.OnButtonClickedGoodsEvent, this);\r\n                        let FadeOutAction = cc.fadeOut(0)\r\n                        this.BNSceneBtnList[this.SceneNum][i].runAction(FadeOutAction)\r\n                    }else{\r\n                        this.BNSceneBtnList[this.SceneNum][i].on('click', this.OnButtonClickedGoodsEvent, this);\r\n                    }\r\n\r\n                }\r\n        \r\n                this.gostNum = SkullNum\r\n                if (this.gostNum > 0) {\r\n                    this.bonus_gost_List[this.gostNum].color = new cc.Color(255, 255, 255)\r\n                }\r\n        \r\n                \r\n        \r\n                //说明在保险箱界面\r\n                if (VerifyMailBox != 255 && VerifyMailBox != 0) { \r\n                    //todo\r\n                    //this.m_parent._gameCtrl:playMuscic(\"pick4_bgm\")\r\n                    this.SetjiangchiAni(UnlockRewardID) \r\n                    this.mima = VerifyMailBox\r\n                    //延迟弹出保险箱\r\n                    setTimeout(function(){\r\n                        this.Node_BaoXianXiang.active = true\r\n        \r\n                        //奖池节点动作\r\n                        this.Jackpot_node.setPosition(0,-81)\r\n                        let MoveAction = cc.moveTo(1,cc.v2(0,0)).easing(cc.easeElasticOut(0.35))\r\n                        this.Jackpot_node.runAction(MoveAction)\r\n        \r\n                        //保险箱动画\r\n                        this.BaoXianXiangskeleton = this.Node_BaoXianXiang.getChildByName(\"baoxianxiang\").getComponent(sp.Skeleton)\r\n                        this.BaoXianXiangskeleton.node.active = true\r\n                        this.BaoXianXiangskeleton.setAnimation(0, \"animation1\", false)\r\n        \r\n                        //纸张节点\r\n                        this.bonus_s_frame.setScale(0)\r\n                        let ScaleAction = cc.scaleTo(1,1).easing(cc.easeElasticOut(0.35))\r\n                        \r\n                        let Func = cc.callFunc(function(){ \r\n        \r\n                            for (let i = 0;i < 4;i++) { \r\n                                //密码纸动画\r\n                                this.MiMaZhiSkeletonList[i] = this.bonus_s_frame.getChildByName(\"mimazhi_\" + Number(i + 1)).getComponent(sp.Skeleton)\r\n                                this.MiMaZhiSkeletonList[i].node.active = true\r\n                                this.MiMaZhiSkeletonList[i].setAnimation(0, \"animation2\", true)                        \r\n                            }\r\n        \r\n                        }.bind(this))\r\n        \r\n                        this.bonus_s_frame.runAction(cc.sequence(Func,ScaleAction))\r\n        \r\n                    }.bind(this), 300)\r\n        \r\n                }    \r\n                else{\r\n                    //todo\r\n                    //this.m_parent._gameCtrl:playMuscic(\"pick\" .. this.SceneNum .. \"_bgm\")       \r\n                }\r\n    \r\n                clearInterval(intervalId);\r\n            }\r\n\r\n            \r\n\r\n        }.bind(this), 100);\r\n        \r\n    \r\n    },\r\n\r\n    //选择场景按钮事件\r\n    OnButtonClickedToSelectSceneEvent:function(tag){\r\n        \r\n        let This = this\r\n\r\n        for (let i = 0 ;i < 3;i++) {\r\n           if (i == tag) {\r\n                \r\n                This.senceAni[i].setAnimation(0, \"animation\" + Number(i + 1) + \"_5\", false)\r\n                This.senceAni[i].setCompleteListener(function(){\r\n                    This.senceAni[i].paused = true\r\n                }.bind(This))\r\n\r\n           }\r\n           else{\r\n                This.senceAni[i].paused = true\r\n                This.senceAni[i].setAnimation(0, \"animation\" + Number(i + 1) + \"_1\", false)\r\n                This.senceAni[i].node.color = new cc.Color(77, 77, 77)\r\n           }\r\n    \r\n           //禁用场景选择按钮\r\n           //This.btn_SenceChoose[i].node.off('click', This.OnButtonClickedToSelectSceneEvent.bind(This,i), This);\r\n           //禁用场景选择按钮\r\n           This.btn_SenceChoose[i].node.active = false\r\n        }\r\n        \r\n        This.m_parent._gameCtrl.requestSenceChoose(tag)\r\n    \r\n        This.SwitchBNScene(tag)\r\n    \r\n        This.SceneNum = tag\r\n    },\r\n\r\n    //初始化ani\r\n    InitAni(isAni){\r\n\r\n        if (isAni == false) {\r\n            return\r\n        }\r\n\r\n        this.senceAni[3].setAnimation(0, \"animation4_2\", false)\r\n        this.senceAni[3].setCompleteListener(function(){\r\n            this.senceAni[3].setAnimation(0, \"animation4_3\", true)\r\n        }.bind(this))\r\n\r\n        this.senceAni[0].setAnimation(0, \"animation1_2\", false)\r\n        this.senceAni[0].setCompleteListener(function(){\r\n            this.senceAni[0].setAnimation(0, \"animation1_3\", true)\r\n        }.bind(this))\r\n\r\n        this.senceAni[1].setAnimation(0, \"animation2_2\", false)\r\n        this.senceAni[1].setCompleteListener(function(){\r\n            this.senceAni[1].setAnimation(0, \"animation2_3\", true)\r\n        }.bind(this))\r\n        \r\n        this.senceAni[2].setAnimation(0, \"animation3_2\", false)\r\n        this.senceAni[2].setCompleteListener(function(){\r\n            this.senceAni[2].setAnimation(0, \"animation3_3\", true)\r\n        }.bind(this))\r\n\r\n    },\r\n\r\n    //播放切屏动画\r\n    PlayQiePingAni(){\r\n     \r\n        //todo\r\n        // if math.random(1,10) > 5 then\r\n        //     this.m_parent._gameCtrl:playEffect(\"pick_tran_in1\")\r\n        // else\r\n        //     this.m_parent._gameCtrl:playEffect(\"pick_tran_in2\")       \r\n        // end\r\n\r\n        // performWithDelay(this.m_parent._gameCtrl._gameScene, function()\r\n        //     this.m_parent._gameCtrl:playMuscic(\"pick\" .. this.SceneNum .. \"_bgm\")\r\n\r\n        // end, 5) \r\n        \r\n\r\n        for (let i = 0;i < 4;i++) {\r\n            this.senceAni[i].node.removeFromParent()\r\n        } \r\n        \r\n        setTimeout(function(){\r\n            this.ShowBNScene() \r\n        }.bind(this), 1000)\r\n\r\n        this.qiepingAni.node.removeFromParent()\r\n        this.m_parent.node.addChild(this.qiepingAni.node,501)\r\n        this.qiepingAni.node.active = true\r\n        this.qiepingAni.setAnimation(0, \"animation\", false)\r\n        this.qiepingAni.setCompleteListener(function(){\r\n            setTimeout(function(){\r\n                this.qiepingAni.node.active = false\r\n                this.qiepingAni.node.removeFromParent()\r\n                for (let j = 0 ;j < 16;j++) {\r\n                    this.BNSceneBtnList[this.SceneNum][j].on('click', this.OnButtonClickedGoodsEvent, this);\r\n                }\r\n            }.bind(this), 1000)\r\n        }.bind(this))\r\n\r\n \r\n    },\r\n\r\n    //播放Win动画\r\n    PlayBonusWinAni(){\r\n\r\n            //按钮回调\r\n        let btcallback = function(ref, type){\r\n            //todo\r\n            //this.m_parent._gameCtrl:playEffect(\"dialog_collect\")\r\n            this.bonusWin.node.active = false\r\n            this.btn_back.active = false\r\n            this.btn_back11.node.active = false\r\n            setTimeout(function(){\r\n                this.bonusWin.node.removeFromParent()\r\n            }.bind(this), 1000)\r\n            this.m_parent.RemoveBonusLayer(this.callback)\r\n        }.bind(this)  \r\n\r\n        \r\n                        \r\n        let rand = Help.getRandomInt(1,20)\r\n                \r\n                // if rand <= 5 then\r\n                //     this.m_parent._gameCtrl:playEffect(\"collect_dia_vo1\")\r\n                // elseif rand > 5 && rand <= 10 then\r\n                //     this.m_parent._gameCtrl:playEffect(\"collect_dia_vo2\")\r\n                // elseif rand > 10 && rand <= 15 then\r\n                //     this.m_parent._gameCtrl:playEffect(\"collect_dia_vo3\")\r\n                // elseif rand > 15 && rand <= 20 then\r\n                //     this.m_parent._gameCtrl:playEffect(\"collect_dia_vo4\")\r\n                // end\r\n                \r\n                //this.m_parent._gameCtrl:playEffect(\"dialog_pop\")\r\n    \r\n        this.bonusWin.node.active = true\r\n        this.bonusWin.node.removeFromParent()\r\n        this.m_parent.node.addChild(this.bonusWin.node,501)\r\n        this.bonusWin.setAnimation(0, \"animation1\", false)\r\n        this.bonusWin.setCompleteListener(function(){\r\n            this.bonusWin.setAnimation(0, \"animation2\", false)\r\n            //this.btn_back11.node.active = true\r\n            //this.btn_back11.node.setPosition(667.00,200)\r\n            this.btn_back11.node.on('click', btcallback, this);\r\n            this.btn_back.active = true\r\n            this.btn_back.on('click', btcallback, this);\r\n\r\n            let bmFont = this.btn_back11.node.getChildByName(\"bmFont\")\r\n            Help.scorllNumber(bmFont, 0, this.winScore, 1, function(node,num1){\r\n                node.getComponent(cc.Label).string = Help.FormatScore2(num1)\r\n                return \r\n            }) \r\n            this.bonusWin.paused = true\r\n\r\n            // let bmFont = new cc.Node(\"bmFont\")\r\n            // bmFont.addComponent(cc.Label)\r\n            // this.BNScene.addChild(bmFont,1000)\r\n            // bmFont.setPosition(667.00,200 + 150)\r\n            // cc.resources.load(\"games/game520/font/theme276_font_jp\", cc.Font, function(err, res){\r\n            //     bmFont.getComponent(cc.Label).font = res;\r\n            //     bmFont.getComponent(cc.Label).string = Help.FormatScore2(0)\r\n            //     Help.scorllNumber(bmFont, 0, this.winScore, 1, function(node,num1){\r\n            //         node.getComponent(cc.Label).string = Help.FormatScore2(num1)\r\n            //         return \r\n            //     }) \r\n            //     this.bonusWin.paused = true\r\n\r\n            // }.bind(this))\r\n\r\n        }.bind(this))\r\n        \r\n        \r\n\r\n    },\r\n\r\n    //创建奖励\r\n    CreateGoods(RewardGoodsID,RewardValue,GoodsID){\r\n\r\n        let FadeOutAction = cc.fadeOut(0.5)\r\n        this.BNSceneBtnList[this.SceneNum][GoodsID].runAction(FadeOutAction)\r\n\r\n        //金币奖励\r\n        if (RewardGoodsID == 1) {\r\n            \r\n            //todo\r\n            //this.m_parent._gameCtrl:playEffect(\"pick_money\")\r\n\r\n            let bmFont = new cc.Node(\"bmFont\")\r\n            bmFont.addComponent(cc.Label)\r\n            this.BNScene.addChild(bmFont,1000)\r\n\r\n            let a = this.BNSceneBtnList[this.SceneNum][GoodsID].parent.convertToWorldSpaceAR(cc.v2(this.BNSceneBtnList[this.SceneNum][GoodsID].x, this.BNSceneBtnList[this.SceneNum][GoodsID].y))\r\n            let b = this.BNScene.convertToNodeSpaceAR(a)\r\n           \r\n            bmFont.setPosition(b)\r\n            bmFont.setScale(0.5)\r\n            cc.resources.load(\"games/game520/font/theme276_font_jp\", cc.Font, function(err, res){\r\n                if(err){\r\n                    cc.log(err);\r\n                    return\r\n                };\r\n                bmFont.getComponent(cc.Label).font = res;\r\n                bmFont.getComponent(cc.Label).string = Help.FormatScore2(RewardValue)\r\n                let MoveAction = cc.moveTo(0.5,cc.v2(this.win_text.x,this.win_text.y))\r\n                let Func = cc.callFunc(function(){\r\n                                    bmFont.active = false\r\n\r\n                                    let oldNum = this.winScore\r\n                                    this.winScore = this.winScore + RewardValue\r\n                                    let newNum = this.winScore\r\n\r\n                                    Help.scorllNumber(this.win_text, oldNum, newNum, 0.5, function(node,num){\r\n                                        node.getComponent(cc.Label).string = Help.FormatScore2(num)\r\n                                        return\r\n                                    })\r\n\r\n                }.bind(this))\r\n                bmFont.runAction(cc.sequence(MoveAction,Func))                \r\n            }.bind(this))  \r\n\r\n        }\r\n        else if (RewardGoodsID == 2) {\r\n\r\n            //todo\r\n            //this.m_parent._gameCtrl:playEffect(\"pick_safebox\")\r\n\r\n            this.mima = RewardValue\r\n\r\n            //保险箱\r\n            let BaoXianXiangSpr = new cc.Node(\"BaoXianXiangSpr\")\r\n            BaoXianXiangSpr.addComponent(cc.Sprite)\r\n            this.BNScene.addChild(BaoXianXiangSpr,1000)\r\n            let a = this.BNSceneBtnList[this.SceneNum][GoodsID].parent.convertToWorldSpaceAR(cc.v2(this.BNSceneBtnList[this.SceneNum][GoodsID].x, this.BNSceneBtnList[this.SceneNum][GoodsID].y))\r\n            let b = this.BNScene.convertToNodeSpaceAR(a)\r\n           \r\n            BaoXianXiangSpr.setPosition(b)\r\n            \r\n            cc.resources.load(\"games/game520/texture/pick/theme276_bonus_pick_safe_s\",cc.SpriteFrame,function(err, SpriteFrame){\r\n                BaoXianXiangSpr.getComponent(cc.Sprite).spriteFrame = SpriteFrame;\r\n                BaoXianXiangSpr.setScale(0)\r\n                let ScaleAction = cc.scaleTo(1,1)\r\n                let EaseElasticOutAct = ScaleAction.easing(cc.easeElasticOut(0.35))\r\n                BaoXianXiangSpr.runAction(EaseElasticOutAct)\r\n            }.bind(this));\r\n\r\n            //延迟弹出保险箱\r\n            setTimeout(function(){\r\n                //todo\r\n                // this.m_parent._gameCtrl:playEffect(\"psd_popout\")\r\n                // this.m_parent._gameCtrl:playMuscic(\"pick4_bgm\")\r\n\r\n                BaoXianXiangSpr.removeFromParent()\r\n\r\n                this.Node_BaoXianXiang.active = true\r\n\r\n                //奖池节点动作\r\n                this.Jackpot_node.setPosition(0,-81)\r\n                let MoveAction = cc.moveTo(1,cc.v2(0,0)).easing(cc.easeElasticOut(0.35))\r\n                this.Jackpot_node.runAction(MoveAction)\r\n\r\n                //保险箱动画\r\n                this.BaoXianXiangskeleton = this.Node_BaoXianXiang.getChildByName(\"baoxianxiang\").getComponent(sp.Skeleton)\r\n                this.BaoXianXiangskeleton.node.active = true\r\n                this.BaoXianXiangskeleton.setAnimation(0, \"animation1\", false)\r\n\r\n                //纸张节点\r\n                this.bonus_s_frame.setScale(0)\r\n                let ScaleAction = cc.scaleTo(1,1).easing(cc.easeElasticOut(0.35))\r\n                \r\n                let Func = cc.callFunc(function(){ \r\n\r\n                    for (let i = 0;i < 4;i++) { \r\n                        //密码纸动画\r\n                        this.MiMaZhiSkeletonList[i] = this.bonus_s_frame.getChildByName(\"mimazhi_\" + Number(i + 1)).getComponent(sp.Skeleton)\r\n                        this.MiMaZhiSkeletonList[i].node.active = true\r\n                        this.MiMaZhiSkeletonList[i].setAnimation(0, \"animation2\", true)                        \r\n                    }\r\n\r\n                }.bind(this))\r\n\r\n                this.bonus_s_frame.runAction(cc.sequence(Func,ScaleAction))\r\n            }.bind(this), 1000)\r\n            \r\n            \r\n        }\r\n        else if (RewardGoodsID == 3) {\r\n            //todo\r\n            // this.m_parent._gameCtrl:playEffect(\"pick_skull\")\r\n            //骷髅\r\n            this.gostNum = this.gostNum + 1\r\n            let gost = new cc.Node(\"gost\")\r\n            gost.addComponent(cc.Sprite)\r\n            this.BNScene.addChild(gost,1000)\r\n            let a = this.BNSceneBtnList[this.SceneNum][GoodsID].parent.convertToWorldSpaceAR(cc.v2(this.BNSceneBtnList[this.SceneNum][GoodsID].x, this.BNSceneBtnList[this.SceneNum][GoodsID].y))\r\n            let b = this.BNScene.convertToNodeSpaceAR(a)\r\n           \r\n            gost.setPosition(b)\r\n            cc.resources.load(\"games/game520/texture/pick/theme276_bonus_gost\",cc.SpriteFrame,function(err, SpriteFrame){\r\n                gost.getComponent(cc.Sprite).spriteFrame = SpriteFrame;\r\n            }.bind(this));\r\n\r\n            \r\n            let MoveAction = cc.moveTo(1,cc.v2(this.bonus_gost_List[this.gostNum].x,this.bonus_gost_List[this.gostNum].y))\r\n            let Func = cc.callFunc(function(){ \r\n                                gost.active = false\r\n                                this.bonus_gost_List[this.gostNum].color = new cc.Color(255, 255, 255)\r\n                                if (this.gostNum >= 2) {\r\n                                    this.PlayBonusWinAni()\r\n                                }\r\n            }.bind(this))\r\n            gost.runAction(cc.sequence(MoveAction,Func))\r\n        }\r\n\r\n    },\r\n\r\n\r\n\r\n    //创建BN场景\r\n    CreateBNScene(){\r\n        \r\n        cc.resources.load(\"games/game520/prefab/BonusScenceLayer_Node\", cc.Prefab, function(err, prefab){\r\n            if(err){\r\n                cc.log(err);\r\n                return\r\n            };\r\n            this.SceneComplete = true\r\n            this.BNScene = cc.instantiate(prefab);\r\n            this.m_parent.node.addChild(this.BNScene,500)\r\n            this.BNScene.active = false\r\n\r\n\r\n            this.BNSceneList = []\r\n            this.BNSceneBtnList = [[],[],[]]\r\n            for (let i = 0;i < 3;i++) {\r\n                \r\n                this.BNSceneList[i] = this.BNScene.getChildByName(\"Node_\" + Number(i + 1))\r\n\r\n                for (let j = 0 ;j < 16;j++) {\r\n                    \r\n                    this.BNSceneBtnList[i][j] = this.BNSceneList[i].getChildByName(\"bg_pick\").getChildByName(\"btn_\" + Number(j + 1))\r\n                    this.BNSceneBtnList[i][j]._tag = j\r\n                    this.BNSceneBtnList[i][j].on('click', this.OnButtonClickedGoodsEvent, this);\r\n                    this.BNSceneBtnList[i][j].off('click', this.OnButtonClickedGoodsEvent, this);\r\n                }\r\n                \r\n            }\r\n\r\n            this.win_text = this.BNScene.getChildByName(\"win_text\")\r\n            this.win_text.getComponent(cc.Label).string = Help.FormatScore2(this.winScore)\r\n            this.win_text.setScale(0.4)\r\n\r\n            this.bonus_gost_List = []\r\n            this.bonus_gost_List[1] = this.BNScene.getChildByName(\"bonus_gost_1\") \r\n            this.bonus_gost_List[1].color = new cc.Color(77, 77, 77)\r\n            this.bonus_gost_List[2] = this.BNScene.getChildByName(\"bonus_gost_2\") \r\n            this.bonus_gost_List[2].color = new cc.Color(77, 77, 77)\r\n            \r\n            this.btn_back = this.BNScene.getChildByName(\"btn_back\") \r\n            this.btn_back.active = false\r\n            \r\n            this.pick_your_treasure = this.BNScene.getChildByName(\"pick_your_treasure\") \r\n            \r\n            //保险箱界面节点\r\n            this.Node_BaoXianXiang = this.BNScene.getChildByName(\"Node_BaoXianXiang\") \r\n            this.Node_BaoXianXiang.active = false\r\n             \r\n            //奖池显示节点\r\n            this.Jackpot_node = this.Node_BaoXianXiang.getChildByName(\"Jackpot_node\")\r\n            this.JackpotTextList = []\r\n            //奖池框\r\n            this.JackpotKuang = []\r\n            //奖池标题\r\n            this.Jackpottitle = []\r\n            for (let i = 0;i < 4;i++) {\r\n                \r\n                this.JackpotTextList[i] = this.Jackpot_node.getChildByName(\"JackpotText_\" + Number(i + 1))\r\n                this.SetJackpot(i,this.m_parent.JackpotNum[i])\r\n                this.JackpotKuang[i] = this.Jackpot_node.getChildByName(\"Image_\" + Number(i + 1))\r\n                this.Jackpottitle[i] = this.Jackpot_node.getChildByName(\"title_\" + Number(i + 1))\r\n\r\n                this.JackpotKuang[i].spin = this.JackpotKuang[i].getChildByName(\"gaoliang_jiangchi\").getComponent(sp.Skeleton)\r\n                this.JackpotKuang[i].spin.setAnimation(0, \"animation\" + Number(i + 1), true)\r\n                this.JackpotKuang[i].spin.node.active = false\r\n\r\n            }\r\n\r\n            this.SetjiangchiAni(this.m_parent._gameCtrl.gameModel_520._UnlockRewardID) \r\n\r\n            \r\n            //纸张背景节点\r\n            this.bonus_s_frame = this.Node_BaoXianXiang.getChildByName(\"bonus_s_frame\") \r\n            //纸张按钮\r\n            this.btn_pass_List = []\r\n            //密码纸动画\r\n            this.MiMaZhiSkeletonList = []\r\n\r\n            for (let i = 0;i < 4;i++) {\r\n                \r\n                this.btn_pass_List[i] = this.bonus_s_frame.getChildByName(\"btn_pass_\" + Number(i+1)) \r\n                this.btn_pass_List[i]._tag = i\r\n                this.btn_pass_List[i].on('click', this.OnButtonClickedMiMaZhiEvent, this);\r\n            }\r\n            \r\n            //密码器节点\r\n            this.pick2_bg = this.Node_BaoXianXiang.getChildByName(\"pick2_bg\") \r\n            //密码器节点\r\n            this.pick2_bg.active = false\r\n\r\n            //密码显示\r\n            this.mimaNum_text_list = []\r\n            for (let i = 0;i < 4;i++) {\r\n                this.mimaNum_text_list[i] = this.pick2_bg.getChildByName(\"mimaNum_text_\" + Number(i+1)) \r\n                this.mimaNum_text_list[i].getComponent(cc.Label).string = \"\" \r\n            }\r\n\r\n            //密码按键\r\n            this.pick2_btn_List = []\r\n            for (let i = 0;i < 9;i++) {\r\n                this.pick2_btn_List[i] = this.pick2_bg.getChildByName(\"pick2_btn_\" + Number(i+1)) \r\n            }    \r\n        }.bind(this))  \r\n\r\n        \r\n    },\r\n\r\n    //开保险箱\r\n    KaiBaoXianXiang(num,RewardID){\r\n\r\n        this.CheckMiMaZhi(this.clickMima,RewardID - 1)\r\n\r\n        setTimeout(function(){\r\n            //todo\r\n            //this.m_parent._gameCtrl:playEffect(\"psd_dis_chest_open\")\r\n            \r\n            this.SetjiangchiAniName(RewardID)\r\n            \r\n            this.BaoXianXiangskeleton.setAnimation(0, \"animation2\", true)\r\n            \r\n            this.bonus_s_frame.setScale(1)\r\n            let ScaleAction1 = cc.scaleTo(0.2,0)\r\n            let Func1 = cc.callFunc(function (){\r\n                this.bonus_s_frame.active = false   \r\n                this.pick2_bg.setScale(0)\r\n                this.pick2_bg.active = true       \r\n                let ScaleAction2 = cc.scaleTo(0.2,1)\r\n                let Func2 = cc.callFunc(function (){\r\n                    setTimeout(function(){\r\n                        for (let i = 0;i < 4;i++) {\r\n                            setTimeout(function(){\r\n                                this.mimaNum_text_list[i].getComponent(cc.Label).string = mimaWin[RewardID-1][i]\r\n\r\n                                \r\n                                cc.resources.load(\"games/game520/texture/pick/theme276_pick2_btn_2\", cc.SpriteFrame, function(err, res){\r\n                                    if(err){\r\n                                        cc.log(err);\r\n                                        return\r\n                                    };\r\n                                    this.pick2_btn_List[mimaWin[RewardID-1][i] - 1].getComponent(cc.Sprite).spriteFrame = res\r\n\r\n                                    setTimeout(function(){\r\n\r\n                                        cc.resources.load(\"games/game520/texture/pick/theme276_pick2_btn\", cc.SpriteFrame, function(err, res){\r\n                                            if(err){\r\n                                                cc.log(err);\r\n                                                return\r\n                                            };\r\n\r\n                                            this.pick2_btn_List[mimaWin[RewardID-1][i] - 1].getComponent(cc.Sprite).spriteFrame = res\r\n    \r\n                                            if (i === 3) {\r\n        \r\n                                                setTimeout(function(){\r\n                                                    this.JackpotKuang[RewardID-1].spin.node.active = true\r\n                                                    this.pick2_bg.active = false\r\n                                                    this.BaoXianXiangskeleton.setAnimation(0, this.jiangchiName, false)\r\n                                                    //todo\r\n                                                    //this.m_parent._gameCtrl:playEffect(this.jiangchiAudio)\r\n                                                    this.BaoXianXiangskeleton.setCompleteListener(function(){\r\n                                                        let fadeOutAction = cc.fadeOut(2)\r\n                                                        let fun = cc.callFunc(function (){\r\n                                                            this.Node_BaoXianXiang.active = false\r\n        \r\n                                                            let bmFont = new cc.Node(\"bmFont\")\r\n                                                            bmFont.addComponent(cc.Label)\r\n                                                            this.BNScene.addChild(bmFont,1000)\r\n                                                            cc.resources.load(\"games/game520/font/theme276_font_jp\", cc.Font, function(err, res){\r\n                                                                if(err){\r\n                                                                    cc.log(err);\r\n                                                                    return\r\n                                                                };\r\n                                                                bmFont.getComponent(cc.Label).font = res;\r\n                                                                bmFont.getComponent(cc.Label).string = Help.FormatScore2(num)\r\n                                                                bmFont.setPosition(667,173)\r\n                                                                bmFont.setScale(0.5)\r\n                                                                let MoveAction = cc.moveTo(0.5,cc.v2(this.win_text.x,this.win_text.y))\r\n                                                                let Func = cc.callFunc(function(){ \r\n                                                                    bmFont.active = false\r\n            \r\n                                                                    let oldNum = this.winScore\r\n                                                                    this.winScore = this.winScore + num\r\n                                                                    let newNum = this.winScore\r\n            \r\n                                                                    Help.scorllNumber(this.win_text, oldNum, newNum, 1, function(node,num1){\r\n                                                                        node.getComponent(cc.Label).string = Help.FormatScore2(num1)\r\n                                                                        return\r\n                                                                    }.bind(this))\r\n            \r\n                                                                }.bind(this))\r\n                                                                \r\n                                                                bmFont.runAction(cc.sequence(MoveAction,Func))\r\n                                                            }.bind(this))  \r\n        \r\n                                                        }.bind(this))\r\n        \r\n                                                        this.Node_BaoXianXiang.runAction(cc.sequence(fadeOutAction,fun))\r\n                                                            \r\n                                                    }.bind(this))\r\n                                                }.bind(this),1000)\r\n        \r\n                                            }\r\n                                        }.bind(this))\r\n\r\n                                        \r\n                                    }.bind(this),300)\r\n                                }.bind(this))  \r\n\r\n                                \r\n\r\n                            }.bind(this),500 * i)\r\n                    \r\n\r\n\r\n                        }      \r\n                    }.bind(this), 1000)\r\n\r\n                    \r\n                }.bind(this))\r\n                this.pick2_bg.runAction(cc.sequence(ScaleAction2,Func2))\r\n            }.bind(this))\r\n\r\n            this.bonus_s_frame.runAction(cc.sequence(ScaleAction1,Func1)) \r\n\r\n        }.bind(this), 2000)\r\n        \r\n\r\n\r\n    },\r\n\r\n    //保险箱开奖池动画名字选择\r\n    SetjiangchiAniName(id){ \r\n        if (id === 1 || id === 0) {\r\n            this.jiangchiName = \"animation6\"\r\n            this.jiangchiAudio = \"mini_dia\"\r\n        }\r\n        else if (id === 2) {\r\n            this.jiangchiName = \"animation5\"\r\n            this.jiangchiAudio = \"minor_dia\"\r\n        }  \r\n        else if (id === 3) {\r\n            this.jiangchiName = \"animation4\"\r\n            this.jiangchiAudio = \"major_dia\"\r\n        }\r\n        else if (id === 4) {\r\n            this.jiangchiName = \"animation3\"\r\n            this.jiangchiAudio = \"grand_dia\"\r\n        }\r\n    },\r\n\r\n    //保险箱开奖池动画选择\r\n    SetjiangchiAni(num) {\r\n    \r\n        //上锁\r\n        if (num == 0) {\r\n            for (let i = 0;i < 4;i++) {\r\n                cc.resources.load(\"games/game520/font/theme_font_base_jp2\", cc.Font, function(err, res){\r\n                    if(err){\r\n                        cc.log(err);\r\n                        return\r\n                    };                    \r\n                    this.JackpotTextList[i].getComponent(cc.Label).font = res\r\n                }.bind(this))\r\n\r\n                cc.resources.load(\"games/game520/texture/base/theme276_jp1_frame_lock\", cc.SpriteFrame, function(err, res){\r\n                    if(err){\r\n                        cc.log(err);\r\n                        return\r\n                    };                    \r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame = res\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetTop = 24 \r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetBottom = 24\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetLeft = 26\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetRight = 26\r\n                }.bind(this))\r\n\r\n                cc.resources.load(\"games/game520/texture/base/title_lock_\" + Number(i + 1), cc.SpriteFrame, function(err, res){\r\n                    if(err){\r\n                        cc.log(err);\r\n                        return\r\n                    };                    \r\n                    this.Jackpottitle[i].getComponent(cc.Sprite).spriteFrame = res\r\n                }.bind(this))\r\n            }  \r\n            return\r\n        }\r\n\r\n        for (let i = 0;i < 4;i++) {\r\n            //解锁\r\n            if (num >= i) {  \r\n                cc.resources.load(\"games/game520/font/theme_font_base_jp1\", cc.Font, function(err, res){\r\n                    if(err){\r\n                        cc.log(err);\r\n                        return\r\n                    };                    \r\n                    this.JackpotTextList[i].getComponent(cc.Label).font = res\r\n                }.bind(this))\r\n\r\n                cc.resources.load(\"games/game520/texture/base/theme276_jp1_frame\", cc.SpriteFrame, function(err, res){\r\n                    if(err){\r\n                        cc.log(err);\r\n                        return\r\n                    };                    \r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame = res\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetTop = 24 \r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetBottom = 24\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetLeft = 26\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetRight = 26\r\n                }.bind(this))\r\n\r\n                cc.resources.load(\"games/game520/texture/base/title_\" + Number(i + 1), cc.SpriteFrame, function(err, res){\r\n                    if(err){\r\n                        cc.log(err);\r\n                        return\r\n                    };                    \r\n                    this.Jackpottitle[i].getComponent(cc.Sprite).spriteFrame = res\r\n                }.bind(this))          \r\n            }\r\n            else{\r\n            //上锁\r\n                cc.resources.load(\"games/game520/font/theme_font_base_jp2\", cc.Font, function(err, res){\r\n                    if(err){\r\n                        cc.log(err);\r\n                        return\r\n                    };                    \r\n                    this.JackpotTextList[i].getComponent(cc.Label).font = res\r\n                }.bind(this))\r\n\r\n                cc.resources.load(\"games/game520/texture/base/theme276_jp1_frame_lock\", cc.SpriteFrame, function(err, res){\r\n                    if(err){\r\n                        cc.log(err);\r\n                        return\r\n                    };                    \r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame = res\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetTop = 24 \r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetBottom = 24\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetLeft = 26\r\n                    this.JackpotKuang[i].getComponent(cc.Sprite).spriteFrame.insetRight = 26\r\n                }.bind(this))\r\n\r\n                cc.resources.load(\"games/game520/texture/base/title_lock_\" + Number(i + 1), cc.SpriteFrame, function(err, res){\r\n                    if(err){\r\n                        cc.log(err);\r\n                        return\r\n                    };                    \r\n                    this.Jackpottitle[i].getComponent(cc.Sprite).spriteFrame = res\r\n                }.bind(this))   \r\n            }        \r\n        }\r\n\r\n    },\r\n\r\n    //选择密码纸动画\r\n    CheckMiMaZhi(tag,RewardID){\r\n        //todo\r\n        //this.m_parent._gameCtrl:playEffect(\"psd_click_reveal\")\r\n\r\n        let mimatab = Help.deepClone(mimaTemp1)\r\n\r\n        for (let i = 0; i < 4;i++) {\r\n            this.btn_pass_List[i].active = false\r\n        }\r\n\r\n        this.MiMaZhiSkeletonList[tag].setAnimation(0, \"animation3\", false)\r\n\r\n        let bmFont = new cc.Node(\"bmFont\")\r\n        bmFont.addComponent(cc.Label)\r\n        this.MiMaZhiSkeletonList[tag].node.addChild(bmFont)\r\n        cc.resources.load(\"games/game520/font/theme276_font_bonus_password\", cc.Font, function(err, res){\r\n            if(err){\r\n                cc.log(err);\r\n                return\r\n            };\r\n            bmFont.getComponent(cc.Label).font = res;\r\n            bmFont.getComponent(cc.Label).string = mimatab[RewardID]\r\n            bmFont.setScale(0)\r\n            let ScaleAction = cc.scaleTo(0.5,1) \r\n            bmFont.runAction(ScaleAction)\r\n            mimatab.splice(RewardID, 1);\r\n        }.bind(this))  \r\n\r\n\r\n        this.MiMaZhiSkeletonList[tag].setCompleteListener(function(){\r\n                let This = this\r\n                for(let i = 0;i < 4;i++) {               \r\n                    if (i != tag) {\r\n                        This.MiMaZhiSkeletonList[i].setAnimation(0, \"animation3\", false)\r\n\r\n                        let bmFont = new cc.Node(\"bmFont\")\r\n                        bmFont.addComponent(cc.Label)\r\n                        This.MiMaZhiSkeletonList[i].node.addChild(bmFont)\r\n                        cc.resources.load(\"games/game520/font/theme276_font_bonus_password\", cc.Font, function(err, res){\r\n                            if(err){\r\n                                cc.log(err);\r\n                                return\r\n                            };\r\n                            bmFont.getComponent(cc.Label).font = res;\r\n                            bmFont.getComponent(cc.Label).string = mimatab[0]\r\n                            bmFont.setScale(0)\r\n                            let ScaleAction = cc.scaleTo(0.5,1) \r\n                            bmFont.runAction(ScaleAction)\r\n                            This.MiMaZhiSkeletonList[i].node.color = new cc.Color(77, 77, 77);\r\n                            mimatab.splice(0, 1);\r\n                        }.bind(this))  \r\n                    }\r\n                }  \r\n                \r\n        }.bind(this))\r\n    \r\n    },\r\n\r\n    //设置奖池显示\r\n    SetJackpot(id,JackpotNum){\r\n\r\n        this.JackpotTextList[id].getComponent(cc.Label).string = Help.FormatScore2(JackpotNum,2)\r\n\r\n    },\r\n\r\n    //切换BN场景\r\n    SwitchBNScene(id){\r\n\r\n        for (let i = 0;i < 3;i++) {\r\n            this.BNSceneList[i].active = i == id ? true : false     \r\n        }\r\n    \r\n    },\r\n\r\n    //显示BNScene\r\n    ShowBNScene(){\r\n        this.BNScene.active = true\r\n    },\r\n\r\n    //选择物品按钮事件\r\n    OnButtonClickedGoodsEvent(){\r\n    \r\n        //todo\r\n        //this.m_parent._gameCtrl:playEffect(\"pick_click\")\r\n\r\n        this.m_parent._gameCtrl.requestRewardChoose(arguments[0].node._tag)\r\n        this.pick_your_treasure.active = false\r\n        for (let j = 0 ;j < 16;j++) {\r\n            this.BNSceneBtnList[this.SceneNum][j].off('click', this.OnButtonClickedGoodsEvent, this);\r\n        }\r\n\r\n        setTimeout(function(){\r\n            for (let j = 0 ;j < 16;j++) {\r\n                this.BNSceneBtnList[this.SceneNum][j].on('click', this.OnButtonClickedGoodsEvent, this);\r\n            }     \r\n        }.bind(this), 1000)\r\n\r\n    },\r\n\r\n    //选择密码纸事件\r\n    OnButtonClickedMiMaZhiEvent(tag){\r\n        //todo\r\n        this.clickMima = arguments[0].node._tag\r\n        \r\n        this.m_parent._gameCtrl.requestMailBoxReward(this.mima)\r\n\r\n    },\r\n\r\n});\r\nmodule.exports = BonusLayer;","\n\n\nmodule.exports = puremvc.define(\n\t{\n\t\tparent: puremvc.SimpleCommand\n\t},\n\t{\n\t\texecute: function (gameinfo,app) {\n\n\t\t\tlet _gameinfo = gameinfo\n\n\t\t\t//添加新游戏代理\n\t\t\tlet gameProxy = this.facade.retrieveProxy('GameProxy');\n\t\t\tif(gameProxy != null){\t\n\t\t\t\tthis.facade.removeProxy('GameProxy');\n\t\t\t}\n\n\t\t\tlet GameProxy = require('Game_'+ _gameinfo +'_Proxy');\n\t\t\tthis.facade.addProxy(new GameProxy());\t\n\n\t\t\tgameProxy = this.facade.retrieveProxy('GameProxy');\n\n\n\t\t\t//添加新桌子代理\n\t\t\tlet gameTableProxy = this.facade.retrieveProxy('GameTableProxy');\n\t\t\tif(gameTableProxy != null){\t\n\t\t\t\tthis.facade.removeProxy('GameTableProxy');\n\t\t\t}\n\t\t\tlet GameTableProxy = require('GameTableProxy');\n\t\t\tthis.facade.addProxy(new GameTableProxy());\n\n\t\t\tgameTableProxy = this.facade.retrieveProxy('GameTableProxy');\n\t\t\tthis.facade.registerProxy();\n\t\t\t\n\n\t\t\t// let app = KBEngine.createApp();\n\t\t\t// app.wssAddr = LobbyServerAddr;\n\n\n\t\t\tgameTableProxy.registerNetInterface(app,_gameinfo);\n\t\t\tgameProxy.registerNetInterface(app,_gameinfo);\n\n\n\t\t}\n\t},\n\t{\n\t\tNAME: 'EnterGameScenceCommand'\n\t});","\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n\n\n    onLoad () {\n\n        cc.game.addPersistRootNode(this.node)\n        \n        cc.systemEvent.setAccelerometerEnabled(true); // 启用加速度计\n        cc.systemEvent.on(cc.SystemEvent.EventType.DEVICEMOTION, function (event) {\n\n            let s1 = cc.view.getFrameSize(); //屏幕尺寸\n            let s2 = cc.view.getDesignResolutionSize(); //设计分辨率\n    \n            let game_set = {}\n            game_set.real_size = {}\n            let ttt= s1.width/s1.height;\n            if(ttt >= s2.width/s2.height){\n                //手机 或 左右有黑边,\n                game_set.real_size.h = s2.height;\n                game_set.real_size.w = s2.height*ttt;\n    \n            }else{\n                //4:3 电脑 上下有黑边\n                game_set.real_size.h = s2.width/ttt;\n                game_set.real_size.w =s2.width;\n    \n            }\n\n            let node = cc.director.getScene().getChildByName(\"Fillbackground\");\n    \n            node.setScale(4)\n            node.setContentSize(game_set.real_size.w, game_set.real_size.h); \n            //this.node.setContentSize(game_set.real_size.w, game_set.real_size.h); \n        });\n        \n    },\n\n    start () {\n\n    },\n\n    // update (dt) {},\n\n\n\n});\n","\r\nlet FishStartUpCommand = require('FishStartUpCommand');\r\n\r\nlet FishFacade = puremvc.define(\r\n    {\r\n        parent: puremvc.Facade,\r\n        constructor: function (multitonKey) {\r\n            puremvc.Facade.call(this, multitonKey);\r\n            this.isInit = false;\r\n        }\r\n    },\r\n    {\r\n        initializeModel: function () {\r\n            puremvc.Facade.prototype.initializeModel.call(this);\r\n        },\r\n\r\n        initializeView: function () {\r\n            puremvc.Facade.prototype.initializeView.call(this);\r\n        },\r\n\r\n        initializeController: function () {\r\n            puremvc.Facade.prototype.initializeController.call(this);\r\n            this.registerCommand(FishConstants.START_UP, FishStartUpCommand);\r\n        },\r\n\r\n        startup: function () {\r\n            if (!this.isInit) {\r\n                this.sendNotification(FishConstants.START_UP);\r\n                this.isInit = true;\r\n            }\r\n        }\r\n    },\r\n    {\r\n        getInstance: function (multitonKey) {\r\n            let instanceMap = puremvc.Facade.instanceMap;\r\n            let instance = instanceMap[multitonKey];\r\n            if (instance) {\r\n                return instance;\r\n            } else {\r\n                instance = instanceMap[multitonKey] = new FishFacade(multitonKey);\r\n                return instance;\r\n            }\r\n        },\r\n\r\n        NAME: 'FishFacade'\r\n    });\r\n\r\nmodule.exports = FishFacade.getInstance('FishFacade');\r\n","let FishGlobalData = require('FishGlobalData');\r\n\r\nmodule.exports = puremvc.define(\r\n\t{\r\n\t\tparent: puremvc.Proxy,\r\n\t\tconstructor: function () {\r\n\t\t\tpuremvc.Proxy.call(this);\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tsetFishApp: function (app) {\r\n\t\t\tFishGlobalData.fishApp = app;\r\n\t\t\treturn app;\r\n\t\t},\r\n\r\n\t\tgetFishApp: function () {\r\n\t\t\treturn FishGlobalData.fishApp;\r\n\t\t},\r\n\r\n\t\tsetGameLobbyApp: function (app) {\r\n\t\t\tFishGlobalData.gameLobbyApp = app;\r\n\t\t\treturn app;\r\n\t\t},\r\n\r\n\t\tgetGameLobbyApp: function () {\r\n\t\t\treturn FishGlobalData.gameLobbyApp;\r\n\t\t},\r\n\r\n\t\tgetLogonSuccessData: function () {\r\n\t\t\treturn FishGlobalData.logonSuccessData;\r\n\t\t},\r\n\r\n\t\tsetLogonSuccessData: function (logonSuccessData) {\r\n\t\t\treturn FishGlobalData.logonSuccessData = logonSuccessData\r\n\t\t},\r\n\r\n\t\tgetGameServerInfo: function () {\r\n\t\t\treturn FishGlobalData.GameServerInfo;\r\n\t\t},\r\n\r\n\t\tsetFishServerIpPort: function (ip, port) {\r\n\t\t\tFishGlobalData.fishServerIp = ip;\r\n\t\t\tFishGlobalData.fishServerPort = port;\r\n\t\t},\r\n\r\n\t\tgetFishServerPort: function () {\r\n\t\t\treturn FishGlobalData.fishServerPort;\r\n\t\t},\r\n\r\n\t\tgetFishServerIp: function () {\r\n\t\t\treturn FishGlobalData.fishServerIp;\r\n\t\t},\r\n\r\n\t\tgetFishGameKind: function () {\r\n\t\t\treturn FishGlobalData.fishGameKind;\r\n\t\t},\r\n\r\n\t\tsetUserInfo: function (account, password) {\r\n\t\t\tFishGlobalData.account = account;\r\n\t\t\tFishGlobalData.password = password;\r\n\t\t},\r\n\r\n\t\tgetUserId: function () {\r\n\t\t\treturn FishGlobalData.userId;\r\n\t\t},\r\n\r\n\t\tsetUserId: function (uesrId) {\r\n\t\t\tFishGlobalData.userId = uesrId;\r\n\t\t},\r\n\r\n\t\tgetAccount: function () {\r\n\t\t\treturn FishGlobalData.account;\r\n\t\t},\r\n\r\n\t\tgetPassword: function () {\r\n\t\t\treturn FishGlobalData.password;\r\n\t\t},\r\n\r\n\t\tsetTableId: function (tableId) {\r\n\t\t\tFishGlobalData.tableId = tableId;\r\n\t\t},\r\n\r\n\t\tsetChairId: function (chairId) {\r\n\t\t\tFishGlobalData.chairId = chairId;\r\n\t\t},\r\n\r\n\t\tgetTableId: function () {\r\n\t\t\treturn FishGlobalData.tableId;\r\n\t\t},\r\n\r\n\t\tgetChairId: function () {\r\n\t\t\treturn FishGlobalData.chairId;\r\n\t\t},\r\n\r\n\t\tgetWXUserInfo: function () {\r\n\t\t\treturn FishGlobalData.wxUserInfo;\r\n\t\t},\r\n\r\n\t\tsetWXUserInfo: function (headImgUrl, openId, session_key, unionId, gender, nickName) {\r\n\t\t\tvar wxUserInfo = FishGlobalData.wxUserInfo;\r\n\t\t\twxUserInfo.headImgUrl = headImgUrl;\r\n\t\t\twxUserInfo.openId = openId;\r\n\t\t\twxUserInfo.session_key = session_key;\r\n\r\n\t\t\twxUserInfo.unionId = unionId;\r\n\t\t\twxUserInfo.gender = gender;\r\n\t\t\twxUserInfo.nickName = nickName;\r\n\t\t},\r\n\r\n\t\tgetNickName: function () {\r\n\t\t\treturn FishGlobalData.wxUserInfo.nickName || FishGlobalData.account;\r\n\t\t},\r\n\r\n\t\t// getNickName: function () {\r\n\t\t// \treturn FishGlobalData.wxUserInfo.nickName ;\r\n\t\t// },\r\n\r\n\t\tgetHeadImgUrl: function () {\r\n\t\t\treturn FishGlobalData.wxUserInfo.headImgUrl;\r\n\t\t},\r\n\r\n\t\tgetOpenId: function () {\r\n\t\t\treturn FishGlobalData.wxUserInfo.openId;\r\n\t\t},\r\n\r\n\t\tgetUnionId: function () {\r\n\t\t\treturn FishGlobalData.wxUserInfo.unionId;\r\n\t\t},\r\n\r\n\t\tsetNewUserGuideStep: function (newUserGuideStep) {\r\n\t\t\tFishGlobalData.newUserGuideStep = newUserGuideStep;\r\n\t\t},\r\n\r\n\t\tgetNewUserGuideStep: function () {\r\n\t\t\treturn FishGlobalData.newUserGuideStep;\r\n\t\t},\r\n\r\n\t\tsetInviteUserID: function (InviteUserID) {\r\n\t\t\tFishGlobalData.InviteUserID = InviteUserID;\r\n\t\t},\r\n\r\n\t\tgetInviteUserID: function () {\r\n\t\t\treturn FishGlobalData.InviteUserID;\r\n\t\t},\r\n\t\t\r\n\t\tsetNewUserWelfareLayerData: function (newUserWelfareLayerData) {\r\n\t\t\tFishGlobalData.newUserWelfareLayerData = newUserWelfareLayerData;\r\n\t\t},\r\n\r\n\t\tgetNewUserWelfareLayerData: function () {\r\n\t\t\treturn FishGlobalData.newUserWelfareLayerData;\r\n\t\t},\r\n\r\n\t\tsetNewUserMissionLayerData: function (newUserMissionLayerData) {\r\n\t\t\tFishGlobalData.newUserMissionLayerData = newUserMissionLayerData;\r\n\t\t},\r\n\r\n\t\tgetNewUserMissionLayerData: function () {\r\n\t\t\treturn FishGlobalData.newUserMissionLayerData;\r\n\t\t},\r\n\r\n\t},\r\n\t{\r\n\t\tNAME: 'FishGlobalDataProxy'\r\n\t});","\r\nmodule.exports = {\r\n\ttableId: 65535,\r\n\tchairId: 65535,\r\n\tfishServerPort: null,\r\n\tfishServerIp: null,\r\n\tfishGameKind: 151,\r\n\tfishApp: null,\r\n\tgameLobbyApp: null,\r\n\tuserId: -1,\r\n\tpassword: '',\r\n\taccount: '',\r\n\twxUserInfo: {\r\n\t\theadImgUrl: '',\r\n\t\topenId: '',\r\n\t\tsession_key: '',\r\n\t\tunionId: '',\r\n\t\tgender: 0,\r\n\t\tnickName: '',\r\n\t},\r\n\tnewUserGuideStep: 100,               //新手引导id    \r\n\tInviteUserID: 0,                     //邀请人\r\n\tGameServerInfo: {},\r\n\tlogonSuccessData: {},\r\n\tnewUserWelfareLayerData: null,\r\n\tnewUserMissionLayerData: null,\r\n\r\n};","let GameLobbyLoginCommand = require('GameLobbyLoginCommand');\r\n;\r\nlet EnterGameScenceCommand = require('EnterGameScenceCommand');\r\nlet GameTableCommand = require('GameTableCommand');\r\nlet GameCommand = require('GameCommand');\r\n\r\n\r\nmodule.exports = puremvc.define(\r\n{\r\n\tparent : puremvc.SimpleCommand\r\n},\r\n{\r\n\texecute  : function() {\r\n\t\tthis.facade.registerCommand(FishConstants.LOGIN_LOBBY, GameLobbyLoginCommand);\r\n\r\n\t\tthis.facade.registerCommand(FishConstants.ENTER_GAME_SCENCE, EnterGameScenceCommand);\r\n\t\tthis.facade.registerCommand(FishConstants.GAME_TABLE_COMMAND, GameTableCommand);\t//桌子功能命令\r\n\t\tthis.facade.registerCommand(FishConstants.GAME_COMMAND, GameCommand);\t//游戏命令\r\n\t}\r\n},\r\n{\r\n\tNAME : 'FishPrepControllerCommand'\r\n});","\r\nlet FishGlobalDataProxy = require('FishGlobalDataProxy');\r\nlet GameLobbyLoginProxy = require('GameLobbyLoginProxy');\r\nlet GameListDataProxy = require('GameListDataProxy');\r\n\r\nmodule.exports = puremvc.define({\r\n\tparent : puremvc.SimpleCommand\r\n},\r\n{\r\n\texecute : function() {\r\n\t\tthis.facade.addProxy(new FishGlobalDataProxy());\r\n\t\tthis.facade.addProxy(new GameLobbyLoginProxy());\r\n\r\n\t\tthis.facade.addProxy(new GameListDataProxy());\r\n\t\t\r\n\r\n\t\tthis.facade.registerProxy();\r\n\t}\r\n},\r\n{\r\n\tNAME : 'FishPrepModelCommand'\r\n});","let FishPrepModelCommand = require('FishPrepModelCommand');\r\nlet FishPrepControllerCommand = require('FishPrepControllerCommand');\r\n\r\nmodule.exports = puremvc.define(\r\n\t{\r\n\t\tparent: puremvc.MacroCommand\r\n\t},\r\n\t{\r\n\t\tinitializeMacroCommand: function () {\r\n\t\t\tthis.addSubCommand(FishPrepModelCommand);\r\n\t\t\tthis.addSubCommand(FishPrepControllerCommand);\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tNAME: 'FishStartUpCommand'\r\n\t});","\r\nmodule.exports = puremvc.define(\r\n\t{\r\n\t\tparent: puremvc.SimpleCommand\r\n\t},\r\n\t{\r\n\t\texecute: function () {\r\n\t\t\tlet GameProxy = this.facade.retrieveProxy('GameProxy');\r\n            //FishConstants.GAME_COMMAND\r\n            switch(arguments[0]) {\r\n                case \"startSpin\":\r\n                \tGameProxy.startSpin();\r\n                \tbreak;\r\n\t\t\t\tcase \"onGetNoticeReady\":\r\n                \tGameProxy.onGetNoticeReady();\r\n                \tbreak;\r\n\t\t\t\tcase \"stopSpin\":\r\n\t\t\t\t\tGameProxy.stopSpin();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"autoSpin\":\r\n\t\t\t\t\tGameProxy.autoSpin(arguments[1]);\r\n\t\t\t\t\tbreak;\t\r\n\t\t\t\tcase \"subBet\":\r\n\t\t\t\t\tGameProxy.subBet();\r\n\t\t\t\t\tbreak;\t\r\n\t\t\t\tcase \"addBet\":\r\n\t\t\t\t\tGameProxy.addBet();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"maxBet\":\r\n\t\t\t\t\tGameProxy.maxBet();\r\n\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\r\n                default:\r\n                    cc.log('未知命令');\r\n           } \r\n\r\n\r\n\t\t   \r\n\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tNAME: 'GameCommand'\r\n\t});","var UIManager = require('gameUIManager');\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        pageView: {\n            default: null,\n            type: cc.PageView\n        },\n        btnBack: {\n            default: null,\n            type: cc.Button\n        },\n        btn_left: {\n            default: null,\n            type: cc.Button\n        },\n        btn_right: {\n            default: null,\n            type: cc.Button\n        },\n    },\n\n    init: function () {\n\n    },\n\n    onLoad: function () {\n\n        this.btnBack.node.on('click', this.BackButtonClickEvent, this);\n        this.pageView.setCurrentPageIndex(0)\n        this.btn_left.node.on('click', this.LeftButtonClickEvent, this);\n        this.btn_right.node.on('click', this.RightButtonClickEvent, this);\n    },\n\n    BackButtonClickEvent: function () {\n        if (this.node.kindId){\n            let uiManager = new UIManager(this.node.kindId)\n            uiManager.closeUI(this.node.viewId)\n        }else{\n            cc.log(\"the kindId is null\");\n        }\n    },\n\n    LeftButtonClickEvent: function () {\n\n        if (this.pageView.getCurrentPageIndex() == 0) {\n            this.pageView.scrollToPage(5)\n        }\n        else{\n            this.pageView.scrollToPage(this.pageView.getCurrentPageIndex() - 1)\n        }\n\n    },\n\n    RightButtonClickEvent: function () {\n\n        if (this.pageView.getCurrentPageIndex() == 5) {\n            this.pageView.scrollToPage(0)\n        }\n        else{\n            this.pageView.scrollToPage(this.pageView.getCurrentPageIndex() + 1)\n        }\n\n    },\n\n    onDestroy: function () {\n\n    },\n\n  \n});","let GameListData = require('GameListData');\r\n\r\nmodule.exports = puremvc.define(\r\n\t{\r\n\t\tparent: puremvc.Proxy,\r\n\t\tconstructor: function () {\r\n\t\t\tpuremvc.Proxy.call(this);\r\n\t\t}\r\n\t},\r\n\t{\r\n\r\n        GetGameItemInfo: function (kindId) {\r\n            \r\n            for (var i = 0, len = GameListData.GameItmeList.length; i < len; i++) {\r\n                if(GameListData.GameItmeList[i].wKindID == kindId){\r\n                    return GameListData.GameItmeList[i];\r\n                }\r\n            }\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t\r\n\r\n\t\tSetGameItem: function (ItemTableData) {\r\n            \r\n            for (var i = 0, len = ItemTableData.length; i < len; i++) {\r\n                if(ItemTableData[i].wKindID>0){\r\n                    itemfind = this.GetGameItemInfo(ItemTableData[i].wKindID)\r\n                    if(itemfind == null){\r\n                        GameListData.GameItmeList.push(ItemTableData[i])\r\n                    }\r\n                }\r\n            }\r\n\t\t\treturn ItemTableData;\r\n\t\t},\r\n\r\n\t\tGetGameItmeList: function () {            \r\n\t\t\treturn GameListData.GameItmeList;\r\n\t\t},       \r\n\r\n\r\n\t},\r\n\t{\r\n\t\tNAME: 'GameListDataProxy'\r\n\t});","\r\nmodule.exports = {\r\n\r\n\tGameItmeList: [],\r\n\r\n};","\r\nmodule.exports = puremvc.define(\r\n\t{\r\n\t\tparent: puremvc.SimpleCommand\r\n\t},\r\n\t{\r\n\t\texecute: function (account, password) {\r\n\t\t\tlet fishGlobalDataProxy = this.facade.retrieveProxy('FishGlobalDataProxy');\r\n\t\t\tlet gameLobbyLoginProxy = this.facade.retrieveProxy('GameLobbyLoginProxy');\r\n\r\n\t\t\tif (fishGlobalDataProxy.getGameLobbyApp() != null && fishGlobalDataProxy.getGameLobbyApp().socket) {\r\n\t\t\t\t//\tconsole.log(\"fishGlobalDataProxy.getGameLobbyApp\", fishGlobalDataProxy.getGameLobbyApp().socket)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tlet app = KBEngine.createApp();\r\n\t\t\tapp.wssAddr = LobbyServerAddr;\r\n\r\n\t\t\tfishGlobalDataProxy.setGameLobbyApp(app);\r\n\t\t\tgameLobbyLoginProxy.registerNetInterface(app);\r\n\t\t\tconsole.log('GameLobbyLoginCommand reconnect', account, password);\r\n\t\t\tfishGlobalDataProxy.setUserInfo(account, password);\r\n\t\t\tgameLobbyLoginProxy.loginLobby(channelPlatformName, account, password);\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tNAME: 'GameLobbyLoginCommand'\r\n\t});\r\n\r\n\r\n","\r\nconstVal.CMD_FRIST_MDM_GAME = 1000;\r\nconstVal.CMD_FRIST_MDM_PLAZA = 2000;\r\n\r\n//-------------------------------------大厅登录------------------------------------------------\r\nconstVal.MDM_GP_LOGON = constVal.CMD_FRIST_MDM_PLAZA + 100; //广场登录\r\nconstVal.SUB_GP_LOGON_ACCOUNTS = 2; //帐号登录\r\nconstVal.SUB_GP_LOGON_PHONENUM = 8; //手机号登录\r\nconstVal.SUB_GP_LOGON_SUCCESS = 100; //登陆成功\r\nconstVal.SUB_GP_LOGON_FINISH = 102; //登陆完成\t --服务端没有\r\nconstVal.SUB_GP_LOGON_ERROR = 101; //登陆失败\r\n//---------------------------------注册帐号-----------------------------------------------------\r\nconstVal.SUB_GP_H5_REGISTER_ACCOUNTS = 3;\t\t\t\t\t\t\t//注册帐号\r\n\r\n//-------------------------------------游戏房间列表----------------------------------------------\r\nconstVal.MDM_GP_SERVER_LIST = constVal.CMD_FRIST_MDM_PLAZA + 101; //列表信息\r\nconstVal.SUB_GP_LIST_TYPE = 100; //类型列表\t\t-- 服务端没有\r\nconstVal.SUB_GP_LIST_KIND = 100; //种类列表\r\nconstVal.SUB_GP_LIST_SERVER = 101; //房间列表\r\nconstVal.SUB_GP_LIST_LUA_GAME = 103; //lua游戏列表\r\nconstVal.SUB_GP_LIST_FINISH = 200; //发送完成\r\n//--------------------------------------------------------------------------------\r\n\r\n//长度宏定义\r\nconstVal.TYPE_LEN = 32; //种类长度\r\nconstVal.KIND_LEN = 32; //类型长度\r\nconstVal.STATION_LEN = 32; //站点长度\r\nconstVal.SERVER_LEN = 32; //房间长度\r\nconstVal.MODULE_LEN = 32; //进程长度\r\n\r\nconstVal.MDM_KN_COMMAND = 0; //内核命令\r\n\r\nconstVal.SUB_KN_DETECT_SOCKET = 1; //检测命令\r\n\r\nconstVal.NAME_LEN = 32;\r\nconstVal.PASS_LEN = 33;\r\nconstVal.URL_LEN = 256;\r\n\r\nlet datatypes = {};\r\n// -- 系统信息\r\n// {t = \"dword\", k = \"dwPlazaVersion\"},                                       -- 框架版本\r\n// {t = \"dword\", k = \"dwPlazaResVersion\"},                                    -- 大厅资源版本\r\n\r\n// -- 登陆信息\r\n// {t = \"tchar\", k = \"szAccounts\", s = AppDefine.LEN_ACCOUNTS},            -- 登录帐号\r\n// {t = \"tchar\", k = \"szPassword\", s = AppDefine.LEN_PASSWORD},                 -- 登录密码\r\n\r\n// {t = \"tchar\", k = \"szChannel\", s = AppDefine.LEN_ACCOUNTS},                -- 渠道名\r\n\r\n// {t = \"byte\", k = \"cbDeviceType\"},                                          --设备类型\r\n// {t = \"tchar\", k = \"szMachineID\", s = 64},                                  --机器码\r\n// {t = \"tchar\", k = \"szSystemVersion\", s = 20},                              --系统版本\r\n// {t = \"tchar\", k = \"szSystemLanguage\", s = 20},                             --系统语言\r\n// {t = \"tchar\", k = \"szSystemModel\", s = 64},                                --系统型号\r\n// {t = \"tchar\", k = \"szSystemBrand\", s = 64},                                --厂商\r\n\r\n\r\n\r\n//帐号登录\r\ndatatypes.CMD_GP_LogonByAccounts = {\r\n\t'mainCmdID': constVal.MDM_GP_LOGON,\r\n\t'subCmdID': constVal.SUB_GP_LOGON_ACCOUNTS,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'dwPlazaVersion',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwPlazaResVersion',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szAccounts',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szPassword',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szChannel',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'cbDeviceType',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szMachineID',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szSystemVersion',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szSystemLanguage',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szSystemModel',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szSystemBrand',\r\n\t\t},\r\n\t],\r\n\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint32(args[0]);\r\n\t\tbundle.writeUint32(args[1]);\r\n\t\tbundle.writeString(args[2], 2*constVal.NAME_LEN);\r\n\t\tbundle.writeString(args[3], 2*constVal.PASS_LEN);\r\n\t\tbundle.writeString(args[4], 2*constVal.NAME_LEN);\r\n\t\tbundle.writeUint8(args[5]);\r\n\t\tbundle.writeString(args[6], 2*64);\r\n\t\tbundle.writeString(args[7], 2*20);\r\n\t\tbundle.writeString(args[8], 2*20);\r\n\t\tbundle.writeString(args[9], 2*64);\r\n\t\tbundle.writeString(args[10], 2*64);\r\n\t},\r\n\r\n\tsize: function () {\r\n\t\treturn 1 + 8 + (constVal.NAME_LEN + constVal.NAME_LEN + constVal.PASS_LEN + 64 * 3 + 20 * 2) * 2;\r\n\t},\r\n\r\n};\r\n\r\n//手机号登录\r\ndatatypes.CMD_GP_LogonByPhoneNum = {\r\n\t'mainCmdID': constVal.MDM_GP_LOGON,\r\n\t'subCmdID': constVal.SUB_GP_LOGON_PHONENUM,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'dwPlazaVersion',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwPlazaResVersion',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szChannel',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szPhoneNum',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szCode',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'cbDeviceType',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szMachineID',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szSystemVersion',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szSystemLanguage',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szSystemModel',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szSystemBrand',\r\n\t\t},\r\n\t],\r\n\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint32(args[0]);\r\n\t\tbundle.writeUint32(args[1]);\r\n\t\tbundle.writeString(args[2], 2*constVal.NAME_LEN);\r\n\r\n\t\tbundle.writeString(args[3], 2*20);\r\n\t\tbundle.writeString(args[4], 2*8);\r\n\r\n\t\tbundle.writeUint8(args[5]);\r\n\t\tbundle.writeString(args[6], 2*64);\r\n\t\tbundle.writeString(args[7], 2*20);\r\n\t\tbundle.writeString(args[8], 2*20);\r\n\t\tbundle.writeString(args[9], 2*64);\r\n\t\tbundle.writeString(args[10], 2*64);\r\n\t},\r\n\r\n\tsize: function () {\r\n\t\treturn 1 + 8 + (constVal.NAME_LEN + 20 + 8 + 64 * 3 + 20 * 2) * 2;\r\n\t},\r\n\r\n};\r\n\r\n//-------------------------------------------登陆成功---------------------------------------------------\r\ndatatypes.CMD_GP_LogonSuccess = {\r\n\t'mainCmdID': constVal.MDM_GP_LOGON,\r\n\t'subCmdID': constVal.SUB_GP_LOGON_SUCCESS,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'wFaceID',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'cbGender',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwUserID',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwGameID',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szAccount',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szNickName',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szToken',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szUnderWrite',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szSession',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'lUserScore',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'lDiamond',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'lLpValues',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'lTicket',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwLoginType',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwVipLv',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwVipPoint',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwClubPoint',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'lExperience',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwCurExLevel',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwNextExPoint',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'lNextExScore',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szExtend',\r\n\t\t},\r\n\t],\r\n\tcreateFromStream: function (stream, args) {\r\n\t\t\r\n\t\tlet wFaceID = stream.readUint16(); \t\t//头像标识\r\n\t\tlet cbGender = stream.readUint8(); \t\t//用户性别\r\n\t\tlet dwUserID = stream.readUint32(); \t//用户 I D\r\n\t\tlet dwGameID = stream.readUint32(); \t//游戏 I D\r\n\t\tlet szAccount = stream.readStringUTF8(constVal.NAME_LEN * 2); \t//用户帐号\r\n\t\tlet szNickName = stream.readStringUTF8(constVal.NAME_LEN * 2); \t//用户昵称\r\n\t\tlet szToken = stream.readStringUTF8(constVal.PASS_LEN * 2); \t\t//动态密码\r\n\t\tlet szUnderWrite = stream.readStringUTF8(32 * 2);\r\n\t\tlet szSession = stream.readStringUTF8(constVal.PASS_LEN * 2);\r\n\r\n\t\t//财富信息\r\n\t\tlet lUserScore = stream.readInt64().lo;  \t//用户游戏币\r\n\t\tlet lDiamond = stream.readInt64().lo;\t\t//用户钻石\r\n\t\tlet lLpValues = stream.readInt64().lo; \t\r\n\t\tlet lTicket = stream.readInt64().lo;\r\n\r\n\t\tlet dwLoginType = stream.readUint32();\r\n\r\n\t\t//点值\r\n\t\tlet dwVipLv = stream.readUint32();\r\n\t\tlet dwVipPoint = stream.readUint32();\r\n\t\tlet dwClubPoint = stream.readUint32();\r\n\r\n\t\t//用户经验等级\r\n\t\tlet lExperience = stream.readInt64().lo;\t//当前的经验等级\r\n\t\tlet dwCurExLevel = stream.readUint32();\t//下一个等级经验值\r\n\t\tlet dwNextExPoint = stream.readInt64().lo;//等级奖励\r\n\t\tlet lNextExScore = stream.readUint32();\r\n\t\tlet szExtend = stream.readStringUTF8(128 * 2);\r\n\t\t\r\n\r\n\t\targs.push(wFaceID, cbGender, dwUserID, dwGameID, szAccount, szNickName, szToken, szUnderWrite, szSession, lUserScore, lDiamond, lLpValues, lTicket, dwLoginType, dwVipLv, dwVipPoint, dwClubPoint,lExperience,dwCurExLevel,dwNextExPoint,lNextExScore,szExtend);\r\n\t}\r\n};\r\n\r\n//------------------------------------登录成功--------------------------------------------------\r\ndatatypes.CMD_GP_LobbyServerAddr = {\r\n\t'mainCmdID': constVal.MDM_GP_LOGON,\r\n\t'subCmdID': constVal.SUB_GP_LOGON_FINISH,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'szServerAddr',\r\n\t\t}\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\t\tlet szServerAddr = stream.readString(256);\r\n\t\targs.push(szServerAddr);\r\n\t}\r\n};\r\n\r\n\r\n//-------------------------------------登陆失败------------------------------------------------\r\ndatatypes.CMD_GP_LogonError = {\r\n\t'mainCmdID': constVal.MDM_GP_LOGON,\r\n\t'subCmdID': constVal.SUB_GP_LOGON_ERROR,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'lErrorCode',\r\n\t\t\t'type': 'UINT32'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szErrorDescribe',\r\n\t\t}\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\t\tlet lErrorCode = stream.readInt32();\r\n\t\tlet szErrorDescribe = stream.readStringUTF8(128 * 2);\r\n\t\targs.push(lErrorCode, szErrorDescribe);\r\n\t}\r\n};\r\n\r\n//-------------------------------------游戏类型结构------------------------------------------------\r\ndatatypes.tagGameType = {\r\n\t'mainCmdID': constVal.MDM_GP_SERVER_LIST,\r\n\t'subCmdID': constVal.SUB_GP_LIST_TYPE,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'wSortID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wTypeID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szTypeName',\r\n\t\t\t'type': 'STRING_GBK',\r\n\t\t\t'len': constVal.TYPE_LEN\r\n\t\t}\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\t\tlet wSortID = stream.readUint16(); //排序号码\r\n\t\tlet wTypeID = stream.readUint16(); //种类号码\r\n\t\tlet szTypeName = stream.readString(constVal.TYPE_LEN); //种类名字\r\n\t\targs.push(wSortID, wTypeID, szTypeName);\r\n\t}\r\n};\r\n\r\n//-------------------------------------游戏名称结构------------------------------------------------\r\ndatatypes.tagGameKind = {\r\n\t'mainCmdID': constVal.MDM_GP_SERVER_LIST,\r\n\t'subCmdID': constVal.SUB_GP_LIST_KIND,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'wSortID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wTypeID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wKindID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwMaxVersion',\r\n\t\t\t'type': 'UINT32'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwOnLineCount',\r\n\t\t\t'type': 'UINT32'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szKindName',\r\n\t\t\t'type': 'STRING_GBK',\r\n\t\t\t'len': constVal.KIND_LEN\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szProcessName',\r\n\t\t\t'type': 'STRING_GBK',\r\n\t\t\t'len': constVal.MODULE_LEN\r\n\t\t},\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\t\tlet wSortID = stream.readUint16(); //排序号码\r\n\t\tlet wTypeID = stream.readUint16(); //类型号码\r\n\t\tlet wKindID = stream.readUint16(); //名称号码\r\n\t\tlet dwMaxVersion = stream.readUint32(); //最新版本\r\n\t\tlet dwOnLineCount = stream.readUint32(); //在线数目\r\n\t\tlet szKindName = stream.readString(constVal.KIND_LEN); //游戏名字\r\n\t\tlet szProcessName = stream.readString(constVal.MODULE_LEN);//进程名字\r\n\r\n\t\targs.push(wSortID, wTypeID, wKindID, dwMaxVersion, dwOnLineCount, szKindName, szProcessName);\r\n\t}\r\n};\r\n\r\n//-------------------------------------游戏列表结构------------------------------------------------\r\n//Lua游戏种类\r\ndatatypes.tagLuaGameKind = {\r\n\t'mainCmdID': constVal.MDM_GP_SERVER_LIST,\r\n\t'subCmdID': constVal.SUB_GP_LIST_LUA_GAME,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'wKindID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szKindName',\r\n\t\t\t'type': 'STRING',\r\n\t\t\t'len': constVal.KIND_LEN\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wTypeID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wSortID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwClientVersion',\r\n\t\t\t'type': 'UINT32'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwResVersion',\r\n\t\t\t'type': 'UINT32'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'cbNullity',\r\n\t\t\t'type': 'UINT8'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szExtend',\r\n\t\t\t'type': 'STRING',\r\n\t\t\t'len': 256\r\n\t\t},\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\t\tlet gameItmeList = [];\r\n\t\tfor (let i = 0; i < (stream.buffer.byteLength - 8) / 591; i++) {\r\n\t\t\titem = {};\r\n\t\t\titem.wKindID = stream.readUint16(); //游戏ID\t\t\t\t\t\t\r\n\t\t\titem.szKindName = stream.readStringUTF8(constVal.KIND_LEN * 2); //游戏名字\r\n\t\t\titem.wTypeID = stream.readUint16(); //挂接索引\r\n\t\t\titem.wSortID = stream.readUint16(); //排序索引\r\n\t\t\titem.dwClientVersion = stream.readUint32(); //客户端版本号\r\n\t\t\titem.dwResVersion = stream.readUint32(); //\r\n\t\t\titem.cbNullity = stream.readUint8(); //禁用标志 0 不禁用 1 禁用\r\n\t\t\titem.szExtend = stream.readStringUTF8(256 * 2); //扩展json\r\n\r\n\t\t\t\r\n\t\t\tif(item.wKindID == 520){\r\n\r\n\t\t\t\tgameItmeList.push(item)\t\r\n\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t}\r\n\r\n\r\n\t\targs.push(gameItmeList);\r\n\t}\r\n};\r\n\r\n\r\n\r\n//-------------------------------------游戏房间列表结构------------------------------------------------\r\ndatatypes.tagGameServer = {\r\n\t'mainCmdID': constVal.MDM_GP_SERVER_LIST,\r\n\t'subCmdID': constVal.SUB_GP_LIST_SERVER,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'wSortID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wKindID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wServerID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wStationID',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wServerPort',\r\n\t\t\t'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwOnLineCount',\r\n\t\t\t'type': 'UINT32'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szServerAddr',\r\n\t\t\t'type': 'STRING',\r\n\t\t\t'len': 256\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szServerName',\r\n\t\t\t'type': 'STRING_GBK',\r\n\t\t\t'len': constVal.SERVER_LEN\r\n\t\t}\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\t\tlet wSortID = stream.readUint16();//排序号码\r\n\t\tlet wKindID = stream.readUint16();//名称号码\r\n\t\tlet wServerID = stream.readUint16();//房间号码\r\n\t\tlet wStationID = stream.readUint16(); //站点号码\r\n\t\tlet wServerPort = stream.readUint16(); //房间端口\r\n\t\tlet dwOnLineCount = stream.readUint32(); //在线人数\r\n\t\tlet szServerAddr = stream.readString(256);//房间地址\r\n\t\tlet szServerName = stream.readString(constVal.SERVER_LEN); //房间名称\r\n\r\n\t\targs.push(wSortID, wKindID, wServerID, wStationID, wServerPort, dwOnLineCount, szServerAddr, szServerName);\r\n\t}\r\n};\r\n\r\ndatatypes.listFinish = {\r\n\t'mainCmdID': constVal.MDM_GP_SERVER_LIST,\r\n\t'subCmdID': constVal.SUB_GP_LIST_FINISH,\r\n\t'argTypes': [\r\n\t],\r\n\tcreateFromStream: function () {\r\n\r\n\t}\r\n};\r\n\r\n//注册帐号\r\ndatatypes.CMD_GP_H5RegisterAccounts = {\r\n\t'mainCmdID': constVal.MDM_GP_LOGON,\r\n\t'subCmdID': constVal.SUB_GP_H5_REGISTER_ACCOUNTS,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'lChannelID',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szHeadImgUrl',\r\n\t\t\t'type': 'STRING',\r\n\t\t\t'len': constVal.URL_LEN\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwOpenID',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwUnionID',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szAccounts',\r\n\t\t\t'type': 'STRING',\r\n\t\t\t'len': constVal.NAME_LEN\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szPassWord',\r\n\t\t\t'type': 'STRING',\r\n\t\t\t'len': constVal.PASS_LEN\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'cbSex',\r\n\t\t\t'type': 'UINT8'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'linviteUserID',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'cbsystem',\r\n\t\t\t'type': 'UINT8'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szNickname',\r\n\t\t\t'type': 'STRING',\r\n\t\t\t'len': constVal.NAME_LEN\r\n\t\t}\r\n\t],\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint32(args[0])\r\n\t\tbundle.writeString(args[1], constVal.URL_LEN);\t\t\t//头像url\r\n\t\tbundle.writeString(args[2], 48);\t\t\t\t\t\t//id值\r\n\t\tbundle.writeString(args[3], 48);\t\t\t\t\t\t//id值\r\n\t\tbundle.writeString(args[4], constVal.NAME_LEN);\t\t\t//登录账号\r\n\t\tbundle.writeString(args[5], constVal.PASS_LEN);\t        //登录密码\r\n\t\tbundle.writeUint8(args[6]);\t\t\t                    //性别\r\n\t\tbundle.writeUint32(args[7])\r\n\t\tbundle.writeUint32(args[8]);\t\t\t                    //系统类型0未知1android2ios\r\n\t\tbundle.writeString(args[9], constVal.NAME_LEN);\t\t\t//昵称\r\n\t},\r\n\tsize: function () {\r\n\t\treturn 12 + constVal.URL_LEN + 48 + 48 + constVal.NAME_LEN + constVal.PASS_LEN + 1 + constVal.NAME_LEN;\r\n\t}\r\n};\r\n\r\n\r\nmodule.exports = {\r\n\t'constVal': constVal,\r\n\t'datatypes': datatypes\r\n};","let datatypes = require('GameLobbyLoginProtocol').datatypes;\r\n//var UIManager = require('UIManager');\r\nmodule.exports = puremvc.define(\r\n\t{\r\n\t\tparent: puremvc.Proxy,\r\n\t\tconstructor: function () {\r\n\t\t\tpuremvc.Proxy.call(this);\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tonRegister: function () {\r\n\t\t\tthis._globalData = this.facade.retrieveProxy('FishGlobalDataProxy');\r\n\t\t\tthis._gameListData = this.facade.retrieveProxy('GameListDataProxy');\r\n\t\t},\r\n\r\n\t\tregisterNetInterface: function (app) {\r\n\t\t\tthis.app = app\r\n\t\t\tlet net = this.app.net;\r\n\t\t\t//账号登录\r\n\t\t\t//net.registerClient(this, 'loginLobby', datatypes.CMD_GP_LogonByAccounts);\r\n\r\n\t\t\t//手机号登录\r\n\t\t\tnet.registerClient(this, 'loginLobby', datatypes.CMD_GP_LogonByPhoneNum);\r\n\r\n\t\t\t// 注册\r\n\t\t\tnet.registerClient(this, 'register', datatypes.CMD_GP_H5RegisterAccounts);\r\n\r\n\t\t\t// 登录消息-接收\r\n\t\t\tnet.registerServer(this, 'loginSuccess', datatypes.CMD_GP_LogonSuccess);\r\n\t\t\tnet.registerServer(this, 'loginFinish', datatypes.CMD_GP_LobbyServerAddr);\r\n\t\t\tnet.registerServer(this, 'loginError', datatypes.CMD_GP_LogonError);\r\n\t\t\t// 列表消息-接收\r\n\t\t\tnet.registerServer(this, 'gpLuaGameKind', datatypes.tagLuaGameKind);\r\n\t\t\tnet.registerServer(this, 'gpListType', datatypes.tagGameType);\r\n\t\t\tnet.registerServer(this, 'gpListKind', datatypes.tagGameKind);\r\n\t\t\tnet.registerServer(this, 'gpListServer', datatypes.tagGameServer);\r\n\t\t\tnet.registerServer(this, 'gpListFinish', datatypes.listFinish);\r\n\t\t},\r\n\r\n\t\tregister: function (account, password) {\r\n\t\t\tlet app = this.app;\r\n\t\t\tvar wxUserInfo = this._globalData.getWXUserInfo();\r\n\t\t\tvar headImgUrl = wxUserInfo.headImgUrl;\r\n\t\t\tvar openId = wxUserInfo.openId;\r\n\t\t\tvar unionId = wxUserInfo.unionId;\r\n\t\t\tvar gender = wxUserInfo.gender;\r\n\t\t\tvar nickName = wxUserInfo.nickName;\r\n\t\t\tlet inviteUserID = this._globalData.getInviteUserID();\r\n\t\t\tapp.net.callServer('register', channelID, headImgUrl, openId, unionId, account, password, gender, inviteUserID, ChannelPlatformType, nickName);\r\n\t\t},\r\n\r\n\t\tloginLobby: function (szChannelPlatformName, account, password) {\r\n\t\t\tlet inviteUserID = this._globalData.getInviteUserID();\r\n\t\t\tlet app = this.app;\r\n\t\t\tapp.connect(function () {\r\n\t\t\t\t//app.net.callServer('loginLobby', channelID, account, password, inviteUserID, ChannelPlatformType, szChannelPlatformName);\r\n\t\t\t\tapp.net.callServer('loginLobby', 1,1, channelID.toString(), \"17604010279\", \"1233\", 1, \"test\", \"test\", \"test\", \"test\", \"test\");\r\n\t\t\t\theartbeat.startHeartbeat(function () {\r\n\t\t\t\t\tvar appFacade = require('FishFacade');\r\n\t\t\t\t\tlet account = appFacade.retrieveProxy('FishGlobalDataProxy').getAccount();\r\n\t\t\t\t\tlet password = appFacade.retrieveProxy('FishGlobalDataProxy').getPassword();\r\n\t\t\t\t\tappFacade.sendNotification(FishConstants.LOGIN_LOBBY, account, password);\r\n\t\t\t\t})\r\n\r\n\t\t\t\t\r\n\t\t\t\tapp.setOncloseCallback(function () {\r\n\t\t\t\t\theartbeat.connected = false\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tloginSuccess: function (logonSuccessData) {\r\n\t\t\tcc.log('logonSuccess', JSON.stringify(logonSuccessData));\r\n\t\t\tthis._globalData.setLogonSuccessData(logonSuccessData)\r\n\t\t\tthis._globalData.setUserId(logonSuccessData.dwUserID);\r\n\t\t\tif (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\r\n\t\t\t\tif (logonSuccessData.szUnionID && logonSuccessData.szUnionID.length > 5) {\r\n\t\t\t\t\tthis._globalData.setUserInfo(logonSuccessData.szUnionID, logonSuccessData.szUnionID);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tloginFinish: function (data) {\r\n\t\t\tcc.log('logonFinish', data);\r\n\t\t\t//KBEngine.destroyApp(this.app);\r\n\t\t\t//this.app = null;\r\n\t\t\t//this.sendNotification(FishConstants.LOGIN_LOBBY_FINISH);\r\n\r\n\t\t\tlet account = this._globalData.getAccount();\r\n\t\t\tlet password = this._globalData.getPassword();\r\n\t\t\t//UIManager.saveAccountData(account, password)\r\n\t\t\tif (!hideExchangeRedPacket2) {\r\n\t\t\t\t//UIManager.openUI(124)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tloginError: function (errorCode, errorMsg) {\r\n\t\t\tlet account = this._globalData.getAccount();\r\n\t\t\tlet password = this._globalData.getPassword();\r\n\t\t\tcc.log('logonError', errorCode, errorMsg);\r\n\t\t\tif (errorCode == 101) {   //账号不存在返回的错误码\r\n\t\t\t\tthis.register(account, password);\r\n\t\t\t} else {\r\n\t\t\t\t// 关闭连接\r\n\t\t\t\tKBEngine.destroyApp(this.app);\r\n\t\t\t\tcc.director.loadScene('GameLobbyLoginScene');\r\n\t\t\t\t// UIManager.openTip(errorMsg)\r\n\t\t\t\t// UIManager.saveAccountData('', '')\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tgpLuaGameKind: function (ItemTableData) {\r\n\t\t\tcc.log('gpLuaGameKind:', ItemTableData);\r\n\t\t\tthis._gameListData.SetGameItem(ItemTableData);\r\n\t\t},\r\n\r\n\t\tgpListType: function (pGameType) {\r\n\t\t\tcc.log('gpListType', pGameType);\r\n\t\t},\r\n\r\n\t\tgpListKind: function (pGameKind) {\r\n\t\t\tcc.log('gpListKind', pGameKind);\r\n\t\t},\r\n\r\n\t\tgpListServer: function (pGameServer) {\r\n\t\t\tcc.log('gpListServer', pGameServer);\r\n\t\t\tlet fishGameKind = this._globalData.getFishGameKind();\r\n\t\t\tif (pGameServer.wKindID === fishGameKind) {\r\n\t\t\t\tthis._globalData.getGameServerInfo()[pGameServer.wServerID] = pGameServer\r\n\t\t\t\tthis._globalData.setFishServerIpPort(pGameServer.szServerAddr, pGameServer.wServerPort);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgpListFinish: function () {\r\n\t\t\tcc.log('gpListFinish');\r\n\t\t\t// this.sendNotification(FishConstants.LOGIN_LOBBY_FINISH);\r\n\t\t\tcc.log(\"enter game\" + this._gameListData.GetGameItmeList()[0].wKindID)\r\n\r\n\t\t\tthis.sendNotification(FishConstants.ENTER_GAME_SCENCE,this._gameListData.GetGameItmeList()[0],this.app);\r\n\t\t\tcc.director.loadScene('GameLoadingScene_' + this._gameListData.GetGameItmeList()[0].wKindID);\r\n\t\t\tlet account = this._globalData.getAccount();\r\n\t\t\tlet password = this._globalData.getPassword();\r\n\t\t\t//UIManager.saveAccountData(account, password)\r\n\t\t},\r\n\r\n\t},\r\n\t{\r\n\t\tNAME: 'GameLobbyLoginProxy'\r\n\t});","let appFacade = require('FishFacade');\r\n//let wxShareData = require('WeiXinShareData');\r\n//let confUtil = require(\"confUtil\")\r\n//let UIManager = require('UIManager');\r\nconst i18n = require('i18n');\r\ncc.requestLoginResult = function (code) {\r\n    if (code) {\r\n        let xmlHttp = cc.loader.getXMLHttpRequest();\r\n        xmlHttp.open(\"POST\", PayServerAddr + 'wx_Nativelogin', true);\r\n        xmlHttp.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n        xmlHttp.onreadystatechange = function () {\r\n            if (this.readyState == 4 && this.status == 200) {\r\n                var result = JSON.parse(xmlHttp.responseText);//获取ajax请求的文本内容\r\n                appFacade.sendNotification(FishConstants.ON_GameLobbyLoginUI_Nativelogin, result);\r\n            }\r\n        }\r\n        xmlHttp.timeout = 5000;// 5 seconds for timeout\r\n        xmlHttp.send(JSON.stringify({ code: code }));\r\n    }\r\n    else {\r\n        //UIManager.openTip(\"没有获取到用户数据\")\r\n    }\r\n};\r\ncc.LoginResult = function (accountId, accountName) {\r\n    hideFirstPay = true\r\n    //UIManager.openTip(accountId)\r\n    appFacade.sendNotification(FishConstants.ON_GameLobbyLoginUI_Nativelogin, { ChannelID: 100, openid: accountId, unionid: accountId });\r\n};\r\ncc.openTipResult = function (XXXXX) {\r\n    //UIManager.openTip(XXXXX)\r\n};\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        loginUI: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        loginUINative: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        progressBar: cc.ProgressBar,\r\n        progressBarNode: cc.Node,\r\n        psLogo: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        YXZL: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        versionlabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        info: cc.Label,\r\n        manifestUrl: {\r\n            type: cc.Asset,\r\n            default: null\r\n        },\r\n        _updating: false,\r\n        _canRetry: false,\r\n        _storagePath: ''\r\n    },\r\n\r\n    onLoad: function () {\r\n                //取Url参数\r\n                let account = \"\";\r\n                let token = \"\";\r\n                var parmStr = window.location.href.split('?')[1];\r\n                if (parmStr) {\r\n                    var parms = parmStr.split('&');\r\n                    parms.forEach(element => {\r\n                        var parm = element.split('=');\r\n                        if (parm[0] == \"member_account\") {\r\n                            account = parm[1];\r\n                        }\r\n                        else if (parm[0] == \"token\") {\r\n                            token = parm[1];\r\n                        }\r\n                    });\r\n                }\r\n        let frameSize = cc.view.getFrameSize();\r\n        let rtFrame = frameSize.width / frameSize.height;\r\n        let deFrame = 1136 / 640;\r\n        if (rtFrame > 1704 / 640 || rtFrame < 1136 / 960) {\r\n            cc.view.setDesignResolutionSize(1136, 640, cc.ResolutionPolicy.SHOW_ALL);\r\n            this.node.addComponent(cc.Mask);\r\n        }\r\n        else if (rtFrame < deFrame) {\r\n            cc.view.setDesignResolutionSize(1136, 640, cc.ResolutionPolicy.FIXED_WIDTH);\r\n        } else {\r\n            cc.view.setDesignResolutionSize(1136, 640, cc.ResolutionPolicy.FIXED_HEIGHT);\r\n        }\r\n        // let node = this.node.getChildByName(\"background\")\r\n        // node.width = cc.winSize.width\r\n        // node.height = cc.winSize.height\r\n        appFacade.registerMediator(this);\r\n\r\n        if (cc.sys.isBrowser) {\r\n            function getQueryVariable(variable) {\r\n                var query = window.location.search.substring(1);\r\n                var vars = query.split(\"&\");\r\n                for (var i = 0; i < vars.length; i++) {\r\n                    var pair = vars[i].split(\"=\");\r\n                    if (pair[0] == variable) { return pair[1]; }\r\n                }\r\n                return (false);\r\n            }\r\n            let channelIDTemp = getQueryVariable(\"channelID\")\r\n\r\n        }\r\n        this.onLoadNative()\r\n    },\r\n\r\n    listNotificationInterests: function () {\r\n        return [{\r\n            evtType: FishConstants.LOGIN_LOBBY_FINISH,\r\n            callback: this.loginFinish\r\n        },\r\n        {\r\n            evtType: FishConstants.ON_GameLobbyLoginUI_Nativelogin,\r\n            callback: this.Nativelogin\r\n        },];\r\n    },\r\n    Nativelogin: function (data) {\r\n        console.log('Nativelogin', JSON.stringify(data))\r\n        if (data.ChannelID) {\r\n            channelID = data.ChannelID\r\n        }\r\n        var openid = data.openid;\r\n        var unionId = data.unionid;\r\n        var session_key = '';\r\n\r\n        var account = openid;\r\n        var password = openid;\r\n        //console.log(\"account:\", account);\r\n        //res.userInfo.nickName = res.userInfo.nickName.replace('百度', '捕鱼');\r\n        this.wxGameLogin('', openid, session_key, unionId, 0, i18n.t(\"GameLobbyLoginUI.1\") + account.substr(account.length - 5, 5), account, password);\r\n    },\r\n    onDestroy: function () {\r\n        appFacade.removeMediator(this.name);\r\n        this.onDestroyNative()\r\n    },\r\n\r\n    start: function () {\r\n        //UIManager.attachUI(this.node)\r\n\r\n        if (cc.sys.isBrowser) {\r\n            function getQueryVariable(variable) {\r\n                var query = window.location.search.substring(1);\r\n                var vars = query.split(\"&\");\r\n                for (var i = 0; i < vars.length; i++) {\r\n                    var pair = vars[i].split(\"=\");\r\n                    if (pair[0] == variable) { return pair[1]; }\r\n                }\r\n                return (false);\r\n            }\r\n            let channelIDTemp = getQueryVariable(\"channelID\")\r\n            if (channelIDTemp) {\r\n                if (channelIDTemp >= 3001 && channelIDTemp < 4000) {\r\n                    channelID = channelIDTemp\r\n                }\r\n                else {\r\n                    //UIManager.openTip(\"渠道号错误channelID >= 3001 && channelID < 4000\")\r\n                    this.loginUI.active = false;\r\n                    return\r\n                }\r\n            }\r\n        }\r\n\r\n        // if (cc.sys.platform == cc.sys.ANDROID) {\r\n        //     this.loginUI.active = false;\r\n        //     this.progressBarNode.active = false\r\n        //     this.versionlabel.node.active = true\r\n        //     this.versionlabel.string = '版本号：' + clientVersion;\r\n        //     channelID = 13\r\n        //     PlatformID = 13\r\n        //     channelPlatformName = \"WeNativeAndroid\"\r\n        //     // let className = \"org/cocos2dx/javascript/AppActivity\";\r\n        //     // let methodName = \"getChannelID\";\r\n        //     // let methodSignature = \"()I\";\r\n        //     // let channelIDXXX = jsb.reflection.callStaticMethod(className, methodName, methodSignature)\r\n        //     // if (channelIDXXX) {\r\n        //     //     channelID = channelIDXXX\r\n        //     // }\r\n        //     let self = this\r\n        //     self.info.node.active = true\r\n        //     self.info.string = '版本号：' + clientVersion;\r\n        //     self.hotUpdate()\r\n        //     self.progressBarNode.active = true\r\n        // }\r\n        // else \r\n        if (cc.sys.isNative) {\r\n            this.onLoadRes()\r\n        }\r\n        else {\r\n            this.onLoadRes()\r\n        }\r\n\r\n        this.onLogin()\r\n    },\r\n\r\n    onLoadRes: function () {\r\n        this.progressBarNode.active = true\r\n        this.loginUI.active = false\r\n        // if (cc.sys.platform == cc.sys.MOBILE_BROWSER || cc.sys.platform == cc.sys.DESKTOP_BROWSER) {\r\n\r\n        cc.resources.loadDir(\"loadRes\", cc.Prefab, (completedCount, totalCount, item) => {\r\n            this.progressBar.progress = completedCount / totalCount\r\n            if (completedCount == totalCount) {\r\n                this.progressBarNode.active = false\r\n                if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\r\n                    this.loginUINative.active = true\r\n                }\r\n                else {\r\n                    this.loginUI.active = true\r\n                }\r\n            }\r\n        },\r\n            (err, assets) => {\r\n\r\n            });\r\n        // }\r\n        // else {\r\n        //     this.progressBarNode.active = false\r\n        //     if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\r\n        //         this.loginUINative.active = true\r\n        //     }\r\n        //     else {\r\n        //         this.loginUI.active = true\r\n        //     }\r\n        // }\r\n\r\n    },\r\n    onLogin: function () {\r\n\r\n        if (new Date().getTime() - onLoginTimeInterval < 3000) {\r\n            return\r\n        }\r\n        onLoginTimeInterval = new Date().getTime()\r\n        if (cc.sys.platform == cc.sys.WECHAT_GAME) {\r\n            this.onWxLogin();\r\n        }\r\n        else if (cc.sys.platform == cc.sys.ANDROID) {\r\n            this.onWxLoginAndroid();\r\n        }\r\n        else {\r\n            if (PlatformID == 4) {\r\n                // hideExchangeRedPacket2 = true\r\n                // hideExchangeRedPacket = true\r\n                // let baseDataObject = UIManager.getAccountData()\r\n                // if (baseDataObject.password && baseDataObject.password.length >= 6) {\r\n                //     let account = baseDataObject.account\r\n                //     let password = baseDataObject.password\r\n                //     var fishDataProxy = appFacade.retrieveProxy('FishGlobalDataProxy');\r\n                //     fishDataProxy.setWXUserInfo('', '', '', account, 0, i18n.t(\"GameLobbyLoginUI.1\") + account.substr(account.length - 5, 5));\r\n                //     appFacade.sendNotification(FishConstants.LOGIN_LOBBY, account, password);\r\n                // }\r\n                // else {\r\n                //     channelID = 5\r\n                //     let account = \"YK\" + new Date().getTime()\r\n                //     let password = account\r\n                //     var fishDataProxy = appFacade.retrieveProxy('FishGlobalDataProxy');\r\n                //     fishDataProxy.setWXUserInfo('', '', '', account, 0, i18n.t(\"GameLobbyLoginUI.1\") + account.substr(account.length - 5, 5));\r\n                //     appFacade.sendNotification(FishConstants.LOGIN_LOBBY, account, password);\r\n                //     //UIManager.openUI(120)\r\n                // }\r\n                appFacade.sendNotification(FishConstants.LOGIN_LOBBY, 111111111, 222222222222);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 微信登录\r\n     */\r\n    onWxLogin: function () {\r\n        var self = this;\r\n\r\n        //1.获得code\r\n        wx.login({\r\n            success: function (codeObj) {\r\n                //2.获得code后，去http服务器获取openid和session_key\r\n                // console.log(\"loginttttttt\", JSON.stringify(codeObj))\r\n                if (codeObj.code) {\r\n                    wx.request({\r\n                        url: PayServerAddr + 'wx_login',\r\n                        data: {\r\n                            code: codeObj.code,\r\n                            channelID: channelID,\r\n                            ChannelPlatformType: ChannelPlatformType,\r\n                        },\r\n                        // method: 'POST',\r\n                        // header: {\r\n                        //     'content-type': 'application/json; charset=UTF-8'\r\n                        // },\r\n                        header: {\r\n                            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n                        },\r\n                        success: function (successInfo) {\r\n                            //console.log(\"successttttttt\", successInfo)\r\n                            var openid = successInfo.data.openid;\r\n                            var unionId = successInfo.data.unionid;\r\n                            var session_key = successInfo.data.session_key;\r\n                            // if (successInfo.data.PassingState == true) {\r\n                            //     if (successInfo.data.IosShow && successInfo.data.IosShow == 1) {\r\n                            //         hideShopBuy = false\r\n                            //     }\r\n                            // }\r\n                            // else {\r\n                            //     hideExchangeRedPacket = true\r\n                            // }\r\n\r\n                            if (successInfo.data.clientVersionVX && successInfo.data.clientVersionVX >= 645) {\r\n                                if (successInfo.data.IosShow && successInfo.data.IosShow == 1) {\r\n                                    // hideShopBuy = false\r\n                                    //hideExchangeRedPacket = false\r\n\r\n                                }\r\n                            }\r\n                            else {\r\n                                hideExchangeRedPacket2 = true\r\n                                hideExchangeRedPacket = true\r\n                            }\r\n\r\n                            if (successInfo.data.ChannelID) {\r\n                                channelID = successInfo.data.ChannelID\r\n                            }\r\n                            if (successInfo.data.wxSmallProgramPayWxappid) {\r\n                                wxSmallProgramPayWxappid = successInfo.data.wxSmallProgramPayWxappid\r\n                                if (successInfo.data.wxSmallProgramPayWxappid == 3 && ChannelPlatformType == 2) {\r\n                                    hideShopBuy = true\r\n                                }\r\n                            }\r\n\r\n                            var account = openid;\r\n                            var password = openid;\r\n                            //console.log(\"account:\", account);\r\n                            self.wxGameLogin('', openid, session_key, unionId, 0, i18n.t(\"GameLobbyLoginUI.1\") + account.substr(account.length - 5, 5), account, password);\r\n\r\n                        },\r\n                        fail: function (error) {\r\n                            console.error(error);\r\n                            console.log('login fail');\r\n                        },\r\n                        complete: function (userInfo) {\r\n                            console.log('login comlete');\r\n                        }\r\n                    });\r\n                } else {\r\n                    console.error(\"login failed, didnt catch code\")\r\n                    if (wx.getRealtimeLogManager) {\r\n                        const logger = wx.getRealtimeLogManager()\r\n                        logger.error('loginFail', codeObj)\r\n                    }\r\n                }\r\n            },\r\n            fail: function (error) {\r\n                console.error('wxGameLogin wx.login error' + error);\r\n                if (wx.getRealtimeLogManager) {\r\n                    const logger = wx.getRealtimeLogManager()\r\n                    logger.error('loginFail2', error)\r\n                }\r\n            },\r\n            complete: function () {\r\n                console.log(\"wx.longin complete\");\r\n            }\r\n        });\r\n    },\r\n    onWxLoginAndroid: function () {\r\n        if (cc.sys.platform == cc.sys.ANDROID) {\r\n            let className = \"org/cocos2dx/javascript/AppActivity\";\r\n            let methodName = \"requestLogin\";\r\n            let methodSignature = \"()V\";\r\n            jsb.reflection.callStaticMethod(className, methodName, methodSignature)\r\n        }\r\n    },\r\n    wxGameLogin: function (headImgUrl, openId, session_key, unionId, gender, nickName, account, password) {\r\n        console.log('wxGameLogin')\r\n        nickName = confUtil.setUserNameLabel(nickName)\r\n        var fishDataProxy = appFacade.retrieveProxy('FishGlobalDataProxy');\r\n        fishDataProxy.setWXUserInfo(headImgUrl, openId, session_key, unionId, gender, nickName);\r\n        appFacade.sendNotification(FishConstants.LOGIN_LOBBY, account, password);\r\n    },\r\n\r\n    loginFinish: function () {\r\n        cc.director.loadScene('GameLobbyScene');\r\n        // G_shopOrdersWeChat = UIManager.getShopOrdersWeChat()\r\n        // G_shopOrdersWeChatCheck = UIManager.getShopOrdersWeChatCheck()\r\n        // for (let index = 0; index < G_shopOrdersWeChatCheck.length; index++) {\r\n        //     G_shopOrdersWeChatCheck[index].type = 2\r\n        // }\r\n        //console.log(\"G_shopOrdersWeChat\", JSON.stringify(G_shopOrdersWeChat))\r\n        //console.log(\"G_shopOrdersWeChatCheck\", JSON.stringify(G_shopOrdersWeChatCheck))\r\n    },\r\n    updateCb: function (event) {\r\n        if (!cc.sys.isNative) {\r\n            return;\r\n        }\r\n        var needRestart = false;\r\n        var failed = false;\r\n        switch (event.getEventCode()) {\r\n            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:\r\n                this.info.string = 'No local manifest file found, hot update skipped.';\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_PROGRESSION:\r\n                this.progressBar.progress = event.getPercent();\r\n\r\n                var msg = event.getMessage();\r\n                if (msg) {\r\n                    this.info.string = 'Updated file: ' + msg;\r\n                }\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:\r\n            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:\r\n                this.info.string = 'Fail to download manifest file, hot update skipped.';\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:\r\n                this.info.string = 'Already up to date with the latest remote version.';\r\n                this.info.string = '版本号：' + clientVersion;\r\n                failed = true;\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_FINISHED:\r\n                this.info.string = 'Update finished. ' + event.getMessage();\r\n                needRestart = true;\r\n                break;\r\n            case jsb.EventAssetsManager.UPDATE_FAILED:\r\n                this.info.string = 'Update failed. ' + event.getMessage();\r\n                //xxxxx重试\r\n                this._updating = false;\r\n                this._canRetry = true;\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_UPDATING:\r\n                this.info.string = 'Asset update error: ' + event.getAssetId() + ', ' + event.getMessage();\r\n                break;\r\n            case jsb.EventAssetsManager.ERROR_DECOMPRESS:\r\n                this.info.string = event.getMessage();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (failed) {\r\n            this._am.setEventCallback(null);\r\n            this._updateListener = null;\r\n            this._updating = false;\r\n            // this.onLoadRes()\r\n            this.loginUI.active = true\r\n            this.progressBarNode.active = false\r\n        }\r\n\r\n        if (needRestart) {\r\n            this._am.setEventCallback(null);\r\n            this._updateListener = null;\r\n            // Prepend the manifest's search path\r\n            var searchPaths = jsb.fileUtils.getSearchPaths();\r\n            var newPaths = this._am.getLocalManifest().getSearchPaths();\r\n            console.log(JSON.stringify(newPaths));\r\n            Array.prototype.unshift.apply(searchPaths, newPaths);\r\n            // This value will be retrieved and appended to the default search path during game startup,\r\n            // please refer to samples/js-tests/main.js for detailed usage.\r\n            // !!! Re-add the search paths in main.js is very important, otherwise, new scripts won't take effect.\r\n            cc.sys.localStorage.setItem('HotUpdateSearchPaths', JSON.stringify(searchPaths));\r\n            jsb.fileUtils.setSearchPaths(searchPaths);\r\n\r\n            cc.audioEngine.stopAll();\r\n            cc.game.restart();\r\n        }\r\n\r\n    },\r\n    hotUpdate: function () {\r\n        if (!cc.sys.isNative) {\r\n            return;\r\n        }\r\n        if (this._am && !this._updating) {\r\n            this._updateListener = true\r\n            this._am.setEventCallback(this.updateCb.bind(this));\r\n\r\n            if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {\r\n                // Resolve md5 url\r\n                var url = this.manifestUrl.nativeUrl;\r\n                if (cc.loader.md5Pipe) {\r\n                    url = cc.loader.md5Pipe.transformURL(url);\r\n                }\r\n                this._am.loadLocalManifest(url);\r\n            }\r\n\r\n            this._failCount = 0;\r\n            this._am.update();\r\n            this._updating = true;\r\n            this.info.string = '检查更新';\r\n        }\r\n    },\r\n    // use this for initialization\r\n    onLoadNative: function () {\r\n        // Hot update is only available in Native build\r\n        if (!cc.sys.isNative) {\r\n            return;\r\n        }\r\n        this._storagePath = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : '/');\r\n        cc.log('Storage path for remote asset : ' + this._storagePath);\r\n\r\n        this.versionCompareHandle = function (versionA, versionB) {\r\n            cc.log(\"JS Custom Version Compare: version A is \" + versionA + ', version B is ' + versionB);\r\n            var vA = versionA.split('.');\r\n            var vB = versionB.split('.');\r\n            for (var i = 0; i < vA.length; ++i) {\r\n                var a = parseInt(vA[i]);\r\n                var b = parseInt(vB[i] || 0);\r\n                if (a === b) {\r\n                    continue;\r\n                }\r\n                else {\r\n                    return a - b;\r\n                }\r\n            }\r\n            if (vB.length > vA.length) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        };\r\n\r\n        // Init with empty manifest url for testing custom manifest\r\n        this._am = new jsb.AssetsManager('', this._storagePath, this.versionCompareHandle);\r\n\r\n        var panel = this;\r\n        // Setup the verification callback, but we don't have md5 check function yet, so only print some message\r\n        // Return true if the verification passed, otherwise return false\r\n        this._am.setVerifyCallback(function (path, asset) {\r\n            // When asset is compressed, we don't need to check its md5, because zip file have been deleted.\r\n            var compressed = asset.compressed;\r\n            // Retrieve the correct md5 value.\r\n            var expectedMD5 = asset.md5;\r\n            // asset.path is relative path and path is absolute.\r\n            var relativePath = asset.path;\r\n            // The size of asset file, but this value could be absent.\r\n            var size = asset.size;\r\n            if (compressed) {\r\n                panel.info.string = \"Verification passed : \" + relativePath;\r\n                return true;\r\n            }\r\n            else {\r\n                panel.info.string = \"Verification passed : \" + relativePath + ' (' + expectedMD5 + ')';\r\n                return true;\r\n            }\r\n        });\r\n\r\n        //this.info.string = 'Hot update is ready, please check or directly update.';\r\n\r\n        if (cc.sys.os === cc.sys.OS_ANDROID) {\r\n            // Some Android device may slow down the download process when concurrent tasks is too much.\r\n            // The value may not be accurate, please do more test and find what's most suitable for your game.\r\n            this._am.setMaxConcurrentTask(2);\r\n            //this.info.string = \"Max concurrent tasks count have been limited to 2\";\r\n        }\r\n\r\n        this.progressBar.progress = 0;\r\n    },\r\n\r\n    onDestroyNative: function () {\r\n        if (!cc.sys.isNative) {\r\n            return;\r\n        }\r\n        if (this._updateListener) {\r\n            this._am.setEventCallback(null);\r\n            this._updateListener = null;\r\n        }\r\n    }\r\n});","constVal.CMD_FRIST_MDM_LOBBY = 4000;\r\n\r\nconstVal.MDM_GL_LOBBY = constVal.CMD_FRIST_MDM_LOBBY + 1; //广场登录\r\nconstVal.SUB_GL_LOBBY_MSG = 4;\r\n\r\nlet datatypes = {};\r\n//消息数据包\r\ndatatypes.tagLobbyMessage = {\r\n\t'mainCmdID': constVal.MDM_GL_LOBBY,\r\n\t'subCmdID': constVal.SUB_GL_LOBBY_MSG,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'wMessageType',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wMessageLength',\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'szContent',\r\n\t\t}\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 4 + 200;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint16(1);\r\n\t\tbundle.writeUint16(200);\r\n\t\tbundle.writeString(args[0], 200);\r\n\t},\r\n\tcreateFromStream: function (stream, args) {\r\n\t\tlet wMessageType = stream.readUint16();\r\n\t\tlet wMessageLength = stream.readUint16();\r\n\t\tlet szContent = stream.readStringUTF8(wMessageLength);\r\n\t\targs.push(wMessageType, wMessageLength, szContent);\r\n\t}\r\n};\r\n\r\n//内核命令码\r\nconstVal.MDM_KN_COMMAND = 0; //内核命令\r\nconstVal.SUB_KN_DETECT_SOCKET = 1; //检测命令\r\nconstVal.SUB_KN_DETECT_ONLINE = 2; //在线检测\r\n//检测结构信息\r\ndatatypes.CMD_KN_DetectSocket = {\r\n\t'mainCmdID': constVal.MDM_KN_COMMAND,\r\n\t'subCmdID': constVal.SUB_KN_DETECT_SOCKET,\r\n\tsize: function () {\r\n\t\treturn 8;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint32(args[0]);\r\n\t\tbundle.writeUint32(args[1]);\r\n\t},\r\n\r\n};\r\n\r\nmodule.exports = {\r\n\t'constVal': constVal,\r\n\t'datatypes': datatypes\r\n};","\r\nlet datatypes = {};\r\n\r\nconstVal.constVal_FRIST_MDM_GAME = 1000;\r\n\r\n//游戏命令\r\nconstVal.MDM_GF_GAME = constVal.constVal_FRIST_MDM_GAME + 200; \r\n\r\nconstVal.MAX_LINE_COUNT  = 20\r\nconstVal.ITEM_X_COUNT    = 5\r\nconstVal.MAX_BET_COUNT   = 12\r\nconstVal.MAX_REWARD_POOL_INDEX = 4  //四个奖池的数量\r\n\r\n////////////////////////////////// 场景消息///////////////////////////////////////\r\n\r\nconstVal.GAME_SCENE_FREE     = 0     // 初始化\r\nconstVal.GAME_SCENE_WAIT     = 100   // 等待开始\r\nconstVal.GAME_SCENE_PLAY     = 101   // 游戏进行\r\nconstVal.GAME_SCENE_STOP     = 102   // 滚动停止\r\n\r\ndatatypes.CMD_S_StatusFree = {\r\n\r\n\tcreateFromStream: function (stream) {\r\n\r\n        let tmpMap = {};\r\n\r\n        //游戏属性\r\n        tmpMap.lCellScore = stream.readInt64().lo;   // 基础积分\r\n        \r\n        tmpMap.cbBetIndex = stream.readUint8();   // \r\n\r\n        tmpMap.cbBetCount = stream.readUint8();   // 下注数量\r\n\r\n        tmpMap.lBetScoreArr = [];\r\n\r\n        for(let i = 0; i < constVal.MAX_BET_COUNT ; i++){\r\n            let lBetScore = stream.readInt64().lo;   // 下注大小\r\n            tmpMap.lBetScoreArr.push(lBetScore);\r\n        };\r\n\r\n\r\n        tmpMap.lLotteryScore = stream.readInt64().lo;   // 房间彩金\r\n\r\n        tmpMap.bUnlockRewardID = stream.readUint8();   // 当前解锁id（1-4），比如是3，则1,2，3高亮显示\r\n\r\n        tmpMap.RewardPoolArr = [];\r\n\r\n        for (let i = 0; i < constVal.MAX_REWARD_POOL_INDEX ; i++) {\r\n            let llRewardPool = stream.readInt64().lo;\r\n            tmpMap.RewardPoolArr.push(llRewardPool);\r\n        };\r\n\r\n\r\n\t\treturn tmpMap;\r\n\t}\r\n};\r\n\r\n//游戏状态(场景消息，如果上次退出时还保留了次数你重进会直接收到PLAY，断线重连也会收到这个消息)\r\ndatatypes.CMD_S_StatusPlay = {\r\n\r\n\tcreateFromStream: function (stream) {\r\n\r\n        let tmpMap = {};\r\n\r\n        //游戏属性\r\n        tmpMap.lCellScore = stream.readInt64().lo;   // 基础积分\r\n    \r\n        tmpMap.cbBetCount = stream.readUint8();   // 下注数量\r\n\r\n        tmpMap.lBetScoreArr = [];\r\n\r\n        for(let i = 0; i < constVal.MAX_BET_COUNT ; i++){\r\n            let lBetScore = stream.readInt64().lo;   // 下注大小\r\n            tmpMap.lBetScoreArr.push(lBetScore);\r\n        };\r\n\r\n\t\ttmpMap.cbLineCount = stream.readUint8();   // 押线数量\r\n\t\ttmpMap.cbBetIndex = stream.readUint8();   // 押线索引\r\n\r\n\t\ttmpMap.lLineScore = [];\r\n        for(let i = 0; i < constVal.MAX_LINE_COUNT ; i++){\r\n            tmpMap.lLineScore.push(stream.readInt64().lo);// 线得分\r\n        };\r\n\r\n\t\ttmpMap.cbItemType = [];\r\n        for(let i = 0; i < constVal.MAX_LINE_COUNT ; i++){\r\n            tmpMap.cbItemType.push(stream.readUint8());// 线类型\r\n        };\r\n\r\n\t\ttmpMap.cbItemLineCount = [];\r\n        for(let i = 0; i < constVal.MAX_LINE_COUNT ; i++){\r\n            tmpMap.cbItemLineCount.push(stream.readUint8());// 线数\r\n        };\r\n\r\n\t\ttmpMap.ItemInfo = [];\r\n        for(let i = 0; i < 3 ; i++){\r\n\t\t\ttmpMap.ItemInfo[i] = []\r\n\t\t\tfor(let j = 0; j < constVal.ITEM_X_COUNT ; j++){\r\n\t\t\t\ttmpMap.ItemInfo[i].push(stream.readUint8());\r\n\t\t\t}\r\n        };\r\n\r\n\t\ttmpMap.nGiveAwayCount = stream.readUint32();//赠送次数\r\n\t\ttmpMap.nTotalGiveAwayCount = stream.readUint32();\r\n\t\ttmpMap.cbFreeSpinState = stream.readUint8();\r\n\t\ttmpMap.dUserTotalWinScore = stream.readInt64().lo\r\n\t\ttmpMap.lTotalGameScore = stream.readInt64().lo//游戏总分\r\n\t\ttmpMap.lLotteryScore = stream.readInt64().lo//房间彩金\r\n\t\ttmpMap.bCanBn = stream.readUint8();       \t//能否BN\r\n\r\n\t\ttmpMap.bVerifyMailBox = stream.readUint8();     //是否在获取保险箱的步步骤\r\n\t\ttmpMap.bUnlockRewardID = stream.readUint8();    //当前解锁id\r\n\t\ttmpMap.bBnSenceId = stream.readUint8();       \t//场景id（0-3）\r\n\t\ttmpMap.bRewardGoodsNum = stream.readUint8();    //场景奖品的个数\r\n\t\t\r\n\t\ttmpMap.bRewardGoodChoose = [];\r\n\t\tfor(let i = 0; i < 20 ; i++){\r\n\t\t\ttmpMap.bRewardGoodChoose.push(stream.readUint8());//场景物品被选择的id\r\n\t\t}\r\n\r\n\t\ttmpMap.llRewardNum = stream.readInt64().lo\t\t//目前分数\r\n\t\ttmpMap.bSkullNum = stream.readUint8();    \t\t//骷髅头数量\r\n\r\n\t\treturn tmpMap;\r\n\t}\r\n};\r\n\r\ndatatypes.CMD_S_Scence_Stop = {\r\n\t'mainCmdID': constVal.MDM_GF_GAME,\r\n\t'subCmdID': constVal.GAME_SCENE_STOP,\r\n\t'argTypes': [\r\n\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n\t}\r\n};\r\n\r\n// datatypes.CMD_S_StatusFree = {\r\n\r\n// \tcreateFromStream: function (stream) {\r\n\r\n//         let tmpMap = new Map();\r\n\r\n//         //游戏属性\r\n//         let lCellScore = stream.readInt64().lo;   // 基础积分\r\n//         tmpMap.set(\"lCellScore\",lCellScore);\r\n\r\n//         let cbBetIndex = stream.readUint8();   // \r\n//         tmpMap.set(\"cbBetIndex\",cbBetIndex);\r\n\r\n//         let cbBetCount = stream.readUint8();   // 下注数量\r\n//         tmpMap.set(\"cbBetCount\",cbBetCount);\r\n\r\n//         let lBetScoreArr = [];\r\n\r\n//         for(let i = 0; i < constVal.MAX_BET_COUNT ; i++){\r\n//             let lBetScore = stream.readInt64().lo;   // 下注大小\r\n//             lBetScoreArr.push(lBetScore);\r\n//         };\r\n//         tmpMap.set(\"lBetScore\",lBetScoreArr);\r\n\r\n//         let lLotteryScore = stream.readInt64().lo;   // 房间彩金\r\n//         tmpMap.set(\"lLotteryScore\",lLotteryScore);\r\n\r\n//         let bUnlockRewardID = stream.readUint8();   // 当前解锁id（1-4），比如是3，则1,2，3高亮显示\r\n//         tmpMap.set(\"bUnlockRewardID\",bUnlockRewardID);\r\n\r\n//         let RewardPoolArr = [];\r\n\r\n//         for (let i = 0; i < constVal.MAX_REWARD_POOL_INDEX ; i++) {\r\n//             let llRewardPool = stream.readInt64().lo;\r\n//             RewardPoolArr.push(llRewardPool);\r\n//         };\r\n//         tmpMap.set(\"llRewardPool\",RewardPoolArr);\r\n\r\n// \t\treturn tmpMap;\r\n// \t}\r\n// };\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////// 客户端消息 ///////////////////////////////////////\r\n\r\nconstVal.SUB_C_GAME_START            = 100   // 游戏开始\r\nconstVal.SUB_C_GIVE_AWAY_START       = 101   // 免费游戏开始\r\nconstVal.SUB_C_GAME_CONCLUDE         = 102   // 游戏结束\r\n\r\nconstVal.SUB_C_SENCE_CHOOSE          = 103   // 场景选择\r\nconstVal.SUB_C_REWARD_CHOOSE         = 104   // 奖励选择\r\nconstVal.SUB_C_MAILBOX_REWARD        = 105   // 开启保险箱奖励\r\nconstVal.SUB_C_BET_REWARDPOOL        = 106   // 押注请求奖池\r\n\r\n\r\n/**免费游戏开始*/\r\ndatatypes.CMD_C_GAME_AWAY_START = {\r\n\t\"mainCmdID\": constVal.MDM_GF_GAME,\r\n\t\"subCmdID\": constVal.SUB_C_GIVE_AWAY_START,\r\n\t\"argTypes\": [\r\n\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 0;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\r\n\t}\r\n};\r\n\r\n/**游戏开始*/\r\ndatatypes.CMD_C_GameStart = {\r\n\t\"mainCmdID\": constVal.MDM_GF_GAME,\r\n\t\"subCmdID\": constVal.SUB_C_GAME_START,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"cbLineCount\",\r\n\t\t\t\"type\": \"UINT8\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"cbBetIndex\",\r\n\t\t\t\"type\": \"UINT8\",\r\n\t\t},\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 2;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint8(args[0]);//押线数量\r\n        bundle.writeUint8(args[1]);//押线索引\r\n\t}\r\n};\r\n\r\n/**游戏结束*/\r\ndatatypes.CMD_GF_Game_Conclude = {\r\n\t\"mainCmdID\": constVal.MDM_GF_GAME,\r\n\t\"subCmdID\": constVal.SUB_C_GAME_CONCLUDE,\r\n\t\"argTypes\": [\r\n\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 0;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\r\n\t}\r\n};\r\n\r\n/**场景选择*/\r\ndatatypes.CMD_C_SenceChoose = {\r\n\t\"mainCmdID\": constVal.MDM_GF_GAME,\r\n\t\"subCmdID\": constVal.SUB_C_SENCE_CHOOSE,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"cbSenceID\",\r\n\t\t\t\"type\": \"UINT8\"\r\n\t\t},\r\n       \r\n\t],\r\n\tsize: function () {\r\n\t\treturn 1;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\r\n        bundle.writeUint8(args[0]);//(0-2),从0开始\r\n\r\n\t}\r\n};\r\n\r\n/**奖励选择*/\r\ndatatypes.CMD_C_RewardChoose = {\r\n\t\"mainCmdID\": constVal.MDM_GF_GAME,\r\n\t\"subCmdID\": constVal.SUB_C_REWARD_CHOOSE,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"cbGoodsID\",\r\n\t\t\t\"type\": \"UINT8\"\r\n\t\t},\r\n       \r\n\t],\r\n\tsize: function () {\r\n\t\treturn 1;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\r\n        bundle.writeUint8(args[0]);//(0-12)最大id,从0开始\r\n\r\n\t}\r\n};\r\n\r\n/**开启保险箱奖励*/\r\ndatatypes.CMD_C_MailBoxReward = {\r\n\t\"mainCmdID\": constVal.MDM_GF_GAME,\r\n\t\"subCmdID\": constVal.SUB_C_MAILBOX_REWARD,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"cdRewardID\",\r\n\t\t\t\"type\": \"UINT8\"\r\n\t\t},\r\n       \r\n\t],\r\n\tsize: function () {\r\n\t\treturn 1;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\r\n        bundle.writeUint8(args[0]);//奖池kind（1-4）\r\n\r\n\t}\r\n};\r\n\r\n/**押注请求奖池*/\r\ndatatypes.CMD_C_BetRewardPool = {\r\n\t\"mainCmdID\": constVal.MDM_GF_GAME,\r\n\t\"subCmdID\": constVal.SUB_C_BET_REWARDPOOL,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"cbBetIndex\",\r\n\t\t\t\"type\": \"UINT8\"\r\n\t\t},\r\n       \r\n\t],\r\n\tsize: function () {\r\n\t\treturn 1;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\r\n        bundle.writeUint8(args[0]);//押线索引\r\n\r\n\t}\r\n};\r\n\r\n//////////////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////// 服务端消息 ///////////////////////////////////////\r\n\r\nconstVal.SUB_S_GAME_START            = 100   // 结束信息\r\nconstVal.SUB_S_GAME_CONCLUDE         = 101   // 结束游戏\r\nconstVal.SUB_S_GAME_LOTTERY          = 102   // 房间彩金\r\nconstVal.SUB_S_SET_BASESCORE         = 104   // 设置底分\r\n\r\nconstVal.SUB_S_SUPERRABBIT_START\t = 105\t //超级兔子开始\r\nconstVal.SUB_S_SUPERRABBIT_END\t\t = 106\t //超级兔子结束\r\n\r\nconstVal.SUB_S_SENCE_CHOOSE\t\t\t = 107   //场景选择\r\nconstVal.Sub_S_REWARD_CHOOSE\t\t = 108   //奖励选择\r\nconstVal.SUB_S_MAILBOX_REWARD        = 109   //开启保险箱奖励\r\nconstVal.SUB_S_SEND_MAILBOX          = 110   //发送数据\r\nconstVal.SUB_S_LOCK_REWARDPOOL       = 111   //锁定奖池\r\nconstVal.SUB_S_BET_REWARDPOOL        = 112   //押注请求奖池\r\n\r\n\r\n\r\n\r\ndatatypes.CMD_S_GameStart = {\r\n\t'mainCmdID': constVal.MDM_GF_GAME,\r\n\t'subCmdID': constVal.SUB_S_GAME_START,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'ItemInfo',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'WildStickInfo',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'dLineScore',\r\n\t\t\t'type': 'INT64'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'cbItemType',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'cbLineCount',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'nGiveAwayCount',\r\n\t\t\t'type': 'INT16'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'nTotalGiveAwayCount',\r\n\t\t\t'type': 'INT16'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'cbFreeSpinState',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'dUserTotalWinScore',\r\n\t\t\t'type': 'INT64'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'bCanBn',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n        let data = {}\r\n\r\n        data.ItemInfo = [[],[],[]];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < constVal.ITEM_X_COUNT; j++) {\r\n                data.ItemInfo[i][j] = stream.readUint8();\r\n            };\r\n        };\r\n\r\n        data.WildStickInfo = [[],[],[]];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < constVal.ITEM_X_COUNT; j++) {\r\n                data.WildStickInfo[i][j] = stream.readUint8();\r\n            };\r\n        };\r\n\r\n        data.dLineScore = []\r\n\r\n        for (let i = 0; i < constVal.MAX_LINE_COUNT; i++) {\r\n            data.dLineScore[i] = stream.readInt64().lo;\r\n        };\r\n\r\n        data.cbItemType = []\r\n\r\n        for (let i = 0; i < constVal.MAX_LINE_COUNT; i++) {\r\n            data.cbItemType[i] = stream.readUint8();\r\n        };\r\n\r\n        data.cbLineCount = []\r\n\r\n        for (let i = 0; i < constVal.MAX_LINE_COUNT; i++) {\r\n            data.cbLineCount[i] = stream.readUint8();\r\n        };\r\n\r\n        data.nGiveAwayCount = stream.readUint32();\r\n        data.nTotalGiveAwayCount = stream.readUint32();\r\n        data.cbFreeSpinState = stream.readUint8();\r\n        data.dUserTotalWinScore = stream.readInt64().lo;\r\n        data.bCanBn = stream.readUint8();             \r\n\r\n\t\targs.push(data);\r\n\t}\r\n};\r\n\r\n//游戏结束\r\ndatatypes.CMD_S_Game_Conclude = {\r\n\t'mainCmdID': constVal.MDM_GF_GAME,\r\n\t'subCmdID': constVal.SUB_S_GAME_CONCLUDE,\r\n\t'argTypes': [\r\n\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n\t}\r\n};\r\n\r\n\r\ndatatypes.CMD_S_SendmailBox = {\r\n\t'mainCmdID': constVal.MDM_GF_GAME,\r\n\t'subCmdID': constVal.SUB_S_SEND_MAILBOX,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'llRewardPool',\r\n\t\t\t'type': 'INT64'\r\n\t\t}\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n        let RewardPoolArr = [];\r\n\r\n        for (let i = 0; i < constVal.MAX_REWARD_POOL_INDEX ; i++) {\r\n            let llRewardPool = stream.readInt64().lo;\r\n            RewardPoolArr.push(llRewardPool);\r\n        };\r\n\r\n\t\targs.push(RewardPoolArr);\r\n\t}\r\n};\r\n\r\n//场景选择\r\ndatatypes.CMD_S_SenceChoose = {\r\n\t'mainCmdID': constVal.MDM_GF_GAME,\r\n\t'subCmdID': constVal.SUB_S_SENCE_CHOOSE,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'bRewardGoodsNum',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n    \tlet data = {}\r\n\t\tdata.bRewardGoodsNum = stream.readUint8();//场景奖品的个数\r\n\t\targs.push(data);\r\n\r\n\t}\r\n};\r\n\r\n//场景奖励\r\ndatatypes.CMD_S_RewardChoose = {\r\n\t'mainCmdID': constVal.MDM_GF_GAME,\r\n\t'subCmdID': constVal.Sub_S_REWARD_CHOOSE,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'bRewardGoodsNum',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'llRewardValue',\r\n\t\t\t'type': 'INT64'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'cbGoodsID',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'stSendMainbox',\r\n\t\t\t'type': 'INT64'\r\n\t\t},\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n    \tlet data = {}\r\n\t\tdata.bRewardGoodsID = stream.readUint8();\t\t\t//(1-3)（金币，保险箱，骷髅头）\r\n\t\tdata.llRewardValue = stream.readInt64().lo;\t//每次的增量\r\n\t\tdata.cbGoodsID = stream.readUint8()\t\t\t\t\t//选择的物品id\r\n\r\n\t\tdata.stSendMainbox = [];\r\n\r\n        for (let i = 0; i < constVal.MAX_REWARD_POOL_INDEX ; i++) {\r\n            let llRewardPool = stream.readInt64().lo;\r\n            data.stSendMainbox.push(llRewardPool);\r\n        };\r\n\r\n\t\targs.push(data);\r\n\r\n\t}\r\n};\r\n\r\n//选择密码纸\r\ndatatypes.CMD_S_MailBoxReward = {\r\n\t'mainCmdID': constVal.MDM_GF_GAME,\r\n\t'subCmdID': constVal.SUB_S_MAILBOX_REWARD,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'llRewardValue',\r\n\t\t\t'type': 'INT64'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'cdRewardID',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n    \tlet data = {}\r\n\t\t\r\n\t\tdata.llRewardValue = stream.readInt64().lo;\t//获得的奖励\r\n\t\tdata.cdRewardID = stream.readUint8();\t\t\t\t//开宝箱动画id\r\n\r\n\t\targs.push(data);\r\n\r\n\t}\r\n};\r\n\r\n//锁定奖池\r\ndatatypes.CMD_S_LockMailBox = {\r\n\t'mainCmdID': constVal.MDM_GF_GAME,\r\n\t'subCmdID': constVal.SUB_S_LOCK_REWARDPOOL,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'bUnlockRewardID',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'stSendMainbox',\r\n\t\t\t'type': 'INT64'\r\n\t\t},\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n    \tlet data = {}\r\n\t\t\r\n\t\tdata.bUnlockRewardID = stream.readUint8();\t\t//当前解锁id（1-4），比如是3，则1,2，3高亮显示\r\n\t\tdata.stSendMainbox = [];\r\n\r\n        for (let i = 0; i < constVal.MAX_REWARD_POOL_INDEX ; i++) {\r\n            let llRewardPool = stream.readInt64().lo;\r\n            data.stSendMainbox.push(llRewardPool);\r\n        };\r\n\t\targs.push(data);\r\n\r\n\t}\r\n};\r\n\r\n//押注请求奖池\r\ndatatypes.CMD_S_BetRewardPool = {\r\n\t'mainCmdID': constVal.MDM_GF_GAME,\r\n\t'subCmdID': constVal.SUB_S_BET_REWARDPOOL,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'bUnlockRewardID',\r\n\t\t\t'type': 'INT8'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'stSendMainbox',\r\n\t\t\t'type': 'INT64'\r\n\t\t},\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n    \tlet data = {}\r\n\t\t\r\n\t\tdata.bUnlockRewardID = stream.readUint8();\t\t//当前解锁id（1-4），比如是3，则1,2，3高亮显示\r\n\t\tdata.stSendMainbox = [];\r\n\r\n        for (let i = 0; i < constVal.MAX_REWARD_POOL_INDEX ; i++) {\r\n            let llRewardPool = stream.readInt64().lo;\r\n            data.stSendMainbox.push(llRewardPool);\r\n        };\r\n\t\targs.push(data);\r\n\r\n\t}\r\n};\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////\r\n\r\nmodule.exports = {\r\n\t'constVal': constVal,\r\n\t'datatypes': datatypes\r\n};","\r\nlet gameModel = require('gameModel');\r\nlet GameUIManager = require('gameUIManager');appFacade\r\nlet appFacade = require('FishFacade');\r\n\r\nconst i18n = require('i18n');\r\n\r\nmodule.exports = puremvc.define(\r\n\t{\r\n\t\tparent: puremvc.Proxy,\r\n\t\tconstructor: function () {\r\n\t\t\tpuremvc.Proxy.call(this, this.constructor.NAME);\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tonRegister: function () {\r\n\r\n            this.gameModel = new gameModel(this.gameConfig,this);\r\n\t\t\tthis._globalDataProxy = this.facade.retrieveProxy('FishGlobalDataProxy');\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\tregisterNetInterface: function (app,gameinfo) {\r\n\r\n            this.app = app;\r\n\t\t    let net = app.net;\r\n\t\t    this.net = net;\r\n\t\t\t//this.gameUIManager = new GameUIManager(gameinfo.wKindID);\r\n\t\t\tthis.gameUIManager = new GameUIManager(520);\r\n\r\n\t\t},\r\n\r\n\t\t//更新reel cell\r\n\t\tupdateCellSprite(cell, col, isGetResult, cellKey, isReset){\r\n\t\t\tif (cellKey != null) {\r\n\t\t\t\t\r\n\t\t\t\tthis.sendNotification(\"GAMEVIEW_UPDATE_CELL_SPRITE\",cell, cellKey, col, isGetResult, isReset);\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t\r\n\t\t\tlet theCellKey = null\r\n\t\t\tif (isGetResult && this.gameModel._resultItems[col] && this.gameModel._resultItems[col].length > 0) {\r\n\t\t\t\ttheCellKey = this.gameModel._resultItems[col].pop();\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (theCellKey === null) {\r\n\t\t\t\ttheCellKey = this.gameModel.getNextSprite(col, cellKey)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.sendNotification(\"GAMEVIEW_UPDATE_CELL_SPRITE\",cell, theCellKey, col, isGetResult, isReset);\r\n\r\n\t\t},\r\n\r\n\r\n\t\t//////////////////////////////////////////////////////////// spin /////////////////////////////////////////////\r\n\t\t//滚动\r\n\t\tstartSpin(){\r\n\t\t\tif (this.gameModel._autoSpin > 0) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (!this._gameView){\r\n\t\t\t\tthis._gameView = appFacade.retrieveMediator(\"GameView\")\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.spin()\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\t//自动滚动\r\n\t\tautoSpin(times){\r\n\t\t\tif (this.gameModel._autoSpin <= 0){\r\n\t\t\t\tthis.gameModel._autoSpin = Help.checknumber(times) || 0\r\n\t\t\t\tif (this.gameModel._autoSpin >= 0) {\r\n\t\t\t\t\tthis.gameModel._autoSpin = this.gameModel._autoSpin - 1\r\n\t\t\t\t\tthis.sendNotification(\"SET_AUTO_PLAY_REMAINING\",this.gameModel._autoSpin);\r\n\t\t\t\t\tthis.spin()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.gameModel._autoSpin = Help.checknumber(times) || 0\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t//停止滚动\r\n\t\tstopSpin(){\r\n\t\t\r\n\t\t\tthis.fastStop()\r\n\t\t},\r\n\r\n\t\t//游戏开始前清理上局数据\r\n\t\tcleanStatusWithSpin(){\r\n\t\t\tthis.gameModel._spinResult = null\r\n\t\t\tthis.gameModel._totalWin = 0\r\n\t\t\r\n\t\t\tthis.clearAnimate()\r\n\t\t\tthis.cleanStatus()\r\n\t\t},\r\n\r\n\t\t\r\n\t\t//清理动画\r\n\t\tclearAnimate(){\r\n\t\t\tthis.stopDrawAnimate()\r\n\t\t},\r\n\r\n\t\t//清理数据\r\n\t\tcleanStatus(){\r\n\t\t\tthis.speedUpState = null\r\n\t\t},\r\n\r\n\t\t//开始滚动前执行\r\n\t\tspin(){\r\n\t\t\tlet totalBet = this.gameModel.getTotalBet()\r\n\t\t\tif (this.gameModel._freeSpin < 1) {\r\n\r\n\t\t\t\tif (this._globalDataProxy.getLogonSuccessData().lScore < totalBet) {\r\n\t\t\t\t\t//金币不足，无法进行游戏\r\n\t\t\t\t\t// showDialog(Multilingual(\"金币不足，无法进行游戏\"), enum.DialogShowBtn.OK, function()\r\n\t\t\t\t\t// \tif this._gameLayer && this._gameLayer.onClickShop then\r\n\t\t\t\t\t// \t\tthis._gameLayer:onClickShop()\r\n\t\t\t\t\t// \tend\r\n\t\t\t\t\t// end)\r\n\t\t\t\t\tthis.sendNotification(\"SHOW_DIALOG\",[\"Se você não tiver ouro suficiente, saia do quarto para recarregar\"]);\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._globalDataProxy.getLogonSuccessData().lScore = this._globalDataProxy.getLogonSuccessData().lScore - totalBet\r\n\t\t\t\tthis.sendNotification(\"UPDATE_UI_OF_USER_INFO\");\r\n\r\n\t\t\t}\r\n\t\t\r\n\t\t\tthis.sendNotification(\"SHOW_TOTAL_TEXT\",false);\r\n\t\t\tthis.cleanStatusWithSpin()\r\n\t\t\r\n\t\t\t// 免费游戏期间不清空totalwin\r\n\t\t\tif (this.gameModel._freeSpin < 1) {\r\n\t\t\t\tthis.sendNotification(\"CHANGE_GAME_BTN_STATE\",false);\r\n\t\t\t\tthis.sendNotification(\"SET_TOTAL_WIN\",this.gameModel._totalWin);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tthis.spinBoard()\r\n\t\t\r\n\t\t\tthis.requestSpin(this.gameModel._lineCount, this.gameModel._betIndex)\r\n\t\t},\r\n\r\n\t\t\r\n\t\t//滚动转盘\r\n\t\tspinBoard(){\r\n\t\t\t\t\t\t\r\n\t\t\tthis.gameUIManager.playAudio(\"start\",false)\r\n\t\t\tif (!this._gameView){\r\n\t\t\t\tthis._gameView = appFacade.retrieveMediator(\"GameView\")\r\n\t\t\t}\r\n\t\t\tthis.CurSpinLayer = this._gameView.getCurSpinLayer();\r\n\t\t\tthis.CurSpinLayer.spin(this.getSpinConfig())\r\n\t\t},\r\n\r\n\t\tgetSpinConfig(){\r\n\t\t\t\r\n\t\t\tlet spinConfig = []\r\n\r\n\t\t\tfor (let [col,reel] of Object.entries(this.CurSpinLayer.spinReels)){\r\n\t\t\t\tlet theStartAction = this.getSpinColStartAction(col)\r\n\t\t\t\tlet theReelConfig = {\r\n\t\t\t\t\t[\"col\"] : col,\r\n\t\t\t\t\t[\"action\"] : theStartAction,\r\n\t\t\t\t}\r\n\t\t\t\tspinConfig.push(theReelConfig)\r\n\t\t\t}\r\n\t\t\treturn spinConfig\r\n\t\t},\r\n\r\n\t\t//滚动配置\r\n\t\tgetSpinColStartAction(col){\r\n\r\n\t\t\tlet reelSpinConfig = this.gameConfig.reelSpinConfig\r\n\t\t\r\n\t\t\tlet spinAction = {}\r\n\t\t\tspinAction.delay            = reelSpinConfig.spinDelay * (col - 1)\r\n\t\t\tspinAction.speedUpTime      = reelSpinConfig.speedUpTime\r\n\t\t\tspinAction.maxSpeed         = reelSpinConfig.maxSpeed\r\n\t\t\tspinAction.upBounce         = reelSpinConfig.upBounce\r\n\t\t\tspinAction.upBounceTime     = reelSpinConfig.upBounceTime\r\n\t\t\tspinAction.upBounceMaxSpeed = reelSpinConfig.upBounceMaxSpeed\r\n\t\t\r\n\t\t\treturn spinAction\r\n\t\t},\r\n\r\n\t\t//创建免费游戏期间总奖励界面\r\n\t\tcreateFreeRewardLayer(){\r\n\t\t\tlet recvReward = function(){\r\n\t\t\t\tthis.freeGameEnd()\r\n\t\t\t}.bind(this)\r\n\t\t\r\n\t\t\tif (this._gameView && this._gameView.createFreeRewardLayer) {\r\n\t\t\t\tthis._gameView.createFreeRewardLayer(this.gameModel._freewin, recvReward)\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/////////////////////////////////////////////////////////////// stop ////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t//正常停止滚动\r\n\t\tnormalStop(){\r\n\t\t\tif (null === this.gameModel._spinResult) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\r\n\t\t\tthis.stop(this.gameModel._spinResult)\r\n\t\t},\r\n\r\n\t\t//手动按钮停止\r\n\t\tfastStop(){\r\n\t\t\tif (null === this.gameModel._spinResult) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (this.gameModel._autoSpin > 0) {\r\n\t\t\t\tthis.gameModel._autoSpin = 0\r\n\t\t\t}\r\n\t\t\tthis.fastStopBoard()\r\n\t\t},\r\n\r\n\t\t//开始停止滚动\r\n\t\tstop(data){\r\n\t\t\tthis.gameModel.adjustRecData(data)\r\n\t\t\tthis.genSpecialSymbolState(data)\r\n\t\t\tthis.stopReels(data)\r\n\t\t},\t\r\n\r\n\t\t//解析特殊符号\r\n\t\tgenSpecialSymbolState(data){\r\n\t\t\tthis.speedUpState = [] // 加速的列控制\r\n\t\t\tthis.notifyState = []  // 播放特殊symbol滚轴停止的时候的动画位置\r\n\t\t\r\n\t\t\tlet cItemList = data[\"item_list\"]\r\n\t\t\tlet checkConfig = this.gameModel.specialSymbolConfig\r\n\t\t\tfor (let [itemKey,theItemConfig] of Object.entries(checkConfig)){\r\n\t\t\t\tlet itemType = theItemConfig[\"type\"]\r\n\t\t\t\tlet itemCnt = 0\r\n\t\t\t\tlet isBreak = false\r\n\t\t\t\tlet baseColCnt = 5\r\n\t\t\t\tif (itemType) {\r\n\t\t\t\t\tfor (let col = 0;col < this._gameView.getCurSpinLayer().spinReels.length;col++) {\r\n\t\t\t\t\t\tlet colItemList = cItemList[col]\r\n\t\t\t\t\t\tlet colRowCnt = this._gameView.getCurSpinLayer().spinReels[col].row\r\n\t\t\t\t\t\tlet curColMaxCnt = theItemConfig[\"col_set\"][col] || colRowCnt\r\n\t\t\r\n\t\t\t\t\t\t// 分析是否需要加速\r\n\t\t\t\t\t\tif (curColMaxCnt > 0 && (itemCnt + curColMaxCnt) >= theItemConfig[\"min_cnt\"]) {\r\n\t\t\t\t\t\t\tthis.speedUpState[col] = this.speedUpState[col] || {}\r\n\t\t\t\t\t\t\tthis.speedUpState[col][itemKey] = true\r\n\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\t// 特殊符号动画\r\n\t\t\t\t\t\tfor (let [row,theItem] of Object.entries(colItemList)){\r\n\t\t\t\t\t\t\tif (theItem == itemKey) {\r\n\t\t\t\t\t\t\t\tthis.notifyState[col] = this.notifyState[col] || []\r\n\t\t\t\t\t\t\t\tthis.notifyState[col][itemKey] = this.notifyState[col][itemKey] || []\r\n\t\t\t\t\t\t\t\tthis.notifyState[col][itemKey].push([col, row])\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let [row,theItem] of Object.entries(colItemList)){\r\n\t\t\t\t\t\t\tif (theItem === itemKey) {\r\n\t\t\t\t\t\t\t\titemCnt = itemCnt + 1\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\t//停止滚动\r\n\t\tstopReels(data){\r\n\t\t\tlet endCallFunc = function(){\r\n\t\t\t\tlet nextCallFunc = function(){\r\n\t\t\t\t\tthis.spinning = false\r\n\t\t\t\t\tthis.handleResult()\r\n\t\t\t\t}.bind(this)\r\n\t\t\r\n\t\t\t\tif (this.stopEndFunc) {\r\n\t\t\t\t\tthis.stopEndFunc(nextCallFunc)\r\n\t\t\t\t\tthis.stopEndFunc = null\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tnextCallFunc()\r\n\t\t\t\t}\r\n\t\t\t}.bind(this)\r\n\t\t\r\n\t\t\tthis.stopBoard(data, endCallFunc)\r\n\t\t},\r\n\r\n\t\tstopBoard(data, endCallFunc){\r\n\t\t\tthis._gameView.getCurSpinLayer().stop(this.getStopConfig(), data[\"item_list\"], data[\"item_list_up\"], data[\"item_list_down\"], endCallFunc)\r\n\t\t},\r\n\r\n\t\tfastStopBoard(){\r\n\t\t\tcc.log(\"fast stop==============\")\r\n\t\t\tthis._gameView.getCurSpinLayer().fastStop()\r\n\t\t},\r\n\r\n\t\t// stop动画配置\r\n\t\tgetStopConfig(col){\r\n\t\t\tlet stopConfig = []\r\n\t\t\tfor (let [col,_] of Object.entries(this._gameView.getCurSpinLayer().spinReels)) {\r\n\t\t\t\tlet theStopAction = this.getSpinColStopAction(col)\r\n\t\t\t\tlet theReelConfig = {\r\n\t\t\t\t\t[\"col\"] : col,\r\n\t\t\t\t\t[\"action\"] : theStopAction\r\n\t\t\t\t}\r\n\t\t\t\tstopConfig.push(theReelConfig)\r\n\t\t\t}\r\n\t\t\treturn stopConfig\r\n\t\t},\t\r\n\r\n\t\tgetSpinColStopAction(col){\r\n\t\t\tlet reelStopConfig = this.gameConfig.reelSpinConfig\r\n\r\n\t\t\tlet spinAction = {}\r\n\r\n\t\t\tspinAction.stopDelay            = (col - 1) * reelStopConfig.stopDelay\r\n\t\t\tspinAction.speedDownTime        = reelStopConfig.speedDownTime\r\n\t\t\tspinAction.maxSpeed             = reelStopConfig.maxSpeed\r\n\t\t\tspinAction.downBounce           = reelStopConfig.downBounce\r\n\t\t\tspinAction.downBounceMaxSpeed   = reelStopConfig.downBounceMaxSpeed\r\n\t\t\tspinAction.downBounceTime       = reelStopConfig.downBounceTime\r\n\t\t\tspinAction.stopType             = 0\r\n\r\n\t\t\treturn spinAction\r\n\t\t},\t\r\n\t\t\r\n\t\t//检查是否需要加速\r\n\t\tcheckSpeedUp(checkCol){\r\n\t\t\tlet isNeedSpeedUp = false\r\n\t\t\tif (this.speedUpState && this.speedUpState[checkCol] && this.speedUpState[checkCol].length > 0) {\r\n\t\t\t\tisNeedSpeedUp = true\r\n\t\t\t}\r\n\t\t\treturn isNeedSpeedUp\r\n\t\t},\r\n\r\n\t\t// 播放加速动画\r\n\t\tplayReelNotifyEffect(col){\r\n\t\t},\r\n\t\t\r\n\t\t// 停止加速动画\r\n\t\tstopReelNotifyEffect(col){\r\n\t\t},\r\n\t\t\r\n\t\t// 滚轴滚到底(普通)\r\n\t\tonReelFallBottom(col){\r\n\t\t},\r\n\t\t\r\n\t\t// 滚轴滚到底(快速)\r\n\t\tonReelFastFallBottom(col){\r\n\t\t},\r\n\r\n\t\t//滚轴滚动停止\r\n\t\tonReelStop(col){\r\n\t\t\tif (this.notifyState && this.notifyState[col] && this.notifyState[col].length > 0) {\r\n\t\t\t\tthis.playSpecialSymbolStopAni(col, this.notifyState[col])\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tplaySpecialSymbolStopAni(col, symbols){\r\n\t\t\tthis._gameView.playSpecialSymbolStopAni(col, symbols)\r\n\t\t},\t\t\r\n\r\n\t\t// 场景消息处理\r\n\t\tdealSceneData(data){\r\n\t\t\tthis.gameModel._baseScore = data[\"baseScore\"]\r\n\t\t\tthis.gameModel._betCount = data[\"betCount\"]\r\n\t\t\tthis.gameModel._betList = data[\"betList\"]\r\n\t\t\tthis.gameModel._betIndex = data[\"bet_index\"]\r\n\t\t\t\r\n\t\t\tif (data[\"line_count\"]) {\r\n\t\t\t\tthis.gameModel._lineCount = data[\"line_count\"]\r\n\t\t\t}\r\n\r\n\t\t\tif (data[\"item_list\"]) {\r\n\t\t\t\tthis.gameModel._spinResult = data\r\n\t\t\t\tthis.gameModel._totalWin = this.gameModel._spinResult[\"total_win\"]\r\n\t\t\t\tthis.gameModel._freeSpin = this.gameModel._spinResult[\"free_spin\"]\r\n\t\t\t\tthis.gameModel._freewin  = this.gameModel._spinResult[\"free_win\"]\r\n\t\t\t\tthis.gameModel._freeState = this.gameModel._spinResult[\"free_state\"]\r\n\t\t\t\tthis.gameModel._betIndex = this.gameModel._spinResult[\"bet_index\"]\r\n\t\t\t\tthis.gameModel._lineCount = this.gameModel._spinResult[\"line_count\"]\r\n\r\n\t\t\t\tthis._globalDataProxy.getLogonSuccessData().lScore = this._globalDataProxy.getLogonSuccessData().lScore - this.gameModel.getTotalBet()\r\n\t\t\t\tthis.sendNotification(\"UPDATE_UI_OF_USER_INFO\");\r\n\t\t\t\tthis.sendNotification(\"CHANGE_GAME_BTN_STATE\",false);\r\n\t\t\t\tthis.sendNotification(\"SET_TOTAL_BET\",this.gameModel.getTotalBet());\r\n\t\t\t\t\r\n\t\t\t\tthis.gameModel.adjustRecData(this.gameModel._spinResult)\r\n\t\t\t\tthis.recoveryScene(this.gameModel._spinResult)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t// 设置投注\r\n\t\t\t\tthis.sendNotification(\"SET_TOTAL_BET\",this.gameModel.getTotalBet());\r\n\t\t\t\t// 准备\r\n\t\t\t\tthis.sendUserReady()\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// 处理spin结果消息\r\n\t\tdealRequestSpinResult(data_){\r\n\r\n\t\t\tlet data = this.gameModel.AddFakeData(data_)\r\n\t\t\tif (!this.gameModel._spinResult) {\r\n\t\t\t\tthis.gameModel._spinResult = data\r\n\t\t\t}\r\n\t\t\r\n\t\t\tthis.gameModel._totalWin = this.gameModel._spinResult[\"total_win\"]\r\n\t\t\tthis.gameModel._freeSpin = this.gameModel._spinResult[\"free_spin\"]\r\n\t\t\tthis.gameModel._freewin  = this.gameModel._spinResult[\"free_win\"]\r\n\t\t\tthis.gameModel._freeState = this.gameModel._spinResult[\"free_state\"]\r\n\t\t\r\n\t\t\tif (this.gameModel._autoSpin > 500) {\r\n\t\t\t\tthis.sendNotification(\"CHANGE_SPIN_BTN_STATE\",false);\r\n\t\t\t\tthis.normalStop()\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis._gameView.scheduleOnce(function(){\r\n\t\t\t\t\tif (this.gameModel._autoSpin <= 500) {\r\n\t\t\t\t\t\tthis.sendNotification(\"CHANGE_SPIN_BTN_STATE\",false);\r\n\t\t\t\t\t\tthis.normalStop()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif (this.gameModel._autoSpin > 0) {\r\n\t\t\t\t\t\t\tthis.fastStopBoard()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}.bind(this), 1)\r\n\t\t\t}\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\r\n\t\t// 游戏结束结算和动画展示\r\n\t\thandleResult(){\r\n\t\t\tthis.drawAnimate(this.gameModel._spinResult)\r\n\r\n\t\t\tthis.sendNotification(\"CHANGE_SPIN_BTN_STATE\",true);\r\n\r\n\t\t\tif (this.gameModel._freeState === 1 && this.gameModel._freeSpin > 0) {\r\n\t\t\t\t//todo\r\n\t\t\t\t// performWithDelay(this._gameScene, function()\r\n\t\t\t\t// \tthis.createStartFreeLayer()\r\n\t\t\t\t// end, 2)\r\n\t\t\t}\r\n\t\t\telse if (this.gameModel._freeState === 3 && this.gameModel._freeSpin < 1) {\r\n\t\t\t\t//免费spin结束一局\r\n\t\t\t\tlet delay = 0\r\n\t\t\t\tif (this.gameModel._totalWin > 0) {\r\n\t\t\t\t\tdelay = 1\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.gameModel._curwinscore = this.gameModel._freewin\r\n\t\t\t\t//todo\r\n\t\t\t\t// performWithDelay(this._gameScene, function()\r\n\t\t\t\t// \tthis._gameLayer:setFreeGameFireVisible(false)\r\n\t\t\t\t// \tthis.createFreeRewardLayer()\r\n\t\t\t\t// end, delay)\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// 免费游戏期间，单局不结算，统一结束后结算\r\n\t\t\tif (this.gameModel._freeSpin < 1 && this.gameModel._freeState != 3) {\r\n\t\t\t\t//非免费spin正常结束一局\r\n\t\t\t\tthis.sendNotification(\"SET_TOTAL_WIN\",this.gameModel._totalWin);\r\n\t\t\t\tthis.sendNotification(\"UPDATE_SCORE\",this.gameModel._totalWin);\r\n\t\t\t\tthis.sendNotification(\"CHANGE_GAME_BTN_STATE\",true);\r\n\r\n\t\t\t\tthis.gameModel._curwinscore = this.gameModel._totalWin\r\n\t\t\t}\r\n\t\t\telse{\t\t\t\r\n\t\t\t\tthis.sendNotification(\"SET_TOTAL_WIN\",this.gameModel._freewin);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.gameModel._freeState != 3) {\r\n\t\t\t\tthis.requestStop()\r\n\t\t\t}\r\n\r\n\t\t\tif (this.gameModel._freeState === 2 && this.gameModel._freeSpin > 0) {\r\n\t\t\t\tlet delay = 0.3\r\n\t\t\t\tif (this.gameModel._totalWin > 0) {\r\n\t\t\t\t\tdelay = 1\r\n\t\t\t\t}\r\n\t\t\t\t//todo\r\n\t\t\t\t// performWithDelay(this._gameScene, function()\r\n\t\t\t\t// \tthis.freeGameStart()\r\n\t\t\t\t// end, delay)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// 处理游戏结束消息\r\n\t\tdealRequestStopResult(){\r\n\t\t\tlet _Wincallbackfun = null\r\n\t\t\tif (this.gameModel._autoSpin && this.gameModel._autoSpin > 0) {\r\n\t\t\t\tlet delay = 0.3\r\n\t\t\t\tif (this.gameModel._totalWin > 0) {\r\n\t\t\t\t\tdelay = 1\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet timeCallback = function (dt) {\r\n\t\t\t\t\tthis.gameModel._autoSpin = this.gameModel._autoSpin - 1\r\n\t\t\t\t\tthis.sendNotification(\"SET_AUTO_PLAY_REMAINING\",this.gameModel._autoSpin);\r\n\t\t\t\t\tthis.spin()\r\n\t\t\t\t}.bind(this)\r\n\t\t\t\tthis._gameView.scheduleOnce(timeCallback, delay);\r\n\t\t\t\t//todo\r\n\t\t\t\t// _Wincallbackfun = function(){\r\n\t\t\t\t// \tlet timeCallback = function (dt) {\r\n\t\t\t\t// \t\tthis.gameModel._autoSpin = this.gameModel._autoSpin - 1\r\n\t\t\t\t// \t\tthis.sendNotification(\"SET_AUTO_PLAY_REMAINING\",this.gameModel._autoSpin);\r\n\t\t\t\t// \t\tthis.spin()\r\n\t\t\t\t// \t}.bind(this)\r\n\t\t\t\t// \tthis.scheduleOnce(timeCallback, delay);\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.sendNotification(\"SET_AUTO_PLAY_REMAINING\",0);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.gameModel._curwinscore/this.gameModel.getTotalBet() >= 5) {\r\n\t\t\t\tif (_Wincallbackfun === null) {\r\n\t\t\t\t\t_Wincallbackfun = function(){\r\n\t\t\t\t\t\tthis.sendNotification(\"SHOW_TOTAL_TEXT\",true);\r\n\t\t\t\t\t}  \r\n\t\t\t\t}\r\n\t\t\t\tthis.sendNotification(\"SHOW_TOTAL_TEXT\",false);\r\n\t\t\t}\r\n\r\n\t\t\t///////测试用\r\n\t\t\tthis.sendNotification(\"SHOW_TOTAL_TEXT\",true);\r\n\t\t\t// setTimeout(function(){\r\n\t\t\t// \tthis.sendNotification(\"SHOW_TOTAL_TEXT\",false);\r\n\t\t\t// }.bind(this), 4000)\r\n\t\t\t\r\n\t\t\t/////////\r\n\r\n\t\t\t//todo\r\n\t\t\t//this._gameLayer:checkWinShow(this._curwinscore,this:getTotalBet(),_Wincallbackfun)\r\n\r\n\t\t\tthis._curwinscore = 0\r\n\t\t},\r\n\r\n\t\t/// 绘制动画\r\n\t\tdrawAnimate(data){\r\n\t\t\tif (data === null) {\r\n\t\t\t\tcc.log(\"data error.............\")\r\n\t\t\t\tcc.log(data)\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (data && data[\"win_lines\"] && data[\"win_lines\"].length > 0) {\r\n\t\t\t\tthis.drawLinesThemeAnimate(this.gameModel.winLines, this._gameView.getCurSpinLayer(), data)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// 移除动画\r\n\t\tstopDrawAnimate(){\r\n\t\t\tthis.sendNotification(\"STOP_DRAW_ANIMATE\");\r\n\t\t},\r\n\r\n\t\tdrawLinesThemeAnimate(lines, layer, rets){\r\n\t\t\tthis.sendNotification(\"DRAW_LINES_THEME_ANIMATE\",lines, layer, rets);\r\n\t\t},\t\t\r\n\r\n\t\t/////////////////////////////////////////////////////////////// free game ///////////////////////////////////////////////////////////////\r\n\t\tfreeGameStart(){\r\n\t\t\t// this._gameLayer:setFreeGameFireVisible(true)\r\n\t\t\t// if this._gameView && this._gameView.setFreeRemain then\r\n\t\t\t// \tthis._gameView.setFreeRemain(this.gameModel._freeSpin - 1)\r\n\t\t\t// end\r\n\t\t\t// this.spin()\r\n\t\t},\r\n\t\t\r\n\t\tfreeGameEnd(){\r\n\t\t\t\r\n\t\t\tthis.sendNotification(\"UPDATE_SCORE\",this.gameModel._freewin);\r\n\t\t\tthis.sendNotification(\"CHANGE_GAME_BTN_STATE\",true);\r\n\t\t\tthis.gameModel._freewin = 0\r\n\t\t\tthis.requestStop()\r\n\t\t},\r\n\t\t\r\n\t\trecoveryScene(data){\r\n\r\n\t\t\tlet intervalId = setInterval(function() {\r\n\t\t\t\tif (appFacade.retrieveMediator(\"GameView\")) {\r\n\t\t\t\t\tif (appFacade.retrieveMediator(\"GameView\").IsinitSpinLayer) {\r\n\t\t\t\t\t\tthis.sendNotification(\"CHANGE_GAME_BTN_STATE\",false);\r\n\t\t\t\t\t\tfor (let [col,keys] of Object.entries(data[\"item_list\"])) {\r\n\t\t\t\t\t\t\tfor (let [row,key] of Object.entries(keys)) {\r\n\t\t\t\t\t\t\t\tlet cell = this._gameView.getCurSpinLayer().getCell(col, row)\r\n\r\n\t\t\t\t\t\t\t\t// let labnode = new cc.Node()\r\n\t\t\t\t\t\t\t\t// labnode.color = cc.Color.RED\r\n\t\t\t\t\t\t\t\t// labnode.setScale(0.7)\r\n\t\t\t\t\t\t\t\t// let lab = labnode.addComponent(cc.Label)\r\n\t\t\t\t\t\t\t\t// lab.string = \"col:\" + col + \"   \" + \"row:\" + row\r\n\t\t\t\t\t\t\t\t// cell.addChild(labnode)\r\n\r\n\t\t\t\t\t\t\t\tthis.updateCellSprite(cell, col, true, key)\r\n\t\t\t\t\t\t\t\tcc.log(\"recoveryScene\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\tthis.handleResult()\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tclearInterval(intervalId);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}.bind(this), 100);\r\n\r\n\t\t},\r\n\r\n\t\t/////////////////////////////////////////////////////////////// network ///////////////////////////////////////////////////////////////\r\n\t\t\r\n\t\t// 发送准备\r\n\t\tsendUserReady(){\r\n\t\t\tappFacade.sendNotification(FishConstants.GAME_TABLE_COMMAND,\"sendUserReady\");\r\n\t\t},\r\n\r\n\t\t// 请求spin数据\r\n\t\trequestSpin(lineNum, betNum){\r\n\t\t},\r\n\r\n\t\t// 游戏结束\r\n\t\trequestStop(){\r\n\t\t},\r\n\r\n\t\t//场景消息\r\n\t\tonEventGameScene: function (gameStatus) {\r\n\t\t\tcc.log('场景消息');\r\n\t\t},\r\n\r\n\t\t//通知玩家准备\r\n\t\tonGetNoticeReady(){\r\n    \t\tthis.sendUserReady()\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tNAME: 'GameProxy'\r\n\t});","let GameSpinReel = require('GameSpinReel');\r\n\r\n\r\nlet ReelStatus = {\r\n    [\"start\"]           : 1,\r\n    [\"running\"]         : 2,\r\n    [\"stopping\"]        : 3,\r\n    [\"downbounce\"]      : 4,\r\n    [\"stop\"]            : 5\r\n};\r\n\r\nlet GameSpinLayer = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        winSize:cc.Size,\r\n    },\r\n\r\n    onLoad (reelConfig) {\r\n        let winSize = cc.winSize\r\n        this.node.setAnchorPoint(0.5, 0.5)\r\n        this.node.setContentSize(winSize)\r\n        this.node.setPosition(cc.v2(winSize.width / 2, winSize.height / 2))\r\n    },\r\n\r\n    init(){\r\n        let reelConfigList = arguments[0]\r\n        let boardNode = arguments[1]\r\n        let gameViewLayer = arguments[2]\r\n\r\n        this.isActive = false\r\n        this.running = false\r\n        this.stopping = false\r\n    \r\n        this.boardNode = boardNode\r\n        this.reelConfig = reelConfigList\r\n        this.spinReels = []\r\n        for (let [col,reelConfig] of Object.entries(reelConfigList)){\r\n            let reelNode = boardNode.getReelNode(col)\r\n            let spinReel = new GameSpinReel(col, this, reelNode, reelConfig,gameViewLayer)\r\n            reelNode.addChild(spinReel)\r\n            this.spinReels.push(spinReel)\r\n        }\r\n    },\r\n\r\n    Active()\r\n    {\r\n        this.isActive = true;\r\n        this.boardNode.active = true;\r\n    \r\n        let i = 0\r\n        let total = 0\r\n        let dt_60 = []\r\n\r\n\r\n        this.onUpdate = function(dt){\r\n            if (dt_60[i]) {\r\n                total = total - dt_60[i]\r\n            }\r\n\r\n            dt_60[i] = dt\r\n            total = total + dt\r\n            i = i + 1\r\n            if (i > 60) {\r\n                i = 1\r\n            }\r\n\r\n            let calc_dt = total / dt_60.length\r\n            if (calc_dt > 1 / 30) {\r\n                dt_60 = []\r\n                i = 1\r\n            }\r\n            else{\r\n                dt = calc_dt\r\n            }\r\n            if (dt===null ){\r\n                cc.log(dt)\r\n            }\r\n\r\n            if (this.isActive && this.spinReels != null) {\r\n                for (let [col,spinReel] of Object.entries(this.spinReels)){\r\n                    \r\n                    spinReel.updateCallFunc(dt)\r\n                }\r\n            }\r\n        \r\n        }   \r\n        this.timer = cc.director.getScheduler()\r\n        this.timer.schedule(this.onUpdate, this, 0, false);\r\n        \r\n    },\r\n\r\n    DeActive(){\r\n        this.isActive = false\r\n        this.running = false\r\n        this.stopping = false\r\n        this.boardNode.active = false\r\n        this.resetBoard()\r\n        if(this.timer){\r\n            this.timer.unschedule(this.onUpdate,this);\r\n        }\r\n    },\r\n\r\n    resetBoard(){\r\n        for (let [col,_] of Object.entries(this.spinReels)){\r\n            this.spinReels[col].resetCol();\r\n        }\r\n    },\r\n\r\n    setCellStatus(visible){\r\n        for (let [index,theReel] of Object.entries(this.spinReels)){\r\n            theReel.setCellStatus(visible)\r\n        }\r\n    },\r\n\r\n    getCell(col, row){\r\n        return this.spinReels[col].getRetCell(Number(row) + 1)\r\n    },\r\n\r\n    getCellSize(colId){\r\n        return new cc.Size(this.reelConfig[colId].cellWidth, this.reelConfig[colId].cellHeight)\r\n    },\r\n\r\n    getCellPos(col, row){\r\n        let reel = this.spinReels[col]\r\n        let addPos = cc.v2(0.5 * reel.cellWidth, (reel.row - row + 0.5) * reel.cellHeight)\r\n        return (this.spinReels[col].basePos.add(addPos)).add(this.spinReels[col].adjustPos)\r\n    },\r\n\r\n    checkDealWithReelStop(){\r\n        let hasSpinningReel = false\r\n        for (let [index,theReel] of Object.entries(this.spinReels)){\r\n            if (theReel.curStatus != ReelStatus.stop) {\r\n                hasSpinningReel = true\r\n                break\r\n            }\r\n        }\r\n        \r\n        if (!hasSpinningReel) {\r\n            this.running = false\r\n            this.stopping = false\r\n            if (this.endCallFunc) {\r\n                this.endCallFunc()\r\n                this.endCallFunc = null\r\n            }\r\n        }\r\n    },\r\n\r\n    spin(spinConfig){\r\n        if (this.running) {\r\n            return null\r\n        }\r\n        this.running = true\r\n        this.endCallFunc = null\r\n        this.itemList = null\r\n        for (let [_,theReelConfig] of Object.entries(spinConfig)){\r\n            let col = theReelConfig[\"col\"]\r\n            let actionConfig = theReelConfig[\"action\"]\r\n            this.spinReels[col].spin(actionConfig)\r\n        }\r\n    },\r\n\r\n    stop(stopConfig, stopItemList, uplist, downlist, endCallFunc){\r\n        if (!this.running || this.stopping) {\r\n            return null\r\n        }\r\n        this.stopping = true\r\n        this.endCallFunc = endCallFunc\r\n        this.itemList = stopItemList\r\n        for (let [index,stopReelConfig] of Object.entries(stopConfig)){\r\n            let theCol = stopReelConfig[\"col\"]\r\n            let theAction = stopReelConfig[\"action\"]\r\n            let colItemList = stopItemList[theCol]\r\n            this.spinReels[theCol].stop(theAction, colItemList, uplist && uplist[theCol], downlist && downlist[theCol])\r\n        }\r\n    },\r\n\r\n    fastStop(){\r\n        if (!this.running || !this.itemList) {\r\n            return null\r\n        }\r\n        for (let [_,reel] of Object.entries(this.spinReels)){\r\n            reel.fastStop()\r\n        }\r\n    },\r\n\r\n});\r\nmodule.exports = GameSpinLayer;","let appFacade = require('FishFacade');\r\nlet ReelStatus = {\r\n    [\"start\"]           : 1,\r\n    [\"running\"]         : 2,\r\n    [\"stopping\"]        : 3,\r\n    [\"downbounce\"]      : 4,\r\n    [\"stop\"]            : 5\r\n}\r\n\r\nlet GameSpinReel = cc.Class({\r\n    extends: cc.Node,\r\n\r\n    /*[[\r\n        构造函数\r\n    \r\n        @param colid        列id \r\n        @param spinLayer    滚动盘控制器\r\n        @param reelNode     滚轴节点, 所有符号节点的父节点\r\n        @param reelConfig   滚轴配置(滚轴坐标, 微调坐标, 符号大小, 符号数量)\r\n    ]]*/\r\n    ctor:function () {\r\n        let colid = arguments[0]\r\n        let spinLayer = arguments[1]\r\n        let reelNode = arguments[2]\r\n        let reelConfig = arguments[3]\r\n        let gameViewLayer = arguments[4]\r\n\r\n        this.colid              = colid                                     // 列号\r\n        this.spinLayer          = spinLayer                                 // 滚盘控制器\r\n        this.reelNode           = reelNode                                  // 滚轴节点\r\n        this.row                = reelConfig[\"symbolCount\"]                 // 行数\r\n        this.basePos            = reelConfig[\"base_pos\"]                    // 起始坐标\r\n        this.adjustPos          = reelConfig[\"adjust_pos\"]                  // 微调坐标\r\n        this.cellWidth          = reelConfig[\"cellWidth\"]                   // 符号宽度\r\n        this.cellHeight         = reelConfig[\"cellHeight\"]                  // 符号高度\r\n        this.addBelow           = 3                                         // 可视区域下方额外的符号数\r\n        this.addTop             = 1                                         // 可视区域上方额外的符号数\r\n        this.number             = this.addBelow + this.row + this.addTop    // 当前列符号总数\r\n        this.maxIndex           = this.number - 1                           // 最大符号id\r\n        this.minIndex           = 0                                         // 最小符号id\r\n        this.lastIndex          = this.minIndex                             // 最后位符号id\r\n        this.currentIndex       = this.row + this.addBelow - 1              // 当前位符号id(参照点符号)\r\n        this.actionQueue        = []                                        // 动作列表\r\n        this.curAction          = null                                       // 当前执行的动作\r\n        this.curStatus          = ReelStatus.stop                           // 当前状态\r\n        this.itemList           = null                                       // 开奖符号列表\r\n        this.ExtraSymbolCount   = 6                                         // 停止时额外滚动的符号数\r\n        this.width              = this.cellWidth                            // 当前滚轴的宽度\r\n        this.height             = this.cellHeight * this.number             // 当前滚轴的高度\r\n        this.cells              = {}                                        // 符号节点列表\r\n\r\n\r\n        this.setContentSize(cc.v2(this.width, this.height))\r\n\r\n        this.gameCtrl           = appFacade.retrieveProxy('GameProxy')\r\n        this.gameViewLayer      = gameViewLayer\r\n        this.initCell()\r\n    },\r\n\r\n    initCell(){\r\n        for (let i = this.minIndex; i <= this.maxIndex;i++) {\r\n            let theCell = this.gameViewLayer.createCellSprite(this.colid, i)\r\n            if (theCell) {\r\n                let adjustPos = cc.v2(0.5 * this.cellWidth, (i - this.addBelow + 0.5) * this.cellHeight)\r\n                let cellPos = (this.basePos.add(adjustPos)).add(this.adjustPos)\r\n                theCell.setPosition(cellPos)\r\n                this.reelNode.addChild(theCell)\r\n                this.cells[i] = theCell\r\n            }\r\n        }\r\n    },\r\n\r\n    resetCol(){\r\n        this.curStatus      = ReelStatus.stop\r\n        this.lastIndex      = this.minIndex\r\n        this.currentIndex   = this.row + this.addBelow - 1\r\n        this.curSpeed       = 0\r\n        this.curAction      = null\r\n        this.isReelStoping  = false\r\n\r\n        this.clearActions()\r\n        this.resetCellsPosition()\r\n    },\r\n\r\n    resetCellsPosition(){\r\n        for (let index = this.minIndex; index < this.maxIndex;index++) {\r\n            let theCell = this.cells[index]\r\n            let adjustPos = cc.v2(0.5 * this.cellWidth, (index - this.addBelow + 0.5) * this.cellHeight)\r\n            let cellPos = (this.basePos.add(adjustPos)).add(this.adjustPos);\r\n            theCell.setPosition(cellPos)\r\n        }\r\n\r\n    },\r\n\r\n    /*\r\n        滚动自更新函数, 检索待执行动作列表按序执行\r\n\r\n        action = {\r\n            beginFun            执行前回调函数\r\n            endFun              结束后回调函数\r\n            totalTime           执行时长\r\n            endSpeed            最大速度\r\n            accelerationTime    加速度\r\n            delay               不更新cell坐标\r\n        }\r\n        @param dt 时间间隔\r\n    */\r\n    updateCallFunc(dt){\r\n        //cc.log(dt)\r\n        if (this.onDelayStopSchedule) {\r\n            this.delayTotalTime = this.delayTotalTime + dt\r\n            \r\n            if (this.delayTotalTime > this.stopConfig.stopDelay) {\r\n                //todo\r\n                if (this.gameCtrl.checkSpeedUp(this.colid)==false) {\r\n                    this.onDelayStopSchedule = false\r\n                    this.onReelStartStop()                    \r\n                }        \r\n                \r\n            }\r\n        }\r\n        if (!this.curAction && this.actionQueue.length > 0) {\r\n            this.curAction = this.actionQueue.shift()\r\n            this.currentTime = 0\r\n            this.acceleration = null\r\n\r\n            if (this.curAction.beginFun) {\r\n                this.curAction.beginFun(this.colid)\r\n            }\r\n        }\r\n\r\n        if (this.curAction) {\r\n            this.refresh(dt)\r\n        }\r\n    },\r\n\r\n    /*\r\n        更新每个cell的坐标\r\n    \r\n        当参照符号的坐标小于可视区域顶部坐标时, 将当前参照符号的下个符号(index + 1)设置为参照符号\r\n        直至参照符号的坐标大于可视区域顶部坐标\r\n    \r\n        @param dt 时间间隔\r\n    */\r\n    refresh(dt){\r\n        this.currentTime = this.currentTime + dt\r\n        let timeLeft = 0\r\n        let isCurrentActionEnd = false\r\n    \r\n        // 回调超出时间的坐标\r\n        if (this.currentTime >= this.curAction.totalTime) {\r\n            timeLeft = this.currentTime - this.curAction.totalTime\r\n            isCurrentActionEnd = true\r\n            dt = dt - timeLeft\r\n        }\r\n    \r\n        if (!this.curAction.delay) {\r\n            let moveY = this.getMoveY(dt)\r\n            for (let [_,theCell] of Object.entries(this.cells)){\r\n                theCell.y = theCell.y + moveY\r\n            }\r\n    \r\n            let _currentCell = this.getCurrentCell()\r\n            while (_currentCell.y < (this.basePos.y + this.adjustPos.y) + (this.row) * this.cellHeight) {\r\n                this.currentIndex = this.increaseIndex(this.currentIndex)\r\n                //todo\r\n                this.gameCtrl.updateCellSprite(this.getNextCell(), this.colid, this.isReelStoping)\r\n                _currentCell = this.getCurrentCell()\r\n            }\r\n        }\r\n    \r\n        if (isCurrentActionEnd) {\r\n            if (this.curAction.endFun) {\r\n                this.curAction.endFun(this.colId)\r\n            }\r\n            this.curAction = null\r\n        }\r\n    \r\n        if (timeLeft > 0) {\r\n            this.updateCallFunc(timeLeft)\r\n        }\r\n    },\r\n\r\n    /*\r\n        获取移动距离, 由当前执行动作的速度和加速度得出\r\n    \r\n        @param dt 时间间隔\r\n    */\r\n    getMoveY(dt){\r\n        if (!this.acceleration) {\r\n            if (!this.curSpeed) {\r\n                this.curSpeed = 0\r\n            }\r\n            if (this.curAction.endSpeed != this.curSpeed && this.curAction.accelerationTime) {\r\n                this.acceleration = (this.curAction.endSpeed - this.curSpeed) / this.curAction.accelerationTime\r\n            }\r\n            else{\r\n                this.acceleration = 0\r\n                this.curSpeed = this.curAction.endSpeed\r\n            }\r\n        }\r\n    \r\n        let tempSpeed = this.curSpeed + this.acceleration * dt\r\n        if (this.acceleration > 0) {\r\n            if (tempSpeed > this.curAction.endSpeed) {\r\n                tempSpeed = this.curAction.endSpeed\r\n                this.acceleration = 0\r\n            }\r\n        }\r\n        else if (this.acceleration < 0) {\r\n            if (tempSpeed < this.curAction.endSpeed) {\r\n                tempSpeed = this.curAction.endSpeed\r\n                this.acceleration = 0\r\n            }\r\n        }\r\n    \r\n        let moveDis = (tempSpeed + this.curSpeed) / 2 * dt\r\n        this.curSpeed = tempSpeed\r\n        return moveDis\r\n    },\r\n\r\n    setCellStatus(visible){\r\n        for (let [_,theCell] of Object.entries(this.cells)){\r\n            theCell.active = visible;\r\n        }\r\n    },\r\n\r\n    getRetCell(index){\r\n        let cellIndex = this.currentIndex - index + 1\r\n        if (cellIndex < 0) {\r\n            cellIndex = cellIndex + this.number\r\n        }\r\n        else if (cellIndex > this.number - 1) {\r\n            cellIndex = 0\r\n        }\r\n        return this.cells[cellIndex]\r\n    },\r\n\r\n    getCurrentCell(){\r\n        return this.cells[this.currentIndex]\r\n    },\r\n\r\n    getNextCell(){\r\n        let tempIndex = this.currentIndex + 1\r\n        if (tempIndex > this.number - 1) {\r\n            tempIndex = 0\r\n        }\r\n        return this.cells[tempIndex]\r\n    },\r\n\r\n    getFirstCell(){\r\n        let firstIndex = this.lastIndex - 1\r\n        if (firstIndex < 0) {\r\n            firstIndex = this.number - 1\r\n        }\r\n        return this.cells[firstIndex]\r\n    },\r\n\r\n    getLastCell(){\r\n        return this.cells[this.lastIndex]\r\n    },\r\n    \r\n    increaseIndex(index){\r\n        let tempIndex = index + 1\r\n        if (tempIndex > this.number - 1) {\r\n            tempIndex = 0\r\n        }\r\n        let firstCell = this.getFirstCell()\r\n        let lastCell = this.getLastCell()\r\n        lastCell.y = firstCell.y + this.cellHeight\r\n        this.lastIndex = this.lastIndex + 1\r\n        if (this.lastIndex > this.number - 1) {\r\n            this.lastIndex = 0\r\n        }\r\n        return tempIndex\r\n    },\r\n\r\n    decreaseIndex(index){\r\n        let tempIndex = index - 1\r\n        if (tempIndex < 0) {\r\n            tempIndex = tempIndex + this.number\r\n        }\r\n        let firstCell = this.getFirstCell()\r\n        let lastCell = this.getLastCell()\r\n        firstCell.y = lastCell.y - this.cellHeight\r\n        this.lastIndex = this.lastIndex - 1\r\n        if (this.lastIndex < 0) {\r\n            this.lastIndex = this.number - 1\r\n        }\r\n        return tempIndex\r\n    },\r\n\r\n    spin(spinConfig){\r\n        if (spinConfig.locked) {\r\n            this.curStatus = ReelStatus.stop\r\n            this.locked = true\r\n            return null\r\n        }\r\n\r\n        if (this.curStatus != ReelStatus.stop) {\r\n            return null\r\n        }\r\n\r\n        this.locked = false\r\n        this.start(spinConfig)\r\n        this.curStatus = ReelStatus.running\r\n    },\r\n\r\n    start(spinConfig){\r\n        this.itemList = null\r\n        this.curStatus = ReelStatus.start\r\n        this.spinConfig = spinConfig\r\n        this.onDelayStopSchedule = false\r\n        this.actionQueue = []\r\n        this.parseStart(spinConfig)\r\n\r\n    },\r\n\r\n    parseStart(spinConfig){\r\n        if (spinConfig.upBounceTime > 0) {\r\n            let tAcc = (spinConfig.upBounceMaxSpeed * spinConfig.upBounceTime - spinConfig.upBounce) / spinConfig.upBounceMaxSpeed\r\n            let tMax = spinConfig.upBounceTime - 2 * tAcc\r\n            this.actionQueue.push({[\"delay\"] : 1, [\"totalTime\"] : spinConfig.delay});\r\n            this.actionQueue.push({[\"endSpeed\"] : spinConfig.upBounceMaxSpeed, [\"totalTime\"] : tAcc, [\"accelerationTime\"] : tAcc});\r\n            this.actionQueue.push({[\"endSpeed\"] : spinConfig.upBounceMaxSpeed, [\"totalTime\"] : tMax});\r\n            this.actionQueue.push({[\"endSpeed\"] : 0, [\"totalTime\"] : tAcc, [\"accelerationTime\"] : tAcc});\r\n        }\r\n        this.actionQueue.push({[\"endSpeed\"] : spinConfig.maxSpeed, [\"totalTime\"] : spinConfig.speedUpTime, [\"accelerationTime\"] : spinConfig.speedUpTime});\r\n        this.actionQueue.push({[\"endSpeed\"] : spinConfig.maxSpeed, [\"totalTime\"] : 10000});\r\n    },\r\n\r\n    stop(stopConfig, colItemList, upitem, downlist){\r\n        if (this.curStatus != ReelStatus.running) {\r\n            return null\r\n        }\r\n        this.parseStop(stopConfig, colItemList, upitem, downlist)\r\n    },\r\n\r\n    parseStop(stopConfig, colItemList, upitem, downList){\r\n        if (stopConfig.ClearAction) {\r\n            this.clearActions()\r\n        }\r\n        this.stopConfig = stopConfig\r\n        this.itemList = colItemList\r\n        this.upList = upitem || []\r\n        this.downList = downList || []\r\n        let actions = stopConfig.actions || []\r\n        for (let [i,action] of Object.entries(actions)){\r\n            if (action[\"endSpeed\"]) {\r\n                this.actionQueue.push({[\"endSpeed\"] : action[\"endSpeed\"], [\"totalTime\"] : action[\"totalTime\"], [\"accelerationTime\"] : action[\"accelerationTime\"], [\"beginFun\"] : action[\"beginFun\"], [\"endFun\"] : action[\"endFun\"]});\r\n            }\r\n        }\r\n        this.onDelayStopSchedule = true\r\n        this.delayTotalTime = 0\r\n    },\r\n\r\n    onReelStartStop(){\r\n        if (this.curStatus != ReelStatus.stop && this.curStatus != ReelStatus.downbounce) {\r\n            this.clearActions()\r\n            this.curStatus = ReelStatus.stopping\r\n            this.isReelStoping = true\r\n            if (this.stopConfig.stopType===1) {\r\n                this.normalStop()\r\n                this.parseNormalBounceDown()\r\n            }\r\n            else if (this.stopConfig.stopType===0) {\r\n                this.paseEaseStop()\r\n                this.parseNormalBounceDown()\r\n            }\r\n            else if (this.stopConfig.stopType===2) {\r\n                this.pasePhyicalStop()\r\n                this.parsePhysicalBounceDown()\r\n            }\r\n            else if (this.stopConfig.stopType===3) {\r\n                this.normalStop()\r\n                this.parseFastBounceDown()\r\n            }\r\n        }\r\n    },\r\n\r\n    clearActions(){\r\n        this.actionQueue = []\r\n        this.curAction = null\r\n        this.onDelayStopSchedule = false\r\n    },\r\n\r\n    // 匀速停止\r\n    normalStop(){\r\n        let extraCount = this.ExtraSymbolCount\r\n        //todo\r\n        if (this.gameCtrl.isTurbo) then\r\n            extraCount = extraCount / 2\r\n        end\r\n        let aimPosition = this.getNextCell().y\r\n        let distance = -(aimPosition + this.stopConfig.downBounce + (extraCount + 0.5) * this.cellHeight - (this.basePos.y + this.adjustPos.y))\r\n        let endSpeed = distance / this.stopConfig.speedDownTime\r\n        let onReelReachBottom = function(){\r\n            this.gameCtrl.onReelFallBottom(this.colid)\r\n            this.curStatus = ReelStatus.downbounce\r\n            this.curSpeed = 0\r\n        }.bind(this)\r\n        this.actionQueue.push({[\"endSpeed\"] : endSpeed, [\"totalTime\"] : this.stopConfig.speedDownTime, [\"endFun\"] : onReelReachBottom})\r\n    },\r\n\r\n    // 减速停止\r\n    paseEaseStop(){\r\n        let extraCount = this.ExtraSymbolCount\r\n        //todo\r\n        if (this.gameCtrl.isTurbo) {\r\n            extraCount = extraCount / 2\r\n        }\r\n        let bounceDis = extraCount * this.cellHeight\r\n        let distance = (this.getNextCell().y + this.stopConfig.downBounce + 0.5 * this.cellHeight - (this.basePos.y + this.adjustPos.y))\r\n        let t1 = -bounceDis / this.spinConfig.maxSpeed\r\n        let v2 = -distance / (this.stopConfig.speedDownTime - t1)\r\n        let onReelReachBottom = function(){\r\n            this.curSpeed = 0\r\n            this.curStatus = ReelStatus.downbounce\r\n            this.gameCtrl.onReelFallBottom(this.colid)\r\n        }.bind(this)\r\n        this.actionQueue.push({[\"endSpeed\"] : this.spinConfig.maxSpeed, [\"totalTime\"] : t1});\r\n        this.actionQueue.push({[\"endSpeed\"] : v2, [\"totalTime\"] : this.stopConfig.speedDownTime - t1, [\"endFun\"] : onReelReachBottom});\r\n    },\r\n\r\n    // 物理减速\r\n    pasePhyicalStop(){\r\n        let extraCount = this.ExtraSymbolCount\r\n        //todo\r\n        if (this.gameCtrl.isTurbo) {\r\n            extraCount = extraCount / 2\r\n        }\r\n        let bounceDis = extraCount * this.cellHeight\r\n        let distance = (this.getNextCell().y + 0.5 * this.cellHeight - (this.basePos.y + this.adjustPos.y))\r\n        let speed = -(bounceDis + distance) / this.stopConfig.speedDownTime\r\n        let onReelReachBottom = function(){\r\n            this.curSpeed = 0\r\n            this.curStatus = ReelStatus.downbounce\r\n            this.gameCtrl.onReelFallBottom(this.colid)\r\n        }.bind(this)\r\n        this.actionQueue.push({[\"endSpeed\"] : speed, [\"totalTime\"] : this.stopConfig.speedDownTime, [\"endFun\"] : onReelReachBottom});  \r\n    },\r\n\r\n    // 反弹动画\r\n    parseNormalBounceDown(){\r\n    \r\n        let onReelStoped = function(){\r\n            this.curStatus = ReelStatus.stop\r\n            this.fixResult()\r\n            this.isReelStoping = false\r\n            this.gameCtrl.onReelStop(this.colid)\r\n            this.spinLayer.checkDealWithReelStop()\r\n        }.bind(this)\r\n        this.curSpeed = 0\r\n    \r\n        let speed = this.stopConfig.downBounce / this.stopConfig.downBounceTime\r\n        this.actionQueue.push({[\"endSpeed\"] : speed, [\"totalTime\"] : this.stopConfig.downBounceTime});\r\n        this.actionQueue.push({[\"delay\"] : 1, [\"totalTime\"] : 0, [\"beginFun\"] : onReelStoped});\r\n    },\r\n\r\n    // 快速反弹\r\n    parseFastBounceDown(){\r\n        let onReelStoped = function(){\r\n            this.curStatus = ReelStatus.stop\r\n            this.fixResult()\r\n            this.isReelStoping = false\r\n            this.gameCtrl.onReelStop(this.colid)\r\n            this.spinLayer.checkDealWithReelStop()\r\n        }.bind(this)\r\n        this.curSpeed = 0\r\n        let speed = this.stopConfig.downBounce / this.stopConfig.downBounceTime\r\n        this.actionQueue.push({[\"endSpeed\"] : speed, [\"totalTime\"] : this.stopConfig.downBounceTime});\r\n        this.actionQueue.push({[\"delay\"] : 1, [\"totalTime\"] : 0, [\"beginFun\"] : onReelStoped});\r\n    },\r\n\r\n    // 物理反弹\r\n    parsePhysicalBounceDown(){\r\n        let onReelStoped = function(){\r\n            this.curStatus = ReelStatus.stop\r\n            this.fixResult()\r\n            this.isReelStoping = false\r\n            this.gameCtrl.onReelStop(this.colid)\r\n            this.spinLayer.checkDealWithReelStop()\r\n        }.bind(this)\r\n        this.curSpeed = 0\r\n\r\n        this.actionQueue.push({[\"endSpeed\"] : this.stopConfig.shakeDistance, [\"totalTime\"] : this.stopConfig.downBounceTime})\r\n        this.actionQueue.push({[\"endSpeed\"] : -this.stopConfig.shakeDistance, [\"totalTime\"] : this.stopConfig.downBounceTime})\r\n        this.actionQueue.push({[\"endSpeed\"] : this.stopConfig.shakeDistance, [\"totalTime\"] : this.stopConfig.downBounceTime})\r\n        this.actionQueue.push({[\"endSpeed\"] : -this.stopConfig.shakeDistance, [\"totalTime\"] : this.stopConfig.downBounceTime})\r\n        this.actionQueue.push({[\"endSpeed\"] : this.stopConfig.shakeDistance, [\"totalTime\"] : this.stopConfig.downBounceTime})\r\n        this.actionQueue.push({[\"endSpeed\"] : -this.stopConfig.shakeDistance, [\"totalTime\"] : this.stopConfig.downBounceTime})\r\n        this.actionQueue.push({[\"delay\"] : 1, [\"totalTime\"] : 0, [\"beginFun\"] : onReelStoped})\r\n    },   \r\n\r\n    // 修正坐标\r\n    fixResult(){\r\n        //todo\r\n        let _currentCell = this.getCurrentCell()\r\n        while (_currentCell.y < (this.basePos.y + this.adjustPos.y) + (this.row - 1) * this.cellHeight) {\r\n            this.currentIndex = this.increaseIndex(this.currentIndex)\r\n            _currentCell = this.getCurrentCell()\r\n        }\r\n        while (_currentCell.y > (this.basePos.y + this.adjustPos.y) + this.row * this.cellHeight) {\r\n            this.currentIndex = this.decreaseIndex(this.currentIndex)\r\n            _currentCell = this.getCurrentCell()\r\n        }\r\n    }, \r\n\r\n    // 快速停止\r\n    fastStop(){\r\n        if (this.curStatus===ReelStatus.stop || this.curStatus===ReelStatus.downbounce || ! this.itemList) {\r\n            return null\r\n        }\r\n        this.curStatus = ReelStatus.downbounce\r\n        this.clearActions()\r\n        this.fastResetResult()\r\n        if (this.stopConfig.stopType===1) {\r\n            this.parseNormalBounceDown()\r\n        }\r\n        else if (this.stopConfig.stopType===0) {\r\n            this.parseNormalBounceDown()\r\n        }\r\n        else if (this.stopConfig.stopType===2) {\r\n            this.parsePhysicalBounceDown()\r\n        }\r\n        else if (this.stopConfig.stopType===3) {\r\n            this.parseFastBounceDown()\r\n        }\r\n        \r\n        //todo\r\n        this.gameCtrl.onReelFastFallBottom(this.colid)\r\n    },  \r\n    \r\n    fastResetResult(){\r\n        this.curSpeed = 0\r\n\r\n        let resultIndex = 1\r\n        let moveY = this.getCurrentCell().y + this.cellHeight / 2 - (this.basePos.y + this.adjustPos.y) + this.stopConfig.downBounce\r\n\r\n        if (this.downList.length > 0) {\r\n            //todo\r\n            this.gameCtrl.updateCellSprite(this.cells[this.currentIndex], this.colid, true, this.downList[1], true)\r\n        }\r\n\r\n        let tmp_i = this.currentIndex\r\n        let tmp_length = this.currentIndex + this.row\r\n\r\n        for (let i = tmp_i; i < tmp_length;i++) {\r\n            this.currentIndex = this.increaseIndex(this.currentIndex)\r\n            //todo\r\n            this.gameCtrl.updateCellSprite(this.getCurrentCell(), this.colid, true, this.itemList[this.row - resultIndex], true)\r\n            resultIndex = resultIndex + 1\r\n        }\r\n\r\n        let index = (this.currentIndex + 1) % (this.number)\r\n\r\n        if (this.upList.length > 0) {\r\n            //todo\r\n            this.gameCtrl.updateCellSprite(this.cells[index], this.colid, true, this.upList[1], true)\r\n        }\r\n        for (let [k,theCell] of Object.entries(this.cells)){\r\n            theCell.y = theCell.y - moveY\r\n        }\r\n    },    \r\n\r\n\r\n});\r\n\r\nmodule.exports = GameSpinReel;","\r\nmodule.exports = puremvc.define(\r\n\t{\r\n\t\tparent: puremvc.SimpleCommand\r\n\t},\r\n\t{\r\n\t\texecute: function (tableCmd) {\r\n\t\t\tlet GameTableProxy = this.facade.retrieveProxy('GameTableProxy');\r\n            //FishConstants.GAME_TABLE_COMMAND\r\n            switch(tableCmd) {\r\n                case \"sendStandUpData\":\r\n                    GameTableProxy.sendStandUpData(1);\r\n                \tbreak;\r\n                case \"sendUserReady\":\r\n                    GameTableProxy.sendUserReady();\r\n                \tbreak;\r\n                default:\r\n                    cc.log('未知命令');\r\n           } \r\n\r\n\r\n\r\n\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tNAME: 'GameTableCommand'\r\n\t});","\r\nmodule.exports = puremvc.define(\r\n    {\r\n        parent : puremvc.Proxy,\r\n        constructor : function() {\r\n            puremvc.Proxy.call(this, this.constructor.NAME);\r\n        }\r\n    },\r\n    {\r\n        //房间信息\r\n        _wTableCount: 0,\r\n        _wChairCount: 0,\r\n        _wServerType: 0,\r\n        _dwServerRule: 0,\r\n\r\n        //房间内用户列表\r\n        _roomUserList: new Map(),\r\n\r\n        //桌子上用户列表\r\n        _tableUserList: new Map(),\r\n    \r\n        //桌子信息\r\n        _tableStatus: [],\r\n    \r\n        //自己所在的桌子id\r\n        _wTableID: 65535,\r\n    \r\n    \r\n        //自己所在的椅子id\r\n        _wChairID: 65535,\r\n    \r\n        //游戏状态\r\n        _cbGameStatus: 0,\r\n    \r\n        //旁观标志\r\n        _cbAllowLookon: 0,\r\n    \r\n        _bChangeDesk: false,\r\n        _bSendOption: false,\r\n        \r\n        onRegister : function() {\r\n    \r\n        },\r\n\r\n        /**设置桌子总数*/\r\n        setTableCount:function(TableCount){\r\n            this._wTableCount = TableCount\r\n        },\r\n\r\n        /**获取桌子总数*/\r\n        getTableCount:function(){\r\n            return this._wTableCount\r\n        },\r\n\r\n        /**设置椅子总数*/\r\n        setChairCount:function(ChairCount){\r\n            this._wChairCount = ChairCount\r\n        },\r\n\r\n        /**获取椅子总数*/\r\n        getChairCount:function(){\r\n            return this._wChairCount\r\n        },\r\n\r\n        setServerType:function(ServerType){\r\n            this._wServerType = ServerType\r\n        },\r\n\r\n        getServerType:function(){\r\n            return this._wServerType\r\n        },\r\n\r\n        setServerRule:function(ServerRule){\r\n            this._dwServerRule = ServerRule\r\n        },\r\n\r\n        getServerRule:function(){\r\n            return this._dwServerRule\r\n        },\r\n\r\n        /**设置自己桌子号*/\r\n        setwTableID:function(TableID){\r\n            this._wTableID = TableID\r\n        },\r\n\r\n        /**获取自己桌子号*/\r\n        getwTableID:function(){\r\n            return this._wTableID\r\n        },\r\n\r\n        /**设置自己椅子号*/\r\n        setwChairID:function(ChairID){\r\n            this._wChairID = ChairID\r\n        },\r\n       \r\n        /**获取自己椅子号*/\r\n        getwChairID:function(){\r\n            return this._wChairID\r\n        },\r\n\r\n        /**设置游戏状态*/\r\n        setGameStatus:function(GameStatus){\r\n            this._cbGameStatus = GameStatus\r\n        },\r\n       \r\n        /**获取游戏状态*/\r\n        getGameStatus:function(){\r\n            return this._cbGameStatus\r\n        },\r\n\r\n        /**设置旁观标志*/\r\n        setAllowLookon:function(AllowLookon){\r\n            this._cbAllowLookon = AllowLookon\r\n        },\r\n       \r\n        /**获取旁观标志*/\r\n        getAllowLookon:function(){\r\n            return this._cbAllowLookon\r\n        },\r\n\r\n\r\n        /**通过桌子号设置桌子信息*/\r\n        setTableStatusById:function(tableId,tableStatus){\r\n            this._tableStatus[tableId] = tableStatus\r\n        },\r\n\r\n        /**通过桌子号获取桌子信息*/\r\n        getTableStatusById:function(tableId){\r\n            return this._tableStatus[tableId]\r\n        },\r\n\r\n        /**通过ItemUserID设置用户列表*/\r\n        setRoomUserList:function(ItemUserID,userItem){\r\n            this._roomUserList.set(ItemUserID, userItem);\r\n        },\r\n\r\n        /**通过ItemUserID获取用户*/\r\n        getRoomUserList:function(ItemUserID){\r\n            return this._roomUserList.get(ItemUserID);\r\n        },\r\n\r\n        /**移除用户*/\r\n        onRemoveUser:function(ItemUserID){\r\n            this._roomUserList.delete(ItemUserID);\r\n        },\r\n\r\n        /**更新桌椅用户*/\r\n        onUpDataTableUser:function(tableid, chairid, useritem){\r\n            let _tableid = tableid + 1;\r\n            let _chairid = chairid + 1 ;\r\n            if(!this._tableUserList.get(_tableid)){\r\n                this._tableUserList.set(_tableid,new Map());\r\n            };\r\n\r\n            if (useritem) {\r\n                this._tableUserList.get(_tableid).set(_chairid,useritem.get(\"dwUserID\"));\r\n            }else{\r\n                this._tableUserList.get(_tableid).set(_chairid,null);\r\n            };\r\n\r\n        }, \r\n\r\n        \r\n        setChangeDesk:function(isChangeDesk){\r\n            this._bChangeDesk = isChangeDesk;\r\n        },\r\n\r\n        \r\n        getChangeDesk:function(){\r\n            return this._bChangeDesk;\r\n        },\r\n\r\n        setSendOption:function(isSendOption){\r\n            this._bSendOption = isSendOption;\r\n        },\r\n\r\n        \r\n        getSendOption:function(){\r\n            return this._bSendOption;\r\n        },\r\n\r\n        \r\n    },\r\n    {\r\n        NAME : 'GameTableDataManager'\r\n    });","//const { map } = require(\"../../../config/cannonLevelConf\");\r\n\r\nlet datatypes = {};\r\n\r\nconstVal.CMD_FRIST_MDM_GAME = 1000;\r\n\r\nconstVal.LEN_TOKEN = 33\r\nconstVal.LEN_MACHINE_ID = 33\r\n\r\n////////////////////////////////////登录信息///////////////////////////\r\n/**登录信息*/\r\nconstVal.MDM_GR_LOGON = constVal.CMD_FRIST_MDM_GAME + 1; \r\n/**手机登录*/\r\nconstVal.SUB_GR_LOGON_H5_MOBILE = 2; \r\n/**登录成功*/\r\nconstVal.SUB_GR_LOGON_SUCCESS = 100; \r\n/**登录失败*/\r\nconstVal.SUB_GR_LOGON_ERROR = 101; \r\n/**登录完成*/\r\nconstVal.SUB_GR_LOGON_FINISH = 102; \r\n/**升级提示*/\r\nconstVal.SUB_GR_UPDATE_NOTIFY = 200;\r\n\r\n/**手机登录*/\r\ndatatypes.CMD_GR_LogonMobile = {\r\n\t\"mainCmdID\": constVal.MDM_GR_LOGON,\r\n\t\"subCmdID\": constVal.SUB_GR_LOGON_H5_MOBILE,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"wGameID\",\r\n\t\t\t\"type\": \"UINT16\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"dwProcessVersion\",\r\n\t\t\t\"type\": \"UINT32\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"cbDeviceType\",\r\n\t\t\t\"type\": \"UINT8\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"dwGroupID\",\r\n\t\t\t\"type\": \"UINT32\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"dwServerID\",\r\n\t\t\t\"type\": \"UINT32\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"dwUserID\",\r\n\t\t\t\"type\": \"UINT32\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"szToken\",\r\n\t\t\t\"type\": \"STRING\",\r\n\t\t\t\"len\": constVal.LEN_TOKEN,\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"szMachineID\",\r\n\t\t\t\"type\": \"STRING\",\r\n\t\t\t\"len\": constVal.LEN_MACHINE_ID,\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"szAccount\",\t//账号uid\r\n\t\t\t\"type\": \"STRING\",\r\n\t\t\t\"len\": 32,\r\n\t\t}\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 2 + 4 + 1 + 4 + 4 + 4 + (constVal.LEN_TOKEN + constVal.LEN_MACHINE_ID) * 2 + 32 * 2;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint16(args[0]);\r\n        bundle.writeUint32(args[1]);\r\n        bundle.writeUint8(args[2]);\r\n        bundle.writeUint32(args[3]);\r\n        bundle.writeUint32(args[4]);\r\n        bundle.writeUint32(args[5]);\r\n\r\n\t\tbundle.writeString(args[6], constVal.LEN_TOKEN * 2);\r\n        bundle.writeString(args[7], constVal.LEN_MACHINE_ID * 2);\r\n\t\tbundle.writeString(args[8], 32 * 2);\r\n\t}\r\n};\r\n\r\n/**登录成功*/\r\ndatatypes.grLogonSuccess = {\r\n\t'mainCmdID': constVal.MDM_GR_LOGON,\r\n\t'subCmdID': constVal.SUB_GR_LOGON_SUCCESS,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'dwUserRight',\r\n\t\t\t'type': 'UINT32'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'dwMasterRight',\r\n\t\t\t'type': 'UINT32'\r\n\t\t},\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 8;\r\n\t},\r\n\tcreateFromStream: function (stream, args) {\r\n\t\tlet dwUserRight = stream.readUint32();  //用户权限\r\n        let dwMasterRight = stream.readUint32();//管理权限\r\n\t\targs.push(dwUserRight,dwMasterRight);\r\n\t}\r\n};\r\n\r\n/**登录失败*/\r\ndatatypes.CMD_GR_LogonError = {\r\n\t'mainCmdID': constVal.MDM_GR_LOGON,\r\n\t'subCmdID': constVal.SUB_GR_LOGON_ERROR,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'lErrorCode',\r\n            'type': 'UINT32'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wKindID',\r\n            'type': 'UINT16'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'wServerID',\r\n            'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"szDescribeString\",\r\n\t\t\t\"type\": \"STRING\",\r\n\t\t\t\"len\": 128,\r\n\t\t},\r\n\t],\r\n\r\n    size: function () {\r\n\t\treturn 4 + 2 + 2 + 128 * 2;\r\n\t},\r\n\tcreateFromStream: function (stream, args) {\r\n\t\tlet lErrorCode = stream.readUint32();    //错误代码\r\n        let wKindID = stream.readUint16();       //游戏id\r\n        let wServerID = stream.readUint16();     //房间id\r\n\t\tlet szDescribeString = stream.readStringUnicode(128 * 2);//描述信息\r\n\t\targs.push(lErrorCode, wKindID, wServerID, szDescribeString);\r\n\t}\r\n};\r\n\r\n/**登录完成*/\r\ndatatypes.CMD_GR_LogonFinish = {\r\n\t'mainCmdID': constVal.MDM_GR_LOGON,\r\n\t'subCmdID': constVal.SUB_GR_LOGON_FINISH,\r\n\t'argTypes': [\r\n\r\n\t],\r\n\r\n    size: function () {\r\n\t\t\r\n\t},\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n\t}\r\n};\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////配置信息///////////////////////////\r\n\r\n/**配置信息*/\r\nconstVal.MDM_GR_CONFIG = constVal.CMD_FRIST_MDM_GAME + 2;\r\n/**列表配置*/\r\nconstVal.SUB_GR_CONFIG_COLUMN  = 100      \r\n/**房间配置*/\r\nconstVal.SUB_GR_CONFIG_SERVER  = 101 \r\n/**道具配置*/\r\nconstVal.SUB_GR_CONFIG_PROPERTY = 102     \r\n/**配置完成*/\r\nconstVal.SUB_GR_CONFIG_FINISH  = 103       \r\n\r\n/**房间配置*/\r\ndatatypes.CMD_GR_ConfigServer = {\r\n\t'mainCmdID': constVal.MDM_GR_CONFIG,\r\n\t'subCmdID': constVal.SUB_GR_CONFIG_SERVER,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'wTableCount',\r\n            'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wChairCount',\r\n            'type': 'UINT16'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'wServerType',\r\n            'type': 'UINT16'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'dwServerRule',\r\n            'type': 'UINT32'\r\n\t\t},\r\n\t],\r\n\r\n    size: function () {\r\n\t\treturn 2 + 2 + 2 + 4;\r\n\t},\r\n\tcreateFromStream: function (stream, args) {\r\n        //房间属性\r\n\t\tlet wTableCount = stream.readUint16();    //桌子数目\r\n        let wChairCount = stream.readUint16();    //椅子数目\r\n        //房间配置\r\n        let wServerType = stream.readUint16();     //房间类型\r\n\t\tlet dwServerRule = stream.readUint32();    //房间规则\r\n\t\targs.push(wTableCount, wChairCount, wServerType, dwServerRule);\r\n\t}\r\n};\r\n\r\n/**配置完成*/\r\ndatatypes.CMD_GR_ConfigFinish = {\r\n\t'mainCmdID': constVal.MDM_GR_CONFIG,\r\n\t'subCmdID': constVal.SUB_GR_CONFIG_FINISH,\r\n\t'argTypes': [\r\n\r\n\t],\r\n\r\n    size: function () {\r\n\t\t\r\n\t},\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n\t}\r\n};\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////用户命令///////////////////////////\r\n\r\n/**用户命令*/\r\nconstVal.MDM_GR_USER = constVal.CMD_FRIST_MDM_GAME + 3; \r\n\r\n//用户动作\r\nconstVal.SUB_GR_USER_RULE                       = 1         //用户规则\r\nconstVal.SUB_GR_USER_SITDOWN                    = 3         //坐下请求\r\nconstVal.SUB_GR_USER_STANDUP                    = 4         //起立请求\r\nconstVal.SUB_GR_USER_LEAVE                      = 5         //离开\r\nconstVal.SUB_GR_USER_SYCNUSERSCORE              = 7\r\nconstVal.SUB_GR_USER_SYCNUSERMISSION            = 8\r\n\r\nconstVal.SUB_GR_USER_CHAIR_REQ                  = 10        //请求更换位置\r\nconstVal.SUB_GR_USER_CHAIR_INFO_REQ             = 11        //请求椅子用户信息\r\nconstVal.SUB_GR_USER_WAIT_DISTRIBUTE            = 12        //等待分配\r\nconstVal.SUB_GR_USER_CHANGE_CHAIR               = 14        //换位置\r\n\r\n//用户状态\r\nconstVal.SUB_GR_USER_ENTER                      = 100       //用户进入\r\nconstVal.SUB_GR_USER_SCORE                      = 101       //用户分数\r\nconstVal.SUB_GR_USER_STATUS                     = 102       //用户状态\r\nconstVal.SUB_GR_REQUEST_FAILURE                 = 103       //请求失败\r\nconstVal.SUB_GR_USER_GAME_DATA                  = 104       //用户游戏数据\r\n\r\nconstVal.SUB_GR_USER_EX_REWARD                  = 105       //游戏经验等级\r\nconstVal.SUB_GR_USER_EX_PROGRESS                = 106       //经验等级进度条\r\n\r\nconstVal.SUB_GR_PUSHUSERPIG                     = 107       //存钱罐  \r\n\r\n//附件包\r\ndatatypes.DTP_GR_NICK_NAME                       = 10        //用户昵称\r\ndatatypes.DTP_GR_UNDER_WRITE                     = 12        //个性签名\r\n\r\n/**坐下请求*/\r\ndatatypes.CMD_GR_UserSitDown = {\r\n\t\"mainCmdID\": constVal.MDM_GR_USER,\r\n\t\"subCmdID\": constVal.SUB_GR_USER_SITDOWN,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"wTableID\",\r\n\t\t\t\"type\": \"UINT16\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"wChairID\",\r\n\t\t\t\"type\": \"UINT16\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"szPassword\",\r\n\t\t\t\"type\": \"STRING\",\r\n\t\t\t\"len\": 33,\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"dwRoomPwd\",\r\n\t\t\t\"type\": \"UINT32\"\r\n\t\t},\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 2 + 2 + 4 + 33 * 2;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint16(args[0]);        //桌子位置\r\n        bundle.writeUint16(args[1]);        //椅子位置\r\n        bundle.writeString(args[2], 33 * 2);//桌子密码\r\n        bundle.writeUint32(args[3]);        //房间密码 //约战房\r\n\t}\r\n};\r\n\r\n/**起立请求*/\r\ndatatypes.CMD_GR_UserStandUp = {\r\n\t\"mainCmdID\": constVal.MDM_GR_USER,\r\n\t\"subCmdID\": constVal.SUB_GR_USER_STANDUP,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"wTableID\",\r\n\t\t\t\"type\": \"UINT16\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"wChairID\",\r\n\t\t\t\"type\": \"UINT16\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"cbForceLeave\",\r\n\t\t\t\"type\": \"UINT8\"\r\n\t\t},\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 2 + 2 + 1;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint16(args[0]);        //桌子位置\r\n        bundle.writeUint16(args[1]);        //椅子位置\r\n        bundle.writeUint8(args[2]);         //强行离开\r\n\t}\r\n};\r\n\r\n/**用户离开*/\r\ndatatypes.CMD_GR_UserReqLeave = {\r\n\t\"mainCmdID\": constVal.MDM_GR_USER,\r\n\t\"subCmdID\": constVal.SUB_GR_USER_LEAVE,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"dwUserID\",\r\n\t\t\t\"type\": \"UINT32\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"szToken\",\r\n\t\t\t\"type\": \"STRING\",\r\n\t\t\t\"len\": constVal.LEN_TOKEN,\r\n\t\t},\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 4 + constVal.LEN_TOKEN * 2;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint32(args[0]);                        //用户标识\r\n        bundle.writeString(args[1], constVal.LEN_TOKEN * 2);//token\r\n\t}\r\n};\r\n\r\n/**查询用户信息*/\r\ndatatypes.CMD_GR_ChairUserInfo = {\r\n\t\"mainCmdID\": constVal.MDM_GR_USER,\r\n\t\"subCmdID\": constVal.SUB_GR_USER_CHAIR_INFO_REQ,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"wTableID\",\r\n\t\t\t\"type\": \"UINT16\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"wChairID\",\r\n\t\t\t\"type\": \"UINT16\"\r\n\t\t},\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 4 ;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint32(args[0]);                        //桌子位置\r\n        bundle.writeUint32(args[1]);                        //椅子位置\r\n\t}\r\n};\r\n\r\n/**用户信息*/\r\ndatatypes.SUB_GR_UserEnter = {\r\n\t'mainCmdID': constVal.MDM_GR_USER,\r\n\t'subCmdID': constVal.SUB_GR_USER_ENTER,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'dwGameID',\r\n            'type': 'UINT32'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwUserID',\r\n            'type': 'UINT32'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'wFaceID',\r\n            'type': 'UINT16'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'cbGender',\r\n            'type': 'UINT8'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'wTableID',\r\n            'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'wChairID',\r\n            'type': 'UINT16'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'cbUserStatus',\r\n            'type': 'UINT8'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'lScore',\r\n            'type': 'UINT64'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'lDiamond',\r\n            'type': 'UINT64'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'lExperience',\r\n            'type': 'UINT64'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'lLpValues',\r\n            'type': 'UINT64'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'lTicket',\r\n            'type': 'UINT64'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'dwVipLv',\r\n            'type': 'UINT32'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwVipPoint',\r\n            'type': 'UINT32'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'dwClubPoint',\r\n            'type': 'UINT32'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'dwCurExLevel',\r\n            'type': 'UINT32'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'dwNextExPoint',\r\n            'type': 'UINT32'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'dwIpAddress',\r\n            'type': 'UINT32'\r\n\t\t},\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n        let userItem = new Map();\r\n\r\n        //用户属性\r\n        userItem.set(\"dwGameID\",stream.readUint32());    //游戏 I D\r\n        userItem.set(\"dwUserID\",stream.readUint32());    //用户 I D\r\n        //头像信息\r\n        userItem.set(\"wFaceID\",stream.readUint16());     //头像索引\r\n        //用户属性\r\n        userItem.set(\"cbGender\",stream.readUint8());    //用户性别\r\n        //用户状态\r\n        userItem.set(\"wTableID\",stream.readUint16());    //桌子索引\r\n        userItem.set(\"wChairID\",stream.readUint16());    //椅子索引\r\n        userItem.set(\"cbUserStatus\",stream.readUint8());//用户状态\r\n        //积分信息\r\n        userItem.set(\"lScore\",stream.readInt64().lo);      //用户分数\r\n        userItem.set(\"lDiamond\",stream.readInt64().lo);    //用户钻石\r\n        userItem.set(\"lExperience\",stream.readInt64().lo); //用户经验\r\n        userItem.set(\"lLpValues\",stream.readInt64().lo);   //\r\n        userItem.set(\"lTicket\",stream.readInt64().lo);     //\r\n        //vip点\r\n        userItem.set(\"dwVipLv\",stream.readUint32());     //\r\n        userItem.set(\"dwVipPoint\",stream.readUint32());  //\r\n        userItem.set(\"dwClubPoint\",stream.readUint32()); //\r\n        //游戏信息\r\n        userItem.set(\"dwCurExLevel\",stream.readUint32());//用户经验\r\n        userItem.set(\"dwNextExPoint\",stream.readUint32());//下一个等级经验值\r\n\r\n        userItem.set(\"dwIpAddress\",stream.readUint32()); //ip地址\r\n\r\n\t\targs.push(userItem);\r\n\t}\r\n};\r\n\r\n/**用户积分*/\r\ndatatypes.SUB_GR_UserScore = {\r\n\t'mainCmdID': constVal.MDM_GR_USER,\r\n\t'subCmdID': constVal.SUB_GR_USER_SCORE,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'dwUserID',\r\n            'type': 'UINT32'\r\n\t\t},\t\t\r\n        {\r\n\t\t\t'name': 'lScore',\r\n            'type': 'UINT64'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'lDiamond',\r\n            'type': 'UINT64'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'lExperience',\r\n            'type': 'UINT64'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'lLpValues',\r\n            'type': 'UINT64'\r\n\t\t},       \r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n\t\tlet data = {}\r\n\r\n        //积分信息\r\n        data.dwUserID = stream.readUint32();    //用户 I D\r\n        \r\n        //积分信息\r\n        data.lScore = stream.readInt64().lo;      //用户分数\r\n        data.lDiamond = stream.readInt64().lo;    //用户钻石\r\n        data.lExperience = stream.readInt64().lo; //用户经验\r\n        data.lLpValues = stream.readInt64().lo;   //\r\n\r\n\t\targs.push(data);\r\n\t}\r\n};\r\n\r\n/**用户状态*/\r\ndatatypes.SUB_GR_UserStatus = {\r\n\t'mainCmdID': constVal.MDM_GR_USER,\r\n\t'subCmdID': constVal.SUB_GR_USER_STATUS,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'dwUserID',\r\n            'type': 'UINT32'\r\n\t\t},\t\t\r\n        {\r\n\t\t\t'name': 'wTableID',\r\n            'type': 'UINT16'\r\n\t\t},\r\n        {\r\n\t\t\t'name': 'wChairID',\r\n            'type': 'UINT16'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'cbUserStatus',\r\n            'type': 'UINT8'\r\n\t\t},     \r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n        let newstatus = new Map();\r\n\r\n        //积分信息\r\n        newstatus.set(\"dwUserID\",stream.readUint32());//用户 I D\r\n        newstatus.set(\"wTableID\",stream.readUint16());//桌子索引\r\n        newstatus.set(\"wChairID\",stream.readUint16());//椅子索引\r\n        newstatus.set(\"cbUserStatus\",stream.readUint8());//用户状态\r\n\r\n\t\targs.push(newstatus);\r\n\t}\r\n};\r\n\r\n/**请求失败*/\r\ndatatypes.CMD_GR_RequestFailure = {\r\n\t'mainCmdID': constVal.MDM_GR_USER,\r\n\t'subCmdID': constVal.SUB_GR_REQUEST_FAILURE,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'lErrorCode',\r\n            'type': 'UINT32'\r\n\t\t},\t\t\r\n        {\r\n\t\t\t\"name\": \"szDescribeString\",\r\n\t\t\t\"type\": \"STRING\",\r\n\t\t\t\"len\": 128,\r\n\t\t},\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n        let lErrorCode = stream.readUint32();     //错误代码\r\n\t\t// stream.buffer.byteLength - stream.buffer.rpos\r\n        //let szDescribeString = stream.readStringUnicode(128 * 2);//描述信息\r\n\t\tlet szDescribeString = stream.readStringUnicode(stream.buffer.byteLength - stream.buffer.rpos);//描述信息\r\n\r\n\t\targs.push(lErrorCode,szDescribeString);\r\n\t}\r\n};\r\n\r\n/**用户经验值奖励更新*/\r\ndatatypes.CMD_GR_MobileUserExperienceReward = {\r\n\t'mainCmdID': constVal.MDM_GR_USER,\r\n\t'subCmdID': constVal.SUB_GR_USER_EX_REWARD,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'dwUserID',\r\n            'type': 'UINT32'\r\n\t\t},\t\r\n        {\r\n\t\t\t'name': 'dwRewardExLevel',\r\n            'type': 'UINT32'\r\n\t\t},\t\r\n        {\r\n\t\t\t'name': 'CurLvScore',\r\n            'type': 'UINT64'\r\n\t\t},\t\t\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n        let dwUserID = stream.readUint32();     //\r\n        let dwRewardExLevel = stream.readUint32();     //\r\n        let CurLvScore = stream.readUint64();     //\r\n\r\n\t\targs.push(dwUserID,dwRewardExLevel,CurLvScore);\r\n\t}\r\n};\r\n\r\n/**用户经验等级进度条*/\r\ndatatypes.CMD_GR_MobileUserExperienceProgress = {\r\n\t'mainCmdID': constVal.MDM_GR_USER,\r\n\t'subCmdID': constVal.SUB_GR_USER_EX_PROGRESS,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'dwUserID',\r\n            'type': 'UINT32'\r\n\t\t},\t\r\n        {\r\n\t\t\t'name': 'dwCurExLevel',\r\n            'type': 'UINT32'\r\n\t\t},\t\r\n        {\r\n\t\t\t'name': 'dwCurExPoint',\r\n            'type': 'UINT64'\r\n\t\t},\t\r\n        {\r\n\t\t\t'name': 'dwNextExPoint',\r\n            'type': 'UINT64'\r\n\t\t},\t\r\n        {\r\n\t\t\t'name': 'NextLvScore',\r\n            'type': 'UINT64'\r\n\t\t},\t\t\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n        let dwUserID = stream.readUint32();     //\r\n        let dwCurExLevel = stream.readUint32();     //\r\n        let dwCurExPoint = stream.readUint64();     //\r\n        let dwNextExPoint = stream.readUint64();     //\r\n        let NextLvScore = stream.readUint64();     //\r\n\r\n\t\targs.push(dwUserID,dwCurExLevel,dwCurExPoint,dwNextExPoint,NextLvScore);\r\n\t}\r\n};\r\n\r\n/**存钱罐通知*/\r\ndatatypes.CMD_MB_PushUserPig = {\r\n\t'mainCmdID': constVal.MDM_GR_USER,\r\n\t'subCmdID': constVal.SUB_GR_PUSHUSERPIG,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'dwUserID',\r\n            'type': 'UINT32'\r\n\t\t},\t\t\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n        let dwUserID = stream.readUint32();     //\r\n\r\n\t\targs.push(dwUserID);\r\n\t}\r\n};\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////状态信息///////////////////////////\r\n\r\n//状态信息\r\nconstVal.MDM_GR_STATUS                          = constVal.CMD_FRIST_MDM_GAME + 4\r\n\r\nconstVal.SUB_GR_TABLE_INFO                      = 100       //桌子信息\r\nconstVal.SUB_GR_TABLE_STATUS                    = 101       //桌子状态\r\n\r\n/**桌子信息*/\r\ndatatypes.SUB_GR_TableInfo = {\r\n\t'mainCmdID': constVal.MDM_GR_STATUS,\r\n\t'subCmdID': constVal.SUB_GR_TABLE_INFO,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'cbTableLock',\r\n            'type': 'UINT8'\r\n\t\t},\t\t\r\n        {\r\n\t\t\t'name': 'cbPlayStatus',\r\n            'type': 'UINT8'\r\n\t\t},\t\r\n        {\r\n\t\t\t'name': 'lCellScore',\r\n            'type': 'UINT32'\r\n\t\t},\t\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n        let wTableCount = stream.readUint16();     //桌子数量\r\n        let _tableStatus = []\r\n        for (var i = 0, len = wTableCount; i < len; i++) {\r\n            let tempMap = new Map()   \r\n            let cbTableLock = stream.readUint8();     //锁定标识  \r\n            let cbPlayStatus = stream.readUint8();     //游戏标识  \r\n            let lCellScore = stream.readUint32();     //单元积分    \r\n            tempMap[\"cbTableLock\"] = cbTableLock\r\n            tempMap[\"cbPlayStatus\"] = cbPlayStatus\r\n            tempMap[\"lCellScore\"] = lCellScore\r\n            _tableStatus[i] = tempMap\r\n        }\r\n        \r\n\r\n\t\targs.push(_tableStatus);\r\n\t}\r\n};\r\n\r\n/**桌子状态*/\r\ndatatypes.SUB_GR_TableStatus = {\r\n\t'mainCmdID': constVal.MDM_GR_STATUS,\r\n\t'subCmdID': constVal.SUB_GR_TABLE_STATUS,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'cbTableLock',\r\n            'type': 'UINT8'\r\n\t\t},\t\t\r\n        {\r\n\t\t\t'name': 'cbPlayStatus',\r\n            'type': 'UINT8'\r\n\t\t},\t\r\n        {\r\n\t\t\t'name': 'lCellScore',\r\n            'type': 'UINT32'\r\n\t\t},\t\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n        let cbTableLock = stream.readUint8();     //锁定标识\r\n        let cbPlayStatus = stream.readUint8();     //游戏标识\r\n        let lCellScore = stream.readUint32();     //单元积分\r\n\r\n\t\targs.push(cbTableLock,cbPlayStatus,lCellScore);\r\n\t}\r\n};\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////框架命令///////////////////////////\r\n\r\n//框架命令\r\nconstVal.MDM_GF_FRAME = constVal.CMD_FRIST_MDM_GAME + 100; \r\n\r\n//用户命令\r\nconstVal.SUB_GF_GAME_OPTION                         = 1     //游戏配置\r\nconstVal.SUB_GF_USER_READY                          = 2     //用户准备\r\nconstVal.SUB_GF_LOOKON_CONFIG                       = 3     //旁观配置\r\nconstVal.SUB_GF_DISTRIBUTE_AFFIRM                   = 4     //分组确认\r\n\r\n//聊天命令\r\nconstVal.SUB_GF_USER_CHAT                           = 10    //用户聊天\r\nconstVal.SUB_GF_USER_EXPRESSION                     = 11    //用户表情\r\nconstVal.SUB_GF_USER_VOICE                          = 12    //用户语音\r\n\r\n//场景消息\r\nconstVal.SUB_GF_GAME_STATUS                         = 100   //游戏状态\r\nconstVal.SUB_GF_GAME_SCENE                          = 101   //游戏场景\r\nconstVal.SUB_GF_LOOKON_STATUS                       = 102   //旁观状态\r\n\r\n//系统消息\r\nconstVal.SUB_GF_SYSTEM_MESSAGE                      = 200   //系统消息\r\nconstVal.SUB_GF_ACTION_MESSAGE                      = 201   //动作消息\r\n\r\n//通知玩家准备\r\nconstVal.SUB_GF_NOTICE_READ                         = 502   //通知玩家准备\r\n\r\n/**游戏配置*/\r\ndatatypes.CMD_GF_GameOption = {\r\n\t\"mainCmdID\": constVal.MDM_GF_FRAME,\r\n\t\"subCmdID\": constVal.SUB_GF_GAME_OPTION,\r\n\t\"argTypes\": [\r\n\t\t{\r\n\t\t\t\"name\": \"cbAllowLookon\",\r\n\t\t\t\"type\": \"UINT8\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"dwFrameVersion\",\r\n\t\t\t\"type\": \"UINT32\"\r\n\t\t},\r\n        {\r\n\t\t\t\"name\": \"dwClientVersion\",\r\n\t\t\t\"type\": \"UINT32\"\r\n\t\t},\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 9;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint8(args[0]);                        //旁观标志\r\n        bundle.writeUint32(args[1]);                        //框架版本\r\n        bundle.writeUint32(args[2]);                        //游戏版本\r\n\t}\r\n};\r\n\r\n/**用户准备*/\r\ndatatypes.CMD_GF_User_Ready = {\r\n\t\"mainCmdID\": constVal.MDM_GF_FRAME,\r\n\t\"subCmdID\": constVal.SUB_GF_USER_READY,\r\n\t\"argTypes\": [\r\n\r\n\t],\r\n\tsize: function () {\r\n\t\treturn 0;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\r\n\t}\r\n};\r\n\r\n/**游戏环境*/\r\ndatatypes.CMD_GF_GameStatus = {\r\n\t'mainCmdID': constVal.MDM_GF_FRAME,\r\n\t'subCmdID': constVal.SUB_GF_GAME_STATUS,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'cbGameStatus',\r\n            'type': 'UINT8'\r\n\t\t},\t\t\r\n        {\r\n\t\t\t'name': 'cbAllowLookon',\r\n            'type': 'UINT8'\r\n\t\t},\t\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n        let cbGameStatus = stream.readUint8();     //游戏状态\r\n        let cbAllowLookon = stream.readUint8();     //旁观标志\r\n\r\n\t\targs.push(cbGameStatus,cbAllowLookon);\r\n\t}\r\n};\r\n\r\n\r\nconstVal.GAME_SCENE_FREE     = 0     // 初始化\r\nconstVal.GAME_SCENE_WAIT     = 100   // 等待开始\r\nconstVal.GAME_SCENE_PLAY     = 101   // 游戏进行\r\nconstVal.GAME_SCENE_STOP     = 102   // 滚动停止\r\n\r\n/**场景消息*/\r\ndatatypes.CMD_GF_GameScene = {\r\n\t'mainCmdID': constVal.MDM_GF_FRAME,\r\n\t'subCmdID': constVal.SUB_GF_GAME_SCENE,\r\n\t'argTypes': [\r\n\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n\t}\r\n};\r\n\r\n/**系统消息*/\r\ndatatypes.CMD_CM_SystemMessage = {\r\n\t'mainCmdID': constVal.MDM_GF_FRAME,\r\n\t'subCmdID': constVal.SUB_GF_SYSTEM_MESSAGE,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'wType',\r\n            'type': 'UINT16'\r\n\t\t},\t\t\r\n        {\r\n\t\t\t'name': 'wLength',\r\n            'type': 'UINT16'\r\n\t\t},\t\r\n        {\r\n            \"name\": \"szString\",\r\n            \"type\": \"STRING\",\r\n            \"len\": 128,\r\n        },\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n        let wType = stream.readUint16();     //消息类型\r\n        let wLength = stream.readUint16();     //消息长度\r\n        let szString = stream.readStringUTF8(128 * 2);//消息内容\r\n\t\targs.push(wType,wLength,szString);\r\n\t}\r\n};\r\n\r\n/**动作消息*/\r\ndatatypes.CMD_CM_ActionMessage = {\r\n\t'mainCmdID': constVal.MDM_GF_FRAME,\r\n\t'subCmdID': constVal.SUB_GF_ACTION_MESSAGE,\r\n\t'argTypes': [\r\n\t\t{\r\n\t\t\t'name': 'wType',\r\n            'type': 'UINT16'\r\n\t\t},\t\t\r\n        {\r\n\t\t\t'name': 'wLength',\r\n            'type': 'UINT16'\r\n\t\t},\t\r\n        {\r\n\t\t\t'name': 'nButtonType',\r\n            'type': 'UINT32'\r\n\t\t},\t\r\n        {\r\n            \"name\": \"szString\",\r\n            \"type\": \"STRING\",\r\n            \"len\": 128,\r\n        },\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n        let wType = stream.readUint16();     //消息类型\r\n        let wLength = stream.readUint16();     //消息长度\r\n        let nButtonType = stream.readUint32();     //按钮类型\r\n        let szString = stream.readStringUTF8(128 * 2);//消息内容\r\n\t\targs.push(wType,wLength,nButtonType,szString);\r\n\t}\r\n};\r\n\r\n/**通知玩家准备*/\r\ndatatypes.CMD_CM_Nitice_Read = {\r\n\t'mainCmdID': constVal.MDM_GF_FRAME,\r\n\t'subCmdID': constVal.SUB_GF_NOTICE_READ,\r\n\t'argTypes': [\r\n\t\t\r\n\t],\r\n\r\n\tcreateFromStream: function (stream, args) {\r\n\r\n\t}\r\n};\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////游戏命令///////////////////////////\r\n\r\n//游戏命令\r\nconstVal.MDM_GF_GAME = constVal.CMD_FRIST_MDM_GAME + 200; \r\n\r\n////////////////////////////////////////////////////////////////////////\r\n\r\n////////////////////////////////////心跳///////////////////////////\r\n//内核命令码\r\nconstVal.MDM_KN_COMMAND = 0; //内核命令\r\nconstVal.SUB_KN_DETECT_SOCKET = 1; //检测命令\r\nconstVal.SUB_KN_DETECT_ONLINE = 2; //在线检测\r\n//检测结构信息\r\ndatatypes.CMD_KN_DetectSocket = {\r\n\t'mainCmdID': constVal.MDM_KN_COMMAND,\r\n\t'subCmdID': constVal.SUB_KN_DETECT_SOCKET,\r\n\tsize: function () {\r\n\t\treturn 8;\r\n\t},\r\n\twrite2bundle: function (bundle, args) {\r\n\t\tbundle.writeUint32(args[0]);\r\n\t\tbundle.writeUint32(args[1]);\r\n\t},\r\n\tcreateFromStream: function (stream, args) {\r\n\t\tlet dwSendTickCount = stream.readUint32();\r\n\t\tlet dwRecvTickCount = stream.readUint32();\r\n\t\targs.push(dwSendTickCount, dwRecvTickCount);\r\n\t}\r\n};\r\n////////////////////////////////////////////////////////////////////////\r\n\r\nmodule.exports = {\r\n\t'constVal': constVal,\r\n\t'datatypes': datatypes\r\n};","\r\nlet GameTableProtocol = require('GameTableProtocol');\r\n\r\nlet datatypes = GameTableProtocol.datatypes;\r\n\r\nmodule.exports = puremvc.define(\r\n\t{\r\n\t\tparent: puremvc.Proxy,\r\n\t\tconstructor: function () {\r\n\t\t\tpuremvc.Proxy.call(this, this.constructor.NAME);\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tonRegister: function () {\r\n\t\t\tthis._globalDataProxy = this.facade.retrieveProxy('FishGlobalDataProxy');\r\n       \r\n            let gameTableDataManager = this.facade.retrieveProxy('GameTableDataManager');\r\n\t\t\tif(gameTableDataManager != null){\t\r\n\t\t\t\tthis.facade.removeProxy('GameTableDataManager');\r\n\t\t\t}\r\n            let GameTableDataManager = require('GameTableDataManager');\r\n\t\t\tthis.facade.addProxy(new GameTableDataManager());\r\n\t\t\tthis._gameTableDataManager = this.facade.retrieveProxy('GameTableDataManager');\r\n\r\n\t\t},\r\n\r\n\t\tregisterNetInterface: function (app,gameinfo) {\r\n            \r\n\t\t\tthis.app = app\r\n\t\t\tlet net = this.app.net;\r\n\t\t\tthis.net = net;\r\n\r\n            this._kindVersion = 0;\r\n\r\n            this._gameInfo = gameinfo;\r\n\r\n            ////////////////////////////////////登录信息///////////////////////////\r\n\r\n            //登录游戏\r\n\t\t\tnet.registerClient(this, 'logonGame', datatypes.CMD_GR_LogonMobile);\r\n            //登录成功\r\n\t\t\tnet.registerServer(this, 'grLogonSuccess', datatypes.grLogonSuccess);\r\n            //登录失败\r\n\t\t\tnet.registerServer(this, 'grLogonError', datatypes.CMD_GR_LogonError);\r\n            //登录完成\r\n\t\t\tnet.registerServer(this, 'onSocketLogonFinish', datatypes.CMD_GR_LogonFinish);\r\n            ///////////////////////////////////配置信息///////////////////////////\r\n\r\n            //房间配置\r\n\t\t\tnet.registerServer(this, 'grConfigServer', datatypes.CMD_GR_ConfigServer);\r\n            //配置完成\r\n\t\t\tnet.registerServer(this, 'grConfigFinish', datatypes.CMD_GR_ConfigFinish);\r\n\r\n            ///////////////////////////////////用户命令///////////////////////////\r\n\r\n            //坐下请求\r\n            net.registerClient(this, 'queryChangeChair', datatypes.CMD_GR_UserSitDown);\r\n            //起立请求\r\n            net.registerClient(this, 'sendStandUpData', datatypes.CMD_GR_UserStandUp);\r\n            //用户离开\r\n            net.registerClient(this, 'sendLeaveRoomData', datatypes.CMD_GR_UserReqLeave);\r\n            //查询用户信息\r\n            net.registerClient(this, 'queryUserInfo', datatypes.CMD_GR_ChairUserInfo);   \r\n\r\n            //用户信息\r\n            net.registerServer(this, 'onSocketUserEnter', datatypes.SUB_GR_UserEnter);\r\n\r\n            //用户积分\r\n            net.registerServer(this, 'onSocketUserScore', datatypes.SUB_GR_UserScore);\r\n            //用户状态\r\n            net.registerServer(this, 'onSocketUserStatus', datatypes.SUB_GR_UserStatus);\r\n            //请求失败\r\n            net.registerServer(this, 'onSocketReQuestFailure', datatypes.CMD_GR_RequestFailure);\r\n            // //用户经验值奖励更新\r\n            // net.registerServer(this, 'grLogonSuccess', datatypes.CMD_GR_MobileUserExperienceReward);\r\n            // //用户经验等级进度条\r\n            // net.registerServer(this, 'grLogonSuccess', datatypes.CMD_GR_MobileUserExperienceProgress);\r\n            // //存钱罐通知\r\n            // net.registerServer(this, 'grLogonSuccess', datatypes.CMD_MB_PushUserPig);\r\n\r\n            ////////////////////////////////////状态信息///////////////////////////\r\n\r\n            //桌子信息\r\n            net.registerServer(this, 'onSocketTableInfoEvent', datatypes.SUB_GR_TableInfo);\r\n            //桌子状态\r\n            net.registerServer(this, 'onSocketSTabletatusEvent', datatypes.SUB_GR_TableStatus);    \r\n            \r\n            ////////////////////////////////////框架命令///////////////////////////\r\n\r\n            //游戏配置\r\n            net.registerClient(this, 'sendGameOption', datatypes.CMD_GF_GameOption); \r\n\r\n            //用户准备\r\n            net.registerClient(this, 'sendUserReady', datatypes.CMD_GF_User_Ready); \r\n\r\n            //游戏状态\r\n            net.registerServer(this, 'onSocketSGameStatusEvent', datatypes.CMD_GF_GameStatus);    \r\n\r\n            //场景消息\r\n            net.registerServer(this, 'onEventGameScene', datatypes.CMD_GF_GameScene);    \r\n            // //系统消息\r\n            // net.registerServer(this, 'grLogonSuccess', datatypes.CMD_CM_SystemMessage); \r\n            // //动作消息\r\n            // net.registerServer(this, 'grLogonSuccess', datatypes.CMD_CM_ActionMessage); \r\n\r\n            //通知玩家准备\r\n            net.registerServer(this, 'onGetNoticeReady', datatypes.CMD_CM_Nitice_Read); \r\n\r\n            //-------------------------------\r\n\r\n\t\t\t// net.registerServer(this, 'userCome', datatypes.tagUserInfoHead);\r\n\t\t\t// // 用户状态 --\r\n\t\t\t// net.registerServer(this, 'userStatus', datatypes.CMD_GR_UserStatus);\r\n\t\t\t// // 发送坐下命令\r\n\t\t\t// net.registerClient(this, 'userSit', datatypes.CMD_GR_UserSitReq);\r\n\t\t\t// // 坐下失败\r\n\t\t\t// net.registerServer(this, 'userSitFailed', datatypes.CMD_GR_SitFailed);\r\n\t\t\t// // 游戏信息\r\n\t\t\t// net.registerClient(this, 'sendGFInfo', datatypes.CMD_GF_Info);\r\n\r\n\t\t\t// net.registerServer(this, 'gfScene', datatypes.CMD_S_StatusFree);\r\n\r\n\t\t\t// // 发送起立命令\r\n\t\t\t// net.registerClient(this, 'standUp', datatypes.standUp);\r\n\t\t\t// // 发送强退命令\r\n\t\t\t// net.registerClient(this, 'leaveGame', datatypes.leftGame);\r\n\r\n\t\t\t// net.registerServer(this, 'Message', datatypes.CMD_GR_Message);\r\n\r\n            //心跳\r\n\t\t\tnet.registerClient(this, 'netCheck', datatypes.CMD_KN_DetectSocket);\r\n\t\t\tnet.registerServer(this, 'netCheck', datatypes.CMD_KN_DetectSocket);\r\n\r\n\t\t},\r\n\r\n\t\tlogonGame: function (account, token) {\r\n\r\n            this._gameTableDataManager.setSendOption(false);\r\n            // let gameinfo = this._gameInfo\r\n            // this._kindVersion = gameinfo.dwClientVersion\r\n            \r\n\t\t\tlet app = this.app;\r\n            // let userid = this._globalDataProxy.getLogonSuccessData().dwUserID;\r\n            // let Token = this._globalDataProxy.getLogonSuccessData().szToken;\r\n\r\n\r\n\t\t\tthis.net.callServer('logonGame', 520, 0,1,0,0,1111,token,\"0123456789abcdefg\",account);\r\n\r\n\t\t\tG_isOffline = false\r\n\r\n\t\t},\r\n\r\n        //登录成功\r\n\t\tgrLogonSuccess: function (userId) {\r\n\t\t\tcc.log('登录成功', userId);\r\n            this.MyUserId = userId\r\n\t\t\tthis.sendNotification(FishConstants.LOGIN_GAME_FINISH);\r\n\t\t},\r\n\r\n        //登录失败\r\n\t\tgrLogonError: function (errorCode, kindid, wServerID, errorMsg) {\r\n            cc.log('登录失败', errorMsg);\r\n\t\t\tif (this.app.socket) {\r\n\t\t\t\tKBEngine.destroyApp(this.app);\r\n\t\t\t}\r\n\t\t\t//cc.director.loadScene('GameLobbyLoginScene');\r\n\t\t},\r\n\r\n        //登录完成\r\n\t\tonSocketLogonFinish: function () {\r\n            cc.log('登录完成');\r\n\r\n            if(this._gameTableDataManager.getwTableID() != 65535){\r\n                this.sendNotification(FishConstants.LOGIN_GAME_FINISH);\r\n                this.sendGameOption()\r\n            }\r\n        \r\n\t\t},\r\n\r\n        \r\n\r\n        //房间配置\r\n        grConfigServer: function (wTableCount, wChairCount, wServerType, dwServerRule) {\r\n            cc.log('房间配置');\r\n            this._gameTableDataManager.setTableCount(wTableCount)\r\n            this._gameTableDataManager.setChairCount(wChairCount)\r\n            this._gameTableDataManager.setServerType(wServerType)\r\n            this._gameTableDataManager.setServerRule(dwServerRule)\r\n\t\t},\r\n\r\n        //配置完成\r\n        grConfigFinish: function () {\r\n            cc.log('配置完成');\r\n\t\t},\r\n\r\n        \r\n      \r\n\t\tnetCheck: function (sendTickCount, recvTickCount) {\r\n\t\t\tcc.log('netCheck');\r\n\t\t\tRoomOffLine = false\r\n\t\t\tthis.net.callServer('netCheck', sendTickCount, recvTickCount);\r\n\t\t},\r\n\r\n        //玩家坐下\r\n        queryChangeChair: function (tableId, chairId) {\r\n            cc.log('玩家坐下', tableId, chairId);\r\n\t\t\tif (!this.app.socket) {\r\n\t\t\t\t//cc.director.loadScene('GameLobbyLoginScene');\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tthis.net.callServer('queryChangeChair', tableId, chairId, \"\",null);\r\n\t\t},\r\n\r\n        //起立请求(离开桌子)\r\n        sendStandUpData: function (force) {\r\n            cc.log('请求起立=====================');\r\n\t\t\tthis.net.callServer('sendStandUpData',this._gameTableDataManager.getwTableID(),this._gameTableDataManager.getwChairID(),!force ? 0 : 1);\r\n\t\t},\r\n\r\n        //离开房间\r\n        sendLeaveRoomData: function () {\r\n            cc.log('离开房间');\r\n\t\t\tthis.net.callServer('sendLeaveRoomData',this._globalDataProxy.getLogonSuccessData().dwUserID,this._globalDataProxy.getLogonSuccessData().szToken);\r\n\t\t},\r\n\r\n        //查询用户\r\n        queryUserInfo: function (table, chair) {\r\n            cc.log('查询用户');\r\n\t\t\tthis.net.callServer('queryUserInfo',table, chair);\r\n\t\t},\r\n\r\n        //用户进入\r\n        onSocketUserEnter: function (userItemInfo) {\r\n\t\t\tcc.log('用户进入');\r\n\t\t\tlet userItem = userItemInfo;\r\n            if (this.MyUserId == userItem.get(\"dwUserID\")){\r\n\r\n                let logonSuccessData = {}\r\n                userItem.forEach(function(value, key) {\r\n                    logonSuccessData[key] = value\r\n                }.bind(this));\r\n\r\n                this._globalDataProxy.setLogonSuccessData(logonSuccessData)\r\n                this._globalDataProxy.setUserId(this.MyUserId);\r\n                // this._globalDataProxy.setLogonSuccessData(logonSuccessData)\r\n                // this._globalDataProxy.setUserId(logonSuccessData.dwUserID);\r\n            }\r\n            cc.log('userId' + userItem.get(\"dwUserID\") + \" ==> user enter\");\r\n            let isMySelf = (userItem.get(\"dwUserID\")=== this._globalDataProxy.getLogonSuccessData().dwUserID)\r\n            if(!this._gameTableDataManager.getRoomUserList(this._globalDataProxy.getLogonSuccessData().dwUserID)){\r\n                if(isMySelf === false){\r\n                    cc.log(\"never have own information, do not process other user information\");\r\n                    return;\r\n                }\r\n            }else{\r\n                if(isMySelf === true){\r\n                    cc.log(\"you already have your own information, do not process your own information again\");\r\n                    return;\r\n                }  \r\n            };\r\n            cc.log(\"---------------------------------onSocketUserEnter---------------------------------\")\r\n            cc.log(\"UserId: \" + userItem.get(\"dwUserID\") + \" ==> \" + \"cbUserStatus: \" + userItem.get(\"cbUserStatus\") + \"; \\twTableID: \" + userItem.get(\"wTableID\") + \"; \\twChairID: \" + userItem.get(\"wChairID\"))\r\n            cc.log(\"---------------------------------onSocketUserEnter---------------------------------\")\r\n\r\n            \r\n            //附加包\r\n            let curlen = this.app.stream.rpos;\r\n            let datalen = this.app.stream.buffer.byteLength;\r\n\r\n            while (curlen < datalen) {\r\n                let tmpSize = this.app.stream.readUint16();\r\n                let tmpCmd = this.app.stream.readUint16();\r\n\r\n                if(!tmpSize || !tmpCmd){\r\n                    break;\r\n                };\r\n\r\n                if(tmpCmd === datatypes.DTP_GR_NICK_NAME){\r\n                    //昵称\r\n                    userItem.set(\"szNickName\",this.app.stream.readStringUnicode(tmpSize));\r\n                    cc.log(userItem.get(\"szNickName\"));\r\n                    if(!userItem.get(\"szNickName\")){\r\n                        userItem.set(\"szNickName\",\"player\");\r\n                    }\r\n                }else if(tmpCmd === datatypes.DTP_GR_UNDER_WRITE){\r\n                    //个性签名\r\n                    userItem.set(\"szSign\",this.app.stream.readStringUnicode(tmpSize));\r\n                    if(!userItem.get(\"szSign\")){\r\n                        userItem.set(\"szSign\",\"empty\");\r\n                    }\r\n                }else if(tmpCmd === 0){\r\n                    break;\r\n                }else{\r\n                    for(var i = 0, len = tmpSize; i < len; i++){\r\n                        if (!this.app.stream.readUint8()) {\r\n                            break;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                curlen = this.app.stream.rpos;\r\n            };\r\n\r\n            //添加/更新到缓存\r\n            let isNeedAdd = true;\r\n            let item = this._gameTableDataManager.getRoomUserList(userItem.get(\"dwUserID\"));\r\n            if(item != null){\r\n                //如果不为空，需要清掉之前的信息\r\n                let oldstatus = new Map();\r\n                oldstatus.set(\"wTableID\",item.get(\"wTableID\"));\r\n                oldstatus.set(\"wChairID\",item.get(\"wChairID\"));\r\n                oldstatus.set(\"cbUserStatus\",item.get(\"cbUserStatus\"));\r\n\r\n                isNeedAdd = false;\r\n\r\n                //更新信息\r\n                item.set(\"cbUserStatus\",userItem.get(\"cbUserStatus\"));\r\n                item.set(\"wTableID\",userItem.get(\"wTableID\"));\r\n                item.set(\"wChairID\",userItem.get(\"wChairID\"));\r\n                item.set(\"szNickName\",userItem.get(\"szNickName\"));\r\n                item.set(\"lScore\",userItem.get(\"lScore\"));\r\n\r\n                //清除旧桌子椅子记录\r\n                if(oldstatus.get(\"wTableID\") != 65535){\r\n                    if(oldstatus.get(\"wTableID\") != item.get(\"wTableID\") || oldstatus.get(\"wChairID\") != item.get(\"wChairID\")){\r\n                        this._gameTableDataManager.onUpDataTableUser(userItem.get(\"wTableID\"), userItem.get(\"wChairID\"), null);\r\n                    };                  \r\n                };          \r\n            };\r\n\r\n            if(isNeedAdd){\r\n                this._gameTableDataManager.setRoomUserList(userItem.get(\"dwUserID\"),userItem);\r\n            };\r\n\r\n\r\n            //记录自己桌椅号\r\n            if (userItem.get(\"dwUserID\") === this._globalDataProxy.getLogonSuccessData().dwUserID){\r\n\r\n                this._gameTableDataManager.setwTableID(userItem.get(\"wTableID\"));\r\n                this._gameTableDataManager.setwChairID(userItem.get(\"wChairID\"));\r\n                \r\n                cc.log(\"当前桌号1：wTableID: \" + this._gameTableDataManager.getwTableID() + \"; wChairID: \" + this._gameTableDataManager.getwChairID())\r\n             \r\n            }\r\n            \r\n            //同步一下自己的积分信息\r\n            if (userItem.get(\"dwUserID\") === this._globalDataProxy.getLogonSuccessData().dwUserID) {\r\n                this._globalDataProxy.getLogonSuccessData().lScore  = userItem.get(\"lScore\")\r\n                this._globalDataProxy.getLogonSuccessData().lDiamond    = userItem.get(\"lDiamond\")  // 钻石\r\n                this._globalDataProxy.getLogonSuccessData().lLpValues   = userItem.get(\"lLpValues\")  // Lp\r\n                this._globalDataProxy.getLogonSuccessData().lExperience = userItem.get(\"lExperience\") \r\n                this._globalDataProxy.getLogonSuccessData().lTicket     = userItem.get(\"lTicket\")  //奖券\r\n            }   \r\n\r\n            if (userItem.get(\"wTableID\") != 65535 && userItem.get(\"cbUserStatus\") != US_LOOKON) {\r\n                this._gameTableDataManager.onUpDataTableUser(userItem.get(\"wTableID\"), userItem.get(\"wChairID\"), userItem)\r\n            }\r\n\r\n        },\r\n\r\n        \r\n         //用户积分\r\n        onSocketUserScore: function (_data) {\r\n            let data = _data\r\n\r\n            let userItem = this._gameTableDataManager.getRoomUserList(data.dwUserID)\r\n            if (userItem != null) {\r\n                // 更新数据\r\n                userItem.set(\"lScore\",data.lScore);\r\n                userItem.set(\"lExperience\",data.lExperience);\r\n                userItem.set(\"lExperience\",data.lExperience);\r\n                userItem.set(\"lLpValues\",data.lLpValues);\r\n                userItem.set(\"lTicket\",data.lTicket);\r\n        \r\n                \r\n                //自己信息，如果不是比赛和训练模式，更新全局\r\n                if (userItem.get(\"dwUserID\") === this._globalDataProxy.getLogonSuccessData().dwUserID) {\r\n        \r\n                    this._globalDataProxy.getLogonSuccessData().lDiamond    = userItem.get(\"lDiamond\")  // 钻石\r\n                    this._globalDataProxy.getLogonSuccessData().lLpValues   = userItem.get(\"lLpValues\")  // Lp\r\n                    this._globalDataProxy.getLogonSuccessData().lExperience = userItem.get(\"lExperience\") \r\n                    this._globalDataProxy.getLogonSuccessData().lTicket     = userItem.get(\"lTicket\")  //奖券\r\n        \r\n                    let bUpdate = false\r\n                    let _addScore = userItem.get(\"lScore\") - this._globalDataProxy.getLogonSuccessData().lScore\r\n                    if (_addScore > 0) {\r\n                        bUpdate = true\r\n                        this.sendNotification(\"UPDATE_SCORE\",_addScore);\r\n                    }\r\n        \r\n                    if (bUpdate === false) {\r\n                        this._globalDataProxy.getLogonSuccessData().lScore  = userItem.get(\"lScore\")\r\n                        this.sendNotification(\"UPDATE_UI_OF_USER_INFO\");\r\n                        \r\n                    }\r\n                }\r\n                \r\n                // 通知更新界面\r\n                // if (newstatus.get(\"wTableID\") != 65535 && newstatus.get(\"wTableID\") == userItem.get(\"wTableID\")) {\r\n                //     this._gameCtr.onEventUserScore(userItem)\r\n                // }\r\n            } \r\n        },\r\n\r\n        //用户状态\r\n        onSocketUserStatus: function (newstatus) {\r\n\t\t\tcc.log('用户状态');\r\n\r\n            //过滤观看\r\n            if (newstatus.get(\"cbUserStatus\") === US_LOOKON) {\r\n                return\r\n            }\r\n            \r\n            let mySelfInfo = this._gameTableDataManager.getRoomUserList(this._globalDataProxy.getLogonSuccessData().dwUserID);\r\n\r\n            if (!mySelfInfo)  {\r\n                return;\r\n            };\r\n                \r\n            let isMySelf = (newstatus.get(\"dwUserID\") === mySelfInfo.get(\"dwUserID\"))    \r\n            \r\n            let useritem = this._gameTableDataManager.getRoomUserList(newstatus.get(\"dwUserID\"));\r\n\r\n            // 找不到用户\r\n            if (useritem == null) {\r\n                \r\n                // 当前桌子用户\r\n                if (newstatus.get(\"wTableID\") != 65535) {\r\n                    \r\n                    this.queryUserInfo(newstatus.get(\"wTableID\"), newstatus.get(\"wChairID\"));\r\n\r\n                }\r\n                    \r\n                cc.log(\"can't find the user in this room list\");\r\n                cc.log(\"can't find: \" + newstatus.get(\"dwUserID\"));\r\n                return ;\r\n\r\n            };\r\n\r\n            // 记录旧状态\r\n            let oldstatus = new Map();\r\n            oldstatus.set(\"cbUserStatus\",useritem.get(\"cbUserStatus\"));\r\n            oldstatus.set(\"wTableID\",useritem.get(\"wTableID\"));\r\n            oldstatus.set(\"wChairID\",useritem.get(\"wChairID\"));  \r\n\r\n            //更新信息\r\n            useritem.set(\"cbUserStatus\",newstatus.get(\"cbUserStatus\"));\r\n            useritem.set(\"wTableID\",newstatus.get(\"wTableID\"));\r\n            useritem.set(\"wChairID\",newstatus.get(\"wChairID\"));\r\n\r\n            cc.log(\"---------------------------------onSocketUserStatus---------------------------------\");\r\n            cc.log(\"userId:\" + newstatus.get(\"dwUserID\") + \"; old status ==> \" + \"cbUserStatus: \" + oldstatus.get(\"cbUserStatus\") + \"; \\twTableID: \" + oldstatus.get(\"wTableID\") + \"; \\twChairID: \" + oldstatus.get(\"wChairID\"));\r\n            cc.log(\"userId:\" + newstatus.get(\"dwUserID\") + \"; new status ==> \" + \"cbUserStatus: \" + newstatus.get(\"cbUserStatus\") + \"; \\twTableID: \" + newstatus.get(\"wTableID\") + \"; \\twChairID: \" + newstatus.get(\"wChairID\"));\r\n            cc.log(\"---------------------------------onSocketUserStatus---------------------------------\");\r\n\r\n            //清除旧状态\r\n            if (oldstatus.get(\"wTableID\") != 65535) {\r\n                \r\n                if ((oldstatus.get(\"wTableID\") != newstatus.get(\"wTableID\")) || (oldstatus.get(\"wChairID\") != newstatus.get(\"wChairID\"))) {\r\n\r\n                    this._gameTableDataManager.onUpDataTableUser(oldstatus.get(\"wTableID\"), oldstatus.get(\"wChairID\"), null);\r\n\r\n                };\r\n\r\n            };\r\n\r\n            // 新状态\r\n            if (newstatus.get(\"wTableID\") != 65535) {\r\n                \r\n                this._gameTableDataManager.onUpDataTableUser(newstatus.get(\"wTableID\"), newstatus.get(\"wChairID\"), useritem);\r\n\r\n            }\r\n\r\n            if (isMySelf === true) {\r\n\r\n                // 自己状态\r\n                this._gameTableDataManager.setwTableID(newstatus.get(\"wTableID\"));\r\n                this._gameTableDataManager.setwChairID(newstatus.get(\"wChairID\"));\r\n\r\n                if (newstatus.get(\"cbUserStatus\") === US_NULL) {\r\n                    \r\n                    // 离开\r\n                    cc.log(\"离开房间---- \");\r\n                    if (this.app.socket) {\r\n                        //KBEngine.destroyApp(this.app);\r\n                        this.sendNotification(\"SHOW_DIALOG\",[\"Se você não opera há muito tempo, saia da sala e entre novamente\"]);\r\n                    }\r\n                    //cc.director.loadScene('GameLobbyLoginScene');\r\n                        \r\n                    \r\n                }else if (newstatus.get(\"cbUserStatus\") === US_FREE && oldstatus.get(\"cbUserStatus\") > US_FREE) {\r\n                    \r\n                    // 起立\r\n                    cc.log(\"起立----\");\r\n                    if(!this._gameTableDataManager.getChangeDesk()) {\r\n                        if (this.app.socket) {\r\n                            //KBEngine.destroyApp(this.app);\r\n                        }\r\n                        //cc.director.loadScene('GameLobbyLoginScene');\r\n                    };\r\n\r\n                }else if (newstatus.get(\"cbUserStatus\") > US_FREE && oldstatus.get(\"cbUserStatus\") < US_SIT) {\r\n                    // 坐下\r\n                    cc.log(\"坐下--\");\r\n\r\n                    this.sendNotification(FishConstants.LOGIN_GAME_FINISH);\r\n                    \r\n                    if(this._gameTableDataManager.getChangeDesk() === true) {\r\n                        this._gameTableDataManager.setChangeDesk(false);\r\n                        this._gameTableDataManager.setSendOption(false);\r\n\r\n                    };\r\n\r\n        \r\n                    this.sendGameOption()\r\n                    // if this._gameCtr && this._gameCtr.onEventUserStatus {\r\n                    //     this._gameCtr:onEventUserStatus(useritem, newstatus, oldstatus)\r\n                    // }\r\n                        \r\n                    \r\n                }else if (newstatus.get(\"wTableID\") != 65535 && this._gameTableDataManager.getChangeDesk() === true) {\r\n                    \r\n                    // 换位\r\n                    cc.log(\"换位--todo\");\r\n                    // if this._gameCtr && this._gameCtr.startGame {\r\n                    //     this._gameCtr:startGame()\r\n                    // }\r\n\r\n                    // this:sendGameOption()\r\n                    // if this._gameCtr && this._gameCtr.onEventUserStatus {\r\n                    //     this._gameCtr:onEventUserStatus(useritem, newstatus, oldstatus)\r\n\r\n                    // }\r\n\r\n                }else{\r\n\r\n                    // 其他状态\r\n                    cc.log(\"其它状态----todo\");\r\n                    this.sendNotification(FishConstants.LOGIN_GAME_FINISH);\r\n                    // if this._gameCtr && this._gameCtr.onEventUserStatus {\r\n                        \r\n                    //     this._gameCtr:onEventUserStatus(useritem, newstatus, oldstatus)\r\n                    // }\r\n\r\n\r\n                };\r\n\r\n            \r\n            }else{\r\n\r\n                // 更新用户\r\n                if (oldstatus.get(\"wTableID\") != 65535 || newstatus.get(\"wTableID\") != 65535) {\r\n                    \r\n\r\n                    // 只更新自己桌子用户\r\n                    if (oldstatus.get(\"wTableID\") === this._gameTableDataManager.getwTableID() && newstatus.get(\"wTableID\") != this._gameTableDataManager.getwTableID()) {\r\n\r\n                        // if (this._gameCtr && this._gameCtr.onEventUserStatus) {\r\n                            \r\n                        //     this._gameCtr:onEventUserStatus(useritem, newstatus, oldstatus)\r\n                        // }\r\n                            \r\n                        \r\n                    };\r\n                };\r\n\r\n                // 删除用户\r\n                if (newstatus.get(\"cbUserStatus\") === US_NULL || newstatus.get(\"cbUserStatus\") === US_FREE) {\r\n                    \r\n                    cc.log(\"removeuser: \" + newstatus.get(\"dwUserID\"));\r\n                    \r\n                    this._gameTableDataManager.onRemoveUser(newstatus.get(\"dwUserID\"));\r\n                };\r\n    \r\n\r\n            \r\n            };\r\n\r\n\t\t},\r\n\r\n        \r\n        //请求失败\r\n        onSocketReQuestFailure: function (dataBuffer) {\r\n\t\t\tcc.log('请求失败');\r\n\r\n\r\n\t\t},\r\n\r\n        //桌子信息\r\n        onSocketTableInfoEvent: function (tableStatus) {\r\n\t\t\tcc.log('桌子信息');\r\n\r\n            for (var i = 0, len = tableStatus.length; i < len; i++) {\r\n                this._gameTableDataManager.setTableStatusById(i,tableStatus[i])\r\n            }\r\n\r\n\t\t},\r\n\r\n        //桌子状态\r\n        onSocketSTabletatusEvent: function (tableStatus) {\r\n\t\t\tcc.log('桌子状态');\r\n\r\n            // for (var i = 0, len = tableStatus.length; i < len; i++) {\r\n            //     this._gameTableDataManager.setTableStatusById(i,tableStatus[i])\r\n            // }\r\n\r\n\t\t},\r\n\r\n        //场景规则\r\n        sendGameOption: function () {\r\n\r\n            if (this._gameTableDataManager.getSendOption()) {\r\n\r\n                cc.log(\"已发送过sendGameOption\");\r\n                return;\r\n\r\n            }\r\n\r\n            cc.log(\"发送sendGameOption\")\r\n            this._gameTableDataManager.setSendOption(true);\r\n\r\n\t\t\tthis.net.callServer('sendGameOption',0,101122049,this._kindVersion);\r\n\t\t},\r\n\r\n        //用户准备\r\n        sendUserReady: function () {\r\n\r\n            cc.log(\"发送准备\")\r\n\r\n\t\t\tthis.net.callServer('sendUserReady');\r\n\t\t},\r\n\r\n        \r\n\r\n        //游戏状态\r\n        onSocketSGameStatusEvent: function (GameStatus,AllowLookon) {\r\n\t\t\tcc.log('游戏状态');\r\n\r\n            this._gameTableDataManager.setGameStatus(GameStatus);\r\n\r\n            this._gameTableDataManager.setAllowLookon(AllowLookon);\r\n\r\n\t\t},\r\n\r\n        //场景消息\r\n        onEventGameScene: function () {\r\n\r\n            let gameProxy = this.facade.retrieveProxy('GameProxy');\r\n            gameProxy.onEventGameScene(this._gameTableDataManager.getGameStatus());\r\n\r\n\t\t},\r\n\r\n        \r\n        //通知玩家准备\r\n        onGetNoticeReady: function () {     \r\n            this.sendNotification(FishConstants.GAME_COMMAND,\"onGetNoticeReady\");\r\n\t\t},\r\n\r\n        \r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////\r\n\t\tuserSitFailed: function (data) {\r\n\t\t\t//UIManager.openTip(data)\r\n\t\t\tif (this.app.socket) {\r\n\t\t\t\t//KBEngine.destroyApp(this.app);\r\n\t\t\t}\r\n\t\t\t//cc.director.loadScene('GameLobbyScene');\r\n\t\t},\r\n\r\n\t\tsendGFInfo: function () {\r\n\t\t\tif (!this.app.socket) return\r\n\t\t\tthis.net.callServer('sendGFInfo');\r\n\t\t},\r\n\r\n\r\n\r\n\t\tleaveGame: function () {\r\n\t\t\tif (this.app) {\r\n\t\t\t\tif (this.app.socket) {\r\n\t\t\t\t\t//this.net.callServer('leaveGame');\r\n\t\t\t\t\t//KBEngine.destroyApp(this.app);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t},\r\n\t{\r\n\t\tNAME: 'GameTableProxy'\r\n\t});","\nlet GameView = require('GameView');\n\nlet constVal = require('GameProtocol').constVal;\n\nlet GameUIManager = require('gameUIManager')\n\nlet appFacade = require('FishFacade');\n\ncc.Class({\n    extends: GameView,\n\n    properties: {\n\n    },\n\n\n    onLoad () {\n\n        //cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);\n\n        this.GameUIManager = new GameUIManager(520);\n        let Notifications = [{\n            evtType: \"SUB_S_SEND_MAILBOX\",\n            callback: this.SetJackpotText\n        },\n        {\n            evtType: \"GAMEVIEW_UPDATE_CELL_SPRITE\",\n            callback: this.updateCellSprite\n        },\n        {\n            evtType: \"SetFreeEnterBackAni\",\n            callback: this.SetFreeEnterBackAni\n        },\n        ]\n        this.PushlistNotification(Notifications)\n\n        this.isOneFree = true\n\n\n        this._super();\n\n        // 百搭动画层\n        if (!this.animateWildNode) {\n            this.animateWildNode = new cc.Node(\"animateWildNode\")\n            this.node.addChild(this.animateWildNode, 251)\n        }\n\n        this.GameViewLayer_Node = this.node.getChildByName(\"GameViewLayer_Node\");\n        this.GameViewLayer_Node.removeFromParent()\n        this.bgNode.addChild(this.GameViewLayer_Node,10);\n\n        //奖池状态 true解锁  false上锁\n        this.JackpotState = [false,false,false,false];\n        //奖池\n        this.JackpotNum = [0,0,0,0];\n        //奖池框\n        this.JackpotKuang = [];\n        //奖池标题\n        this.Jackpottitle = [];\n        //奖池显示\n        this.JackpotTextList = [];\n\n        for (let i = 1; i <= 4; i++){\n            this.JackpotTextList.push(this.GameViewLayer_Node.getChildByName(\"JackpotText_\" + i));\n            this.JackpotTextList[i-1].getComponent(cc.Label).string = this.JackpotNum[i - 1];\n\n            this.JackpotKuang.push(this.GameViewLayer_Node.getChildByName(\"Image_\" + i)); \n\n            this.Jackpottitle.push(this.GameViewLayer_Node.getChildByName(\"title_\" + i)); \n\n            this.JackpotKuang[i-1].unlock_spin = this.JackpotKuang[i-1].getChildByName(\"jp_jiesuo\").getComponent(sp.Skeleton)\n            this.JackpotKuang[i-1].unlock_spin.node.setScale(0.9);\n            this.JackpotKuang[i-1].unlock_spin.node.setPosition(this.JackpotKuang[i-1].unlock_spin.node.x - 6, this.JackpotKuang[i-1].unlock_spin.node.y);\n\n            this.JackpotKuang[i-1].lock_spin = this.JackpotKuang[i-1].getChildByName(\"jp_shangsuo\").getComponent(sp.Skeleton)\n            this.JackpotKuang[i-1].lock_spin.node.setScale(0.9);\n            this.JackpotKuang[i-1].lock_spin.node.setPosition(this.JackpotKuang[i-1].lock_spin.node.x - 6, this.JackpotKuang[i-1].lock_spin.node.y);\n\n        }\n\n        this.Node_free = this.node.getChildByName(\"Node_free\")\n        this.Node_free.removeFromParent()\n        this.node.addChild(this.Node_free,201);\n        this.Node_free.active = false\n\n        this.Text_free_num = this.Node_free.getChildByName(\"Image_Free_Num_BG\").getChildByName(\"Text_free_num\").getComponent(cc.Label);\n        this.Text_free_total_num = this.Node_free.getChildByName(\"Image_Free_Num_BG\").getChildByName(\"Text_free_total_num\").getComponent(cc.Label);\n\n        this.Text_total_bet = this.Node_free.getChildByName(\"Image_Total_Bet_BG\").getChildByName(\"Text_total_bet\").getComponent(cc.Label);\n        appFacade.sendNotification(\"SHOW_TOTAL_BET\",true);\n\n        cc.resources.load(\"games/game520/prefab/BGAni\", cc.Prefab, function(err, prefab){\n            if(err){\n                cc.log(err);\n                return\n            };\n            let BGAniNode = cc.instantiate(prefab);\n            this.BGAni = BGAniNode.getComponent(sp.Skeleton)\n            this.bgNode.addChild(BGAniNode,1)\n            this.BGAni.setAnimation(0, \"animation\", true)\n            cc.resources.load(\"games/game520/prefab/FreeBGAni\", cc.Prefab, function(err, prefab){\n                if(err){\n                    cc.log(err);\n                    return\n                };\n                let FreeBGAniNode = cc.instantiate(prefab);\n                this.FreeBGAni = FreeBGAniNode.getComponent(sp.Skeleton)\n                this.bgNode.addChild(FreeBGAniNode,1)\n                this.FreeBGAni.setAnimation(0, \"animation\", true)\n                this.SetBGAni(1)\n            }.bind(this))\n        }.bind(this))\n\n        cc.resources.load(\"games/game520/prefab/EnterFreeAni\", cc.Prefab, function(err, prefab){\n            if(err){\n                cc.log(err);\n                return\n            };\n            let EnterFreeAniNode = cc.instantiate(prefab);\n            this.EnterFreeAni = EnterFreeAniNode.getComponent(sp.Skeleton)\n            this.node.addChild(EnterFreeAniNode,1000)\n            cc.resources.load(\"games/game520/prefab/BackFreeAni\", cc.Prefab, function(err, prefab){\n                if(err){\n                    cc.log(err);\n                    return\n                };\n                let BackFreeAniNode = cc.instantiate(prefab);\n                this.BackFreeAni = BackFreeAniNode.getComponent(sp.Skeleton)\n                this.node.addChild(BackFreeAniNode,1000)\n                this.SetFreeEnterBackAni()\n            }.bind(this))\n        }.bind(this))        \n\n\n        this.ShowJackpotKuang(this._gameCtrl.gameModel_520._UnlockRewardID)\n\n    },\n\n\n    start () {\n\n    },\n\n\n    //显示高亮框 解锁上锁\n    ShowJackpotKuang: function(num){\n        let This = this\n        //上锁\n        if (num === 0) {\n            for (let i = 0;i < 4;i++) {\n                \n                let oldState = This.JackpotState[i]\n                This.JackpotState[i] = false\n\n                if (oldState != This.JackpotState[i]) {\n                    //todo\n                    //This._gameCtrl:playEffect(\"jp_lock\")\n                    //上锁动画\n                    This.JackpotKuang[i].lock_spin.node.active = true\n                    This.JackpotKuang[i].lock_spin.setAnimation(0, \"animation\" + Number(i + 1), false)\n                    This.JackpotKuang[i].lock_spin.setCompleteListener(function(){\n                        This.JackpotKuang[arguments[0]].lock_spin.node.active = false\n                    }.bind(this,i))            \n                }\n\n                cc.resources.load(\"games/game520/font/theme_font_base_jp2\", cc.Font, function(err, res){\n              \n                    This.JackpotTextList[arguments[0]].getComponent(cc.Label).font = arguments[2]\n                }.bind(this,i))\n\n                cc.resources.load(\"games/game520/texture/base/theme276_jp1_frame_lock\", cc.SpriteFrame, function(err, res){\n                   \n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame = arguments[2]\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetTop = 24 \n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetBottom = 24\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetLeft = 26\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetRight = 26\n                }.bind(this,i))\n\n                cc.resources.load(\"games/game520/texture/base/title_lock_\" + Number(i + 1), cc.SpriteFrame, function(err, res){\n                \n                    This.Jackpottitle[arguments[0]].getComponent(cc.Sprite).spriteFrame = arguments[2]\n                }.bind(this,i))   \n\n            }  \n            return\n        }\n\n        for (let i = 0;i < 4;i++) {\n            //解锁\n            if (num >= i) {\n\n                let oldState = This.JackpotState[i]\n                This.JackpotState[i] = true\n\n                if (oldState != This.JackpotState[i]) {\n                    //todo\n                    //This._gameCtrl:playEffect(\"jp_unlock\")\n                    //解锁动画\n                    This.JackpotKuang[i].unlock_spin.node.active = true\n                    This.JackpotKuang[i].unlock_spin.setAnimation(0, \"animation\" + Number(i + 1), false)\n                    This.JackpotKuang[i].unlock_spin.setCompleteListener(function(){\n                    This.JackpotKuang[arguments[0]].unlock_spin.node.active = false\n                    }.bind(this,i))\n                }\n\n                cc.resources.load(\"games/game520/font/theme_font_base_jp1\", cc.Font, function(err, res){\n                \n                    This.JackpotTextList[arguments[0]].getComponent(cc.Label).font = arguments[2]\n                }.bind(this,i))\n\n                cc.resources.load(\"games/game520/texture/base/theme276_jp1_frame\", cc.SpriteFrame, function(err, res){\n                   \n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame = arguments[2]\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetTop = 24 \n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetBottom = 24\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetLeft = 26\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetRight = 26\n                }.bind(this,i))\n\n                cc.resources.load(\"games/game520/texture/base/title_\" + Number(i + 1), cc.SpriteFrame, function(err, res){\n                \n                    This.Jackpottitle[arguments[0]].getComponent(cc.Sprite).spriteFrame = arguments[2]\n                }.bind(this,i)) \n                \n            }\n            else{\n                //上锁\n                let oldState = This.JackpotState[i]\n                This.JackpotState[i] = false\n\n                if (oldState != This.JackpotState[i]) {\n                    //todo\n                    //This._gameCtrl:playEffect(\"jp_lock\")\n                    //上锁动画\n                    This.JackpotKuang[i].lock_spin.node.active = true\n                    This.JackpotKuang[i].lock_spin.setAnimation(0, \"animation\" + Number(i + 1), false)\n                    This.JackpotKuang[i].lock_spin.setCompleteListener(function(){\n                        This.JackpotKuang[arguments[0]].lock_spin.node.active = false\n                    }.bind(this,i))            \n                }\n\n                cc.resources.load(\"games/game520/font/theme_font_base_jp2\", cc.Font, function(err, res){                   \n                    This.JackpotTextList[arguments[0]].getComponent(cc.Label).font = arguments[2]\n                }.bind(this,i))\n\n                cc.resources.load(\"games/game520/texture/base/theme276_jp1_frame_lock\", cc.SpriteFrame, function(err, res){                  \n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame = arguments[2]\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetTop = 24 \n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetBottom = 24\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetLeft = 26\n                    This.JackpotKuang[arguments[0]].getComponent(cc.Sprite).spriteFrame.insetRight = 26\n                }.bind(this,i))\n\n                cc.resources.load(\"games/game520/texture/base/title_lock_\" + Number(i + 1), cc.SpriteFrame, function(err, res){                  \n                    This.Jackpottitle[arguments[0]].getComponent(cc.Sprite).spriteFrame = arguments[2]\n                }.bind(this,i)) \n\n            }        \n        }\n\n    },\n\n    //设置奖金显示\n    SetJackpotText: function (tab1){\n        if(this.JackpotTextList === null){\n            return\n        }\n        for (let i = 0; i < tab1.length; i++){\n            this.JackpotTextList[i].stopAllActions();\n\n            let oldNum = this.JackpotNum[i];\n            let newNum = tab1[i];\n            this.JackpotNum[i] = tab1[i]       \n            let JackpotTextListnode = this.JackpotTextList[i]\n            Help.scorllNumber(this.JackpotTextList[i], oldNum, newNum, 1, function(node,num1){\n                node.getComponent(cc.Label).string = Help.FormatScore2(num1);\n                return\n            }.bind(this))             \n                    \n\n        }\n    },\n\n    //设置背景动画\n    SetBGAni(id){\n        if (id == 1) {\n            this.BGAni.node.active = true\n            this.FreeBGAni.node.active = false    \n        }    \n        else if (id == 2) {\n            this.BGAni.node.active = false\n            this.FreeBGAni.node.active = true\n        }\n    },\n\n    //设置free进入退出动画\n    SetFreeEnterBackAni(id,callback){\n        if (id == 1) {\n            this.EnterFreeAni.node.active = true\n            this.BackFreeAni.node.active = false\n    \n            this.EnterFreeAni.setAnimation(0, \"animation\", false)\n\n            this.EnterFreeAni.setCompleteListener(function(){\n                this.EnterFreeAni.node.active = false\n                if (callback) {\n                    callback()\n                } \n            }.bind(this))\n        }\n        else if (id == 2) {\n            this.EnterFreeAni.node.active = false\n            this.BackFreeAni.node.active = true\n    \n            this.BackFreeAni.setAnimation(0, \"animation\", false)\n            this.BackFreeAni.setCompleteListener(function(){\n                this.BackFreeAni.node.active = false\n                if (callback) {\n                    callback()\n                } \n            }.bind(this))\n        }\n        else{\n            this.EnterFreeAni.node.active = false\n            this.BackFreeAni.node.active = false\n        }\n    },  \n    \n    //创建BN层\n    createBonusLayer(callback){\n        //todo\n        // this._gameCtrl:playEffect(\"pick_dialog\")\n        // this._gameCtrl:playMuscic(\"pick_bgm\")\n\n        cc.resources.load(\"games/game520/prefab/BonusLayer_Node\", cc.Prefab, function(err, prefab){\n            if(err){\n                cc.log(err);\n                return\n            };\n            this.addMaskLayer()\n            this.BonusLayer_Node = cc.instantiate(prefab);\n            this.rewardNode.addChild(this.BonusLayer_Node)\n            this.BonusLayer_Node.active = true\n            this.BonusLayer = this.BonusLayer_Node.getComponent(\"BonusLayer\")\n            this.BonusLayer.init(this,callback,true)\n        }.bind(this))  \n\n    },  \n    \n    //恢复BN层\n    RecoverBonusLayer(callback,BnSenceId,VerifyMailBox,bRewardGoodChoose,UnlockRewardID,RewardNum,SkullNum) {  \n\n        cc.resources.load(\"games/game520/prefab/BonusLayer_Node\", cc.Prefab, function(err, prefab){\n            if(err){\n                cc.log(err);\n                return\n            };\n\n            this.BonusLayer_Node = cc.instantiate(prefab);\n            this.rewardNode.addChild(this.BonusLayer_Node)\n            this.BonusLayer_Node.active = true\n            this.BonusLayer = this.BonusLayer_Node.getComponent(\"BonusLayer\")\n            this.BonusLayer.init(this,callback,true)\n            this.BonusLayer.RecoverScene(BnSenceId,VerifyMailBox,bRewardGoodChoose,UnlockRewardID,RewardNum,SkullNum) \n        }.bind(this))  \n      \n    },\n\n    \n    //移除BN层\n    RemoveBonusLayer(callback){\n        //todo\n        // if math.random(1,10) > 5 then\n        //             this._gameCtrl:playEffect(\"pick_tran_out1\")\n        //         else\n        //             this._gameCtrl:playEffect(\"pick_tran_out2\")       \n        //         end\n        \n        this.BonusLayer.bounsbackAni.node.active = true\n        this.BonusLayer.bounsbackAni.node.removeFromParent()\n        this.node.addChild(this.BonusLayer.bounsbackAni.node,501)\n\n        this.BonusLayer.bounsbackAni.setAnimation(0, \"animation\", false)\n        this.BonusLayer.bounsbackAni.setCompleteListener(function(event){\n            //todo\n            //this._gameCtrl:playMuscic(\"background\")  \n            setTimeout(function(){\n                this.BonusLayer.bounsbackAni.node.removeFromParent()\n                callback() \n            }.bind(this), 100)     \n                                                \n        }.bind(this))\n\n        setTimeout(function(){\n            this.BonusLayer.BNScene.active = false\n        }.bind(this), 1500)\n\n        \n\n        setTimeout(function(){\n            this.maskNode.removeAllChildren()\n            \n            this._gameCtrl.gameModel._totalWin = this._gameCtrl.gameModel._totalWin + this.BonusLayer.winScore\n\n            if (this.BonusLayer) { \n                this.BonusLayer.node.removeFromParent()\n            }\n\n            //重置BN场景数据\n            this._gameCtrl.gameModel_520.ResetBNGameData()\n        }.bind(this), 1000)   \n\n    \n\n    },\n\n    setFreeTotalRemain(num){\n        if (this.isOneFree) {\n            this.Text_free_total_num.string = \"/\" + num\n        }\n    },\n\n    setFreeRemain(num){\n        this.Text_free_num.string = num\n    },\n\n    createStartFreeLayer(num, _callback){\n        let callback = _callback\n        cc.resources.load(\"games/game520/prefab/GameFreeStart_Node\", cc.Prefab, function(err, prefab){\n            if(err){\n                cc.log(err);\n                return\n            };\n\n            var node = cc.instantiate(prefab);\n\n            if (node) {\n                \n                this.node.addChild(node,500)\n\n                let fntTimes = node.getChildByName(\"FNT_remain\").getComponent(cc.Label)\n\n                if (fntTimes) {\n                    fntTimes.string = num == null ? 0 : num\n                }\n                let btnStart = node.getChildByName(\"Button_start\").getComponent(cc.Button)\n\n                if (this.isOneFree) {\n\n                    //todo\n                    //this._gameCtrl.playEffect(\"free_dialog\")\n\n                    this.addMaskLayer()\n                    \n                    let Node_Ani = node.getChildByName(\"Node_Ani\")\n\n                    let skeleton = Node_Ani.getChildByName(\"276_fg\").getComponent(sp.Skeleton)\n                    skeleton.setAnimation(0, \"animation1_1\", false)\n\n                    skeleton.setCompleteListener(function(){\n                        skeleton.setAnimation(0, \"animation1_2\", true)\n                    })\n\n                    fntTimes.node.active = this.isOneFree\n                    \n                    btnStart.node.active = this.isOneFree\n                    \n                    if (btnStart) {\n                        btnStart.node.on('click', function(){\n\n                                //todo\n                                // if (math.random(1,10) > 5) {\n                                //     this._gameCtrl.playEffect(\"free_tran_in1\")\n                                // }\n                                // else{\n                                //     this._gameCtrl.playEffect(\"free_tran_in2\")       \n                                // }\n\n                                this.setFreeTotalRemain(this._gameCtrl.gameModel._freeSpin)\n                                skeleton.setAnimation(0, \"animation1_3\", false)\n                                btnStart.node.active = false\n                                fntTimes.node.active = false\n                                this.maskNode.removeAllChildren()\n                                skeleton.setCompleteListener(function(){\n                                    this.SetFreeEnterBackAni(1,function (){\n                                        if (callback) {\n                                            callback()\n                                            this.isOneFree = false\n                                        }\n                                        node.removeFromParent() \n                                    }.bind(this))\n\n                                    this.scheduleOnce(function(){\n                                        // // this._gameCtrl:playMuscic(\"free_bgm\")\n                                        this.SetBGAni(2)\n                                        appFacade.sendNotification(\"SHOW_TOTAL_BET\",false);\n                                        this.Node_free.active = true    \n                                        //总下注\n                                        this.Text_total_bet.string = Help.FormatScore(Help.checknumber(this._gameCtrl.gameModel.getTotalBet()))\n                                        this.setFreeRemain(this._gameCtrl.gameModel._freeSpin)\n                                    }.bind(this), 1)\n\n                                }.bind(this))\n\n                        }.bind(this), this);\n\n                    }\n                }\n                else{\n                    fntTimes.node.active = this.isOneFree\n                    \n                    btnStart.node.active = this.isOneFree  \n                    node.active = false       \n                }\n                \n                setTimeout(function(){\n                    if (callback && !this.isOneFree) {\n                        callback()\n                        node.removeFromParent()\n                    }\n                }.bind(this), 1500)\n\n            }\n            \n        }.bind(this));\n\n    },\n\n    createFreeRewardLayer(num, callback){\n    \n        this.addMaskLayer()\n        cc.resources.load(\"games/game520/prefab/GameFreeReward_Node\", cc.Prefab, function(err, prefab){\n            if(err){\n                cc.log(err);\n                return\n            };\n\n            var node = cc.instantiate(prefab);\n\n            if (node) {\n                this.node.addChild(node,500)\n                let Node_Ani = node.getChildByName(\"Node_1\")\n                let skeleton = Node_Ani.getChildByName(\"276_fg\").getComponent(sp.Skeleton)\n                skeleton.setAnimation(0, \"animation3_1\", false)\n                skeleton.setCompleteListener(function(){\n                    skeleton.setAnimation(0, \"animation3_2\", true)\n                })\n\n                let fntTimes = node.getChildByName(\"FNT_totalwin\").getComponent(cc.Label)\n                                \n                if (fntTimes) {\n                    let formatScore = function(num) {\n                        const parts = num.toString().split(\".\");\n                        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); // 添加千位分隔符\n                        return parts.join(\"/\");\n                    }\n\n                    let s = formatScore(Help.FormatScore(num))\n\n                    fntTimes.string = s\n                }\n                \n                let btnStart = node.getChildByName(\"Button_recv\").getComponent(cc.Button)\n\n                if (btnStart) {\n                    btnStart.node.on('click', function(){\n                        //todo\n                        // if (Help.getRandomInt(1,10) > 5) {\n                        //     this._gameCtrl:playEffect(\"free_tran_out1\")\n                        // }\n                        // else{\n                        //     this._gameCtrl:playEffect(\"free_tran_out2\")       \n                        // }\n\n                        skeleton.setAnimation(0, \"animation3_3\", false)\n                        btnStart.node.active = false\n                        fntTimes.node.active = false\n                        this.maskNode.removeAllChildren()\n\n                        skeleton.setCompleteListener(function(){\n                            this.SetFreeEnterBackAni(2,function (args){\n                                if (callback) {\n                                    callback()\n                                    this.isOneFree = true\n                                }\n                                node.removeFromParent()\n                            }.bind(this))\n\n                            setTimeout(function(){\n                                //todo\n                                // this._gameCtrl:playMuscic(\"background\")   \n                                this._gameCtrl.recoveryFreeScene()\n                                this.SetBGAni(1)\n                                appFacade.sendNotification(\"SHOW_TOTAL_BET\",true);\n                                this.Node_free.active = false  \n                            }.bind(this), 1500)\n\n                        }.bind(this))\n\n                    }.bind(this), this);\n                    \n                }\n    \n            }\n\n        }.bind(this));\n\n    },    \n\n    // 更新cell符号\n    updateCellSprite(theCellNode, key, col){\n        \n        let theCellFile = this._gameCtrl.gameModel._symbolPic[key]\n        let theCellSprite = theCellNode.sprite\n        theCellSprite.active = true\n        // cc.resources.load(theCellFile,cc.SpriteFrame,function(err, SpriteFrame){\n        //     theCellSprite.getComponent(cc.Sprite).spriteFrame = SpriteFrame;\n        // });\n        theCellSprite.getComponent(cc.Sprite).spriteFrame = this.getRes(theCellFile,cc.SpriteFrame)\n        theCellNode.key = key\n\n        if (theCellNode.spine) {\n            theCellNode.spine.removeFromParent()\n            theCellNode.spine = null\n        }\n    },\n\n    // 播放中奖连线动画\n    drawLinesThemeAnimate(_lines, _layer, _rets){\n        let lines = _lines\n        let layer = _layer\n        let rets = _rets\n        let payLines = this._gameCtrl.gameModel.getPayLines()\n        let itemList = rets[\"item_list\"]\n\n        let framedraw = new cc.Node(\"framedraw\")      // 底框动画\n        let symboldraw = new cc.Node(\"symboldraw\")    // 符号动画\n        let linedraw = new cc.Node(\"linedraw\")        // 线动画\n        this.animateNode.addChild(linedraw, 30)\n        this.animateNode.addChild(symboldraw, 20)\n        this.animateNode.addChild(framedraw, 10)\n\n        // 单条线\n        let  drawEachLine = function(winLine){\n            let lineIndex = winLine[0]\n            let cols = payLines[lineIndex]\n            let begCol = 0                // 开始的列\n            let endCol = winLine[1]       // 结束的列\n            let symbol = winLine[2]       // 中奖 symbol\n            \n            for (let col = begCol; col < endCol;col++) {\n                let row = cols[col] + 1\n                let key = itemList[col][row]\n                if (symbol === 1) {\n                    if (symbol === key) {\n                        this.drawPayLineItem(col, row, itemList, symboldraw, framedraw)\n                    }\n                }\n                else{\n                    this.drawPayLineItem(col, row, itemList, symboldraw, framedraw)\n                }\n            }\n            this.playLineEffect(winLine, linedraw)\n        }.bind(this)\n\n        // 所有中奖线\n        let drawAllWinPos = function(winPos){\n\n            for (let [_,pos] of Object.entries(winPos)){\n                this.drawPayLineItem(pos[0], pos[1] + 1, itemList, symboldraw, framedraw)\n            }\n\n            for (let [index,theLineData] of Object.entries(lines)){\n                this.playLineEffect(theLineData, linedraw)\n            }\n        }.bind(this)\n\n        // 清理上条展示的动画并显示静态符号\n        let clearStatus = function(){\n            framedraw.removeAllChildren()\n            symboldraw.removeAllChildren()\n            linedraw.removeAllChildren()\n            this.getCurSpinLayer().setCellStatus(true)\n\n            //隐藏静态特殊符号\n            for (let [col,colItems] of Object.entries(itemList)){\n                for (let [row,item] of Object.entries(colItems)){\n                    if (itemList[col][row] === 11 || itemList[col][row] === 1) {\n                        let cell = this.spinLayer.getCell(col, row)\n                        cell.active = this._gameCtrl.gameModel_520._isBreakLine                   \n                    }\n                }\n            }\n        }.bind(this)\n\n        if (rets && rets[\"win_pos\"] && rets[\"win_pos\"].length > 0) {\n            let delay = 0\n            if (rets[\"win_lines\"].length > 1) {\n                framedraw.runAction(cc.sequence(cc.delayTime(delay), cc.callFunc(function(){\n                    let asList = []\n    \n                    // 所有中奖线\n                    let a1 = cc.callFunc(function(){\n                        clearStatus()\n                        drawAllWinPos(rets[\"win_pos\"])\n                    }.bind(this))\n                    let a2 = cc.delayTime(3)\n    \n                    asList.push(a1)\n                    asList.push(a2)\n    \n                    // 每条线播放\n                    for (let [index,theLineData] of Object.entries(lines)){\n                        let t1 = cc.callFunc(function(){\n                            clearStatus()\n                            drawEachLine(theLineData)\n                        }.bind(this))\n                        let t2 = cc.delayTime(3)\n    \n                        asList.push(t1)\n                        asList.push(t2)\n                    }\n    \n                    framedraw.runAction(cc.repeatForever(cc.sequence(asList)))\n    \n                }.bind(this))))\n            }\n            else{\n                // 每条线播放\n                for (let [index,theLineData] of Object.entries(lines)){\n                   clearStatus()\n                   drawEachLine(theLineData)\n                }\n            }\n            \n        }\n    },\n\n    // 线动画\n    playLineEffect(winLine, parent){\n        \n    },\n\n    //显示黏住的百搭\n    drawWildStickItems(itemList){\n        for (let [col,colItems] of Object.entries(itemList)){\n            for (let [row,item] of Object.entries(colItems)){\n                let itemNode = new cc.Node()\n                let frameNode = new cc.Node()\n                this.animateWildNode.addChild(itemNode, 21)\n                this.animateWildNode.addChild(frameNode, 22)\n                \n                this.drawItemEffect(item, Number(col),Number(row) + 1, itemNode)\n            }\n        }\n    },\n\n    //隐藏百搭下面的item\n    hideWildStickDownItems(itemList){\n        for (let [col,colItems] of Object.entries(itemList)){\n            for (let [row,item] of Object.entries(colItems)){\n                cc.log(\"col:\"+col + \"       row\" + row)\n                let cell = this.spinLayer.getCell(col, row)\n                cell.active = false\n                cc.resources.load(this._gameCtrl.gameModel._symbolPic[0],cc.SpriteFrame,function(err, SpriteFrame){\n                    cell.sprite.getComponent(cc.Sprite).spriteFrame = SpriteFrame;\n                });           \n            }\n        }\n    },\n\n\n    //符号动画\n    drawItemEffect(item, col, row, parent){\n        \n        let pos = this.spinLayer.getCellPos(col, row)\n\n        Help.LoadSpinePrefab(parent,\"games/game520/prefab/symbols\" + item , 0,\"win\",true,function(node,spine) {\n            spine.setPosition(pos);\n        }.bind(this));\n        \n    },\n\n    //框动画\n    playFrameEffect(col, row, parent){\n\n        let pos = this.spinLayer.getCellPos(col, row)\n        Help.LoadSpinePrefab(parent,\"games/game520/prefab/spine_frame\",0,\"animation\",true,function(node,spine) {\n            spine.setPosition(pos);\n        }.bind(this));\n\n    },\n\n\n    // 重写落地特殊符号动画\n    playSpecialSymbolStopAni(col, symbols,canBn){\n        let symboldraw = new cc.Node()     // 特殊符号动画节点\n\n        this.animateNode.addChild(symboldraw, 20)\n\n        for (let [key,list] of Object.entries(symbols)){\n            for (let _pos of list){\n                \n                let file = \"games/game520/prefab/symbols\" + key\n                let cell = this.spinLayer.getCell(_pos[0], _pos[1])\n                let pos = this.spinLayer.getCellPos(_pos[0], Number(_pos[1]) + 1)\n                \n                //触发BN\n                if (canBn) {\n                    \n                    if (key == 11) {\n                        //todo\n                        //this._gameCtrl.playEffect(\"b_landing1\")\n\n                        Help.LoadSpinePrefab(symboldraw,file,0,\"BN\",true,function(node,spine) {\n                            spine.setPosition(pos);\n                            spine.setScale(3.5)\n                        }.bind(this));\n\n                    }\n                    else{\n                        //todo\n                        //this._gameCtrl.playEffect(\"sc_landing\" + col)\n\n                        Help.LoadSpinePrefab(symboldraw,file,0,\"animation\",false,function(node,spine) {\n                            spine.setPosition(pos);\n                            spine.getComponent(sp.Skeleton).setCompleteListener(function(){\n                                if (this._gameCtrl.gameModel_520._CanFree) {     \n                                    spine.getComponent(sp.Skeleton).setAnimation(0, \"win\", true)\n                                }\n                                else{\n                                    spine.getComponent(sp.Skeleton).setAnimation(0, \"idle\", true)\n                                } \n                            }.bind(this))\n                        }.bind(this));\n                       \n                    }\n\n                }\n                else{\n                        \n                    if (key == 11) {\n                        //todo\n                        //this._gameCtrl.playEffect(\"sc_landing\" + col)\n\n                        Help.LoadSpinePrefab(symboldraw,file,0,\"win\",false,function(node,spine) {\n                            spine.setPosition(pos);\n                            spine.setScale(3.5)\n                            spine.getComponent(sp.Skeleton).setCompleteListener(function(){\n                                spine.getComponent(sp.Skeleton).setAnimation(0, \"idle\", true)\n                            }.bind(this))\n                        }.bind(this));\n\n                    }\n                    else{\n                        //todo\n                        //this._gameCtrl.playEffect(\"sc_landing\" + col)\n                        Help.LoadSpinePrefab(symboldraw,file,0,\"animation\",false,function(node,spine) {\n\n                            spine.setPosition(pos);\n                            let skeleton = spine.getComponent(sp.Skeleton)\n                            skeleton.setCompleteListener(function(){\n                                if (this._gameCtrl.gameModel_520._CanFree) {  \n                                    spine.getComponent(sp.Skeleton).setAnimation(0, \"win\", true)\n                                }\n                                else{\n                                    spine.getComponent(sp.Skeleton).setAnimation(0, \"idle\", true)\n                                }\n                            }.bind(this))\n\n                        }.bind(this));\n\n                    }\n      \n                }   \n                    \n\n                cell.active = false \n            }\n        }\n\n    },\n\n    //清理黏住的百搭\n    cleanWildStickItems(){\n        if (this.animateWildNode) {\n            this.animateWildNode.removeAllChildren()\n        }\n    },\n\n    // update (dt) {},\n\n    onDestroy: function () {\n\t\tthis._super();\n\t},\n});","let appFacade = require('FishFacade');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n\r\n    onLoad () {\r\n\r\n        let frameSize = cc.view.getFrameSize()\r\n\r\n        cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE)\r\n\r\n        if (frameSize.height > frameSize.width){\r\n            cc.view.setFrameSize(frameSize.height, frameSize.width)\r\n        }\r\n\r\n       // this.canvas.designResolution = cc.size(1334, 750)\r\n\r\n\r\n\r\n        // cc.view.setDesignResolutionSize(1334, 750, cc.ResolutionPolicy.SHOW_ALL);\r\n\r\n        // cc.view.on(cc.game.EVENT_GAME_SIZE_CHANGED, function (event) {\r\n        //     var width = event.width;\r\n        //     var height = event.height;\r\n        //     var designWidth = 1334;\r\n        //     var designHeight = 750;\r\n        //     var scaleWidth = width / designWidth;\r\n        //     var scaleHeight = height / designHeight;\r\n        //     var scale = Math.min(scaleWidth, scaleHeight);\r\n        //     var gameSize = new cc.Size(designWidth * scale, designHeight * scale);\r\n        //     cc.view.resizeCanvas(gameSize, cc.ResolutionPolicy.NO_BORDER);\r\n        // });\r\n\r\n        this.name = \"GameView\"\r\n        this.externalThis = this;\r\n        let ZOrder = {\r\n            [\"bg\"]      : 100,          // 背景\r\n            [\"board\"]   : 150,          // 滚盘\r\n            [\"ctrl\"]    : 200,          // 控制层\r\n            [\"animate\"] : 250,          // 动画\r\n            [\"mask\"]    : 300,          // 遮罩层\r\n            [\"reward\"]  : 400           // 大奖动画\r\n        }\r\n        this._gameCtrl = appFacade.retrieveProxy('GameProxy')\r\n    \r\n        // 游戏滚动层\r\n        this.shakyNode = new cc.Node('shakyNode');\r\n        this.node.addChild(this.shakyNode)\r\n    \r\n        // 背景层\r\n        if (!this.bgNode) {\r\n            this.bgNode = new cc.Node('bgNode');\r\n            this.node.addChild(this.bgNode, ZOrder.bg)\r\n        }\r\n\r\n        // 棋盘层\r\n        if (!this.boardNode) {\r\n            this.boardNode = new cc.Node('boardNode');\r\n            this.node.addChild(this.boardNode, ZOrder.board)\r\n        }\r\n\r\n        // 控制层\r\n        if (!this.ctrlNode) {\r\n            this.ctrlNode = new cc.Node('ctrlNode');\r\n            this.node.addChild(this.ctrlNode, ZOrder.ctrl)\r\n        }\r\n    \r\n        // 屏蔽层\r\n        if (!this.maskNode) {\r\n            this.maskNode = new cc.Node('maskNode');\r\n            this.node.addChild(this.maskNode, ZOrder.mask)\r\n        }\r\n    \r\n        // 动画层\r\n        if (!this.animateNode) {\r\n            this.animateNode = new cc.Node('animateNode');\r\n            this.node.addChild(this.animateNode, ZOrder.animate)\r\n        }\r\n    \r\n        // 奖励显示\r\n        if (!this.rewardNode) {\r\n            this.rewardNode = new cc.Node('rewardNode');\r\n            this.node.addChild(this.rewardNode, ZOrder.reward)\r\n        }\r\n\r\n        this.GameLayer_Node = this.node.getChildByName(\"GameLayer_Node\");\r\n        this.GameLayer_Node.removeFromParent()\r\n        this.ctrlNode.addChild(this.GameLayer_Node);\r\n\r\n        this.resList\r\n        cc.resources.loadDir(\"games/game520/texture/symbol\", function(err, assets){\r\n \r\n            let list = cc.resources.getDirWithPath(\"games/game520/texture/symbol\")\r\n            let uuidDict = {}\r\n         \r\n            for(let item of list) {\r\n                uuidDict[item.uuid] = item\r\n            }\r\n         \r\n            let resList = {}\r\n            \r\n            for(let asset of assets) {\r\n                let path = uuidDict[asset[\"_uuid\"]].path\r\n                if(!resList[path]) {\r\n                    resList[path] = []\r\n                }\r\n                resList[path].push(asset)\r\n            }\r\n            this.resList = resList\r\n\r\n            this.boardNodeList = this.initBoardNodes();\r\n\r\n            this.IsinitSpinLayer = false\r\n    \r\n            this.initSpinLayer();\r\n         \r\n        }.bind(this))\r\n        \r\n\r\n        let Notifications = [{\r\n            evtType: \"STOP_DRAW_ANIMATE\",\r\n            callback: this.stopDrawAnimate\r\n        },\r\n        {\r\n            evtType: \"GAMEVIEW_UPDATE_CELL_SPRITE\",\r\n            callback: this.updateCellSprite\r\n        },\r\n        {\r\n            evtType: \"DRAW_LINES_THEME_ANIMATE\",\r\n            callback: this.drawLinesThemeAnimate\r\n        },\r\n        \r\n        ];\r\n        this.PushlistNotification(Notifications)\r\n        \r\n        cc.log(\"进入游戏界面\");\r\n        this.GameUIManager.playAudio(\"bg\",true)\r\n        appFacade.registerMediator(this);\r\n        if (!this._gameCtrl._gameView){\r\n            this._gameCtrl._gameView = this\r\n        }\r\n\r\n        // 设置投注\r\n\t\tappFacade.sendNotification(\"SET_TOTAL_BET\",this._gameCtrl.gameModel.getTotalBet());\r\n    },\r\n\r\n    getRes(path, type) {\r\n        let list = this.resList[path]\r\n     \r\n        if(!list) {\r\n            return null\r\n        }\r\n     \r\n        for(let item of list) {\r\n            if(item instanceof(type)) {\r\n                return item\r\n            }\r\n        }\r\n     \r\n        return null\r\n    },\r\n\r\n    PushlistNotification: function (Notifications) {\r\n        if (!this.listNotification){\r\n            this.listNotification = []\r\n        }\r\n        for(let i = 0;i < Notifications.length;i++){\r\n            this.listNotification.push(Notifications[i]);\r\n        }\r\n\r\n    },\r\n\r\n    listNotificationInterests: function () {\r\n\r\n        return this.listNotification\r\n\r\n    },\r\n    \r\n    \r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    //创建滚动板裁剪区域\r\n    initBoardNodes:function ()  {\r\n        let This = this;\r\n        let boardConfigList = this._gameCtrl.gameModel.getBoardConfig();\r\n        let boardNodeList = {}\r\n        for (let [boardIndex,theConfig] of Object.entries(boardConfigList)){\r\n            let theBoardNode = new cc.Node(\"theBoardNode\");\r\n            This.boardNode.addChild(theBoardNode)\r\n            let reelNodes = {}\r\n            let reelNode = new cc.Node(\"reelNode\");\r\n            reelNode.setPosition(-theConfig[\"reelConfig\"][0][\"base_pos\"].x,-theConfig[\"reelConfig\"][0][\"base_pos\"].y)\r\n            reelNode.zIndex = 100;\r\n            let MaskNode = new cc.Node(\"MaskNode\");\r\n            MaskNode.addComponent(cc.Mask);\r\n            MaskNode.setAnchorPoint(0, 0);\r\n            MaskNode.setPosition(theConfig[\"reelConfig\"][0][\"base_pos\"]);\r\n            for (let [reelIndex,config] of Object.entries(theConfig[\"reelConfig\"])){\r\n                let vex =[\r\n                        // 左下\r\n                        config[\"base_pos\"],\r\n                        // 右下\r\n                        config[\"base_pos\"].add(cc.v2(config[\"cellWidth\"])),\r\n                        // 右上\r\n                        config[\"base_pos\"].add(cc.v2(config[\"cellWidth\"],config[\"cellHeight\"] * config[\"symbolCount\"])),\r\n                        // 左上\r\n                        config[\"base_pos\"].add(cc.v2(0, config[\"cellHeight\"] * config[\"symbolCount\"]))\r\n                ];\r\n                if (theConfig[\"allow_over_range\"]) {\r\n                    vex[1] = vex[1].add(cc.v2(-config[\"cellWidth\"]));\r\n                    vex[4] = vex[4].add(cc.v2(-config[\"cellWidth\"]));\r\n                    vex[2] = vex[2].add(cc.v2(-config[\"cellWidth\"]));\r\n                    vex[3] = vex[3].add(cc.v2(-config[\"cellWidth\"]));\r\n                };\r\n\r\n                MaskNode.setContentSize(MaskNode.width + config[\"cellWidth\"], config[\"cellHeight\"] * config[\"symbolCount\"]);\r\n                \r\n                reelNodes[reelIndex] = reelNode;\r\n            };\r\n\r\n            MaskNode.addChild(reelNode)\r\n\r\n            ///////////////////\r\n            // const ctx = clipAreaNode.getChildByName(\"MaskNode_0\").addComponent(cc.Graphics);\r\n            // ctx.lineWidth = 5;\r\n            // ctx.strokeColor = cc.Color.RED\r\n            // ctx.rect(0, 0, clipAreaNode.getChildByName(\"MaskNode_0\").width, clipAreaNode.getChildByName(\"MaskNode_0\").height);\r\n            // ctx.stroke();\r\n            ////////////////            \r\n\r\n            theBoardNode.addChild(MaskNode);\r\n            \r\n            theBoardNode.reelNodes = reelNodes\r\n            theBoardNode.reelConfig = theConfig[\"reelConfig\"]\r\n            theBoardNode.boardIndex = boardIndex\r\n            theBoardNode.getReelNode = function(index){\r\n                return this.reelNodes[index]\r\n            };\r\n\r\n            boardNodeList[boardIndex] = theBoardNode;\r\n        };\r\n\r\n        return boardNodeList;\r\n    },\r\n\r\n    initSpinLayer: function () {\r\n        this._spinLayerList = []\r\n\t\tfor (let [index,boardNode] of Object.entries(this.boardNodeList)){\r\n             let node = new cc.Node(\"GameSpinLayer\");\r\n             this.shakyNode.addChild(node, -1)\r\n             let layer = node.addComponent(\"GameSpinLayer\");\r\n             layer.init(boardNode.reelConfig, boardNode,this)\r\n             layer.DeActive()\r\n              \r\n             this._spinLayerList.push(layer);\r\n        }\r\n        this.spinLayer = this._spinLayerList[0]\r\n        this.spinLayer.Active()\r\n        this.IsinitSpinLayer = true\r\n\t},\r\n\r\n    getCurSpinLayer: function (){\r\n        return this.spinLayer\r\n    },\r\n\r\n\r\n    // 创建cell符号\r\n    createCellSprite:function(col, row){\r\n        \r\n        let key = this._gameCtrl.gameModel.getNextSprite(col, row);\r\n\r\n        //首列wile过滤\r\n        if (col==0 && key==0) {\r\n            key=1\r\n        }\r\n    \r\n        let theCellNode = new cc.Node(\"col:\" + col + \"   \" + \"row:\" + row)\r\n        let theCellFile = this._gameCtrl.gameModel._symbolPic[key]\r\n    \r\n        let theCellSprite = new cc.Node()\r\n        theCellSprite.addComponent(cc.Sprite);\r\n        \r\n        // cc.resources.load(theCellFile,cc.SpriteFrame,function(err, SpriteFrame){\r\n        //     theCellSprite.getComponent(cc.Sprite).spriteFrame = SpriteFrame;\r\n        // });\r\n       //theCellSprite.getComponent(cc.Sprite).spriteFrame = cc.resources.load(theCellFile)\r\n        //theCellSprite.getComponent(cc.Sprite).spriteFrame = cc.resources.get(theCellFile,cc.SpriteFrame)\r\n        theCellSprite.getComponent(cc.Sprite).spriteFrame = this.getRes(theCellFile,cc.SpriteFrame)\r\n        \r\n        ////////\r\n        // let labnode = new cc.Node()\r\n        // labnode.color = cc.Color.RED\r\n        // labnode.setScale(0.7)\r\n        // let lab = labnode.addComponent(cc.Label)\r\n        // lab.string = \"col:\" + col + \"   \" + \"row:\" + row\r\n        // theCellSprite.addChild(labnode)\r\n        ///////////\r\n\r\n        theCellNode.addChild(theCellSprite)\r\n        theCellNode.key = key\r\n        theCellNode.sprite = theCellSprite\r\n        theCellNode.spine = null\r\n    \r\n        return theCellNode\r\n    },\r\n\r\n    // 更新cell符号\r\n    updateCellSprite(theCellNode, key, col){\r\n        //首列wile过滤\r\n        if (col==0 && key==0) {\r\n            key = 1\r\n        }\r\n\r\n        \r\n        let theCellFile = this._gameCtrl.gameModel._symbolPic[key]\r\n        let theCellSprite = theCellNode.sprite\r\n\r\n        theCellSprite.active = true\r\n        cc.resources.load(theCellFile,cc.SpriteFrame,function(err, SpriteFrame){\r\n            theCellSprite.getComponent(cc.Sprite).spriteFrame = SpriteFrame;\r\n        });\r\n\r\n        theCellNode.key = key\r\n\r\n        if (theCellNode.spine) {\r\n            theCellNode.spine.removeFromParent()\r\n            theCellNode.spine = null\r\n        }\r\n    },\r\n\r\n    // 播放中奖连线动画\r\n    drawLinesThemeAnimate(_lines, _layer, _rets){\r\n        let lines = _lines\r\n        let layer = _layer\r\n        let rets = _rets\r\n        let payLines = this._gameCtrl.gameModel.getPayLines()\r\n        let itemList = rets[\"item_list\"]\r\n\r\n        let framedraw = new cc.Node(\"framedraw\")      // 底框动画\r\n        let symboldraw = new cc.Node(\"symboldraw\")    // 符号动画\r\n        let linedraw = new cc.Node(\"linedraw\")        // 线动画\r\n        this.animateNode.addChild(linedraw, 30)\r\n        this.animateNode.addChild(symboldraw, 20)\r\n        this.animateNode.addChild(framedraw, 10)\r\n        this.addMaskLayer()\r\n\r\n        // 单条线\r\n        let  drawEachLine = function(winLine){\r\n            let lineIndex = winLine[0]\r\n            let cols = payLines[lineIndex]\r\n            let begCol = 1                // 开始的列\r\n            let endCol = winLine[1]       // 结束的列\r\n            let symbol = winLine[2]       // 中奖 symbol\r\n            \r\n            for (let col = begCol; col < endCol;col++) {\r\n                let row = cols[col]\r\n                let key = itemList[col][row]\r\n                if (symbol==1) {\r\n                    if (symbol==key) {\r\n                        this.drawPayLineItem(col, row, itemList, symboldraw, framedraw)\r\n                    }\r\n                }\r\n                else{\r\n                    this.drawPayLineItem(col, row, itemList, symboldraw, framedraw)\r\n                }\r\n            }\r\n            this.playLineEffect(winLine, linedraw)\r\n        }.bind(this)\r\n\r\n        // 所有中奖线\r\n        let drawAllWinPos = function(winPos){\r\n\r\n            for (let [_,pos] of Object.entries(winPos)){\r\n                this.drawPayLineItem(pos[0], pos[1] + 1, itemList, symboldraw, framedraw)\r\n            }\r\n\r\n            for (let [index,theLineData] of Object.entries(lines)){\r\n                this.playLineEffect(theLineData, linedraw)\r\n            }\r\n        }.bind(this)\r\n\r\n        // 清理上条展示的动画并显示静态符号\r\n        let clearStatus = function(){\r\n            framedraw.removeAllChildren()\r\n            symboldraw.removeAllChildren()\r\n            linedraw.removeAllChildren()\r\n            this.getCurSpinLayer().setCellStatus(true)\r\n        }.bind(this)\r\n\r\n        if (rets && rets[\"win_pos\"] && rets[\"win_pos\"].length > 0) {\r\n            let delay = 0\r\n            framedraw.runAction(cc.sequence(cc.delayTime(delay), cc.callFunc(function(){\r\n                let asList = []\r\n\r\n                // 所有中奖线\r\n                let a1 = cc.callFunc(function(){\r\n                    clearStatus()\r\n                    drawAllWinPos(rets[\"win_pos\"])\r\n                }.bind(this))\r\n                let a2 = cc.delayTime(2)\r\n\r\n                asList.push(a1)\r\n                asList.push(a2)\r\n\r\n                // 每条线播放\r\n                for (let [index,theLineData] of Object.entries(lines)){\r\n                    let t1 = cc.callFunc(function(){\r\n                        clearStatus()\r\n                        drawEachLine(theLineData)\r\n                    }.bind(this))\r\n                    let t2 = cc.delayTime(2)\r\n\r\n                    asList.push(t1)\r\n                    asList.push(t2)\r\n                }\r\n\r\n                framedraw.runAction(cc.repeatForever(cc.sequence(asList)))\r\n\r\n            }.bind(this))))\r\n        }\r\n    },\r\n\r\n    // 绘制符号动画和框动画\r\n    drawPayLineItem(col, row, itemList, symbolParent, frameParent){\r\n        let key = itemList[col][row - 1]\r\n        if (key == null){\r\n            a = 1\r\n        }\r\n        this.playFrameEffect(col, row, frameParent)\r\n        this.playItemEffect(key, col, row, symbolParent)\r\n    },\r\n\r\n    // 动画框\r\n    playFrameEffect(col, row, parent){\r\n        //todo\r\n        // let file = self._gameCtrl._gameConfig[\"csb\"][\"frame\"]\r\n        // if (!file) {\r\n        //     return\r\n        // }\r\n\r\n        // let pos = self:getCurSpinLayer():getCellPos(col, row)\r\n\r\n        // if cc.FileUtils:getInstance():isFileExist(file) then\r\n        //     let node = cc.CSLoader:createNode(file)\r\n        //     let ani = cc.CSLoader:createTimeline(file)\r\n        //     ani:gotoFrameAndPlay(0, true)\r\n        //     node:runAction(ani)\r\n        //     node:setPosition(pos)\r\n        //     parent:addChild(node)\r\n        // end\r\n    },\r\n\r\n    // 符号动画\r\n    playItemEffect(item, col, row, parent){\r\n\r\n        let cell = this.spinLayer.getCell(col, row - 1)\r\n        let pos = this.spinLayer.getCellPos(col, row)\r\n\r\n        Help.LoadSpinePrefab(parent,\"games/game520/prefab/symbols\" + item,0,\"win\",true,function(node,spine) {\r\n            spine.setPosition(pos);\r\n        }.bind(this));\r\n\r\n        cell.active = false\r\n    },\r\n\r\n    // 线动画\r\n    playLineEffect(winLine, parent){\r\n        //todo\r\n    },\r\n\r\n    // 落地特殊符号动画\r\n    playSpecialSymbolStopAni(col, symbols){\r\n        //todo\r\n        // for key, list in pairs(symbols) do\r\n        //     for _, pos in pairs(list) do\r\n        //         let file = this._gameCtrl._gameConfig[\"spine\"][key]\r\n        //         let cell = this.spinLayer:getCell(pos[1], pos[2])\r\n\r\n        //         let fileUtils = cc.FileUtils:getInstance()\r\n        //         if fileUtils:isFileExist(file .. \".json\") and fileUtils:isFileExist(file .. \".atlas\") then\r\n        //             let skeleton = sp.SkeletonAnimation:create(file .. \".json\", file .. \".atlas\")\r\n        //             skeleton:setAnimation(0, \"win\", false)\r\n        //             skeleton:registerSpineEventHandler(function(event)\r\n        //                 skeleton:setAnimation(0, \"idle\", true)\r\n        //             end, sp.EventType.ANIMATION_COMPLETE)\r\n        //             cell:addChild(skeleton)\r\n        //             cell.spine = skeleton\r\n        //             cell.sprite:setVisible(false)\r\n        //         end\r\n        //     end\r\n        // end\r\n    },\r\n\r\n    addMaskLayer(){\r\n        let MaskLayer = new cc.Node(\"MaskLayer\");\r\n        MaskLayer.addComponent(cc.BlockInputEvents);\r\n        this.maskNode.addChild(MaskLayer)\r\n        MaskLayer.setPosition(1334/2,750/2)\r\n        MaskLayer.addComponent(cc.Sprite);\r\n        MaskLayer.getComponent(cc.Sprite).sizeMode = cc.Sprite.SizeMode.CUSTOM\r\n        cc.resources.load(\"games/gamebase/texture/game/pureColor\",cc.SpriteFrame,function(err, SpriteFrame){\r\n            MaskLayer.getComponent(cc.Sprite).spriteFrame = SpriteFrame;\r\n        });\r\n        MaskLayer.setContentSize(1334, 750);\r\n        MaskLayer.color = new cc.Color(0, 0, 0)\r\n        MaskLayer.opacity = 150\r\n        \r\n        \r\n    },\r\n\r\n    //移除动画\r\n    stopDrawAnimate(){\r\n        this.getCurSpinLayer().setCellStatus(true)\r\n        this.animateNode.removeAllChildren()\r\n        this.maskNode.removeAllChildren()\r\n        this.hideBigWin()\r\n    },\r\n\r\n    hideBigWin(){\r\n        this.rewardNode.removeAllChildren()\r\n        this._canRemoveRewardNode = false\r\n    },\r\n\r\n    \r\n    onDestroy: function () {\r\n\t\tcc.log(\"GameSceneonDestroy\")\r\n\t\tappFacade.removeMediator(this.name);\r\n\t},\r\n});","let GameProxy = require('GameProxy');\r\nlet GameProtocol = require('GameProtocol');\r\nlet datatypes = GameProtocol.datatypes;\r\nlet constVal = GameProtocol.constVal;\r\nlet GameModel_520 = require('gameModel_520');\r\n\r\nlet GameConfig = require('gameConfig').config;\r\n\r\nconst i18n = require('i18n');\r\n\r\ncc.Class({\r\n\r\n    extends: GameProxy,\r\n\r\n\tonRegister: function () {\r\n        this.gameModel_520 = GameModel_520\r\n\t\tthis.gameConfig = GameConfig;\r\n\t\tthis._globalDataProxy = this.facade.retrieveProxy('FishGlobalDataProxy');\r\n\t\tthis._super();\r\n\t},\r\n\r\n\tregisterNetInterface: function (app,gameinfo) {\r\n\r\n\t\tthis._super(app,gameinfo);\r\n\r\n        ////////////////////////////////// 客户端消息 ///////////////////////////////////////\r\n\r\n        //游戏开始\r\n        this.net.registerClient(this, 'C_gameStart', datatypes.CMD_C_GameStart);\r\n\r\n        //游戏结束\r\n        this.net.registerClient(this, 'GameConclude', datatypes.CMD_GF_Game_Conclude);\r\n        \r\n        //免费游戏开始\r\n        this.net.registerClient(this, 'freeSpinStart', datatypes.CMD_C_GAME_AWAY_START);\r\n        \r\n        //场景选择\r\n        this.net.registerClient(this, 'requestSenceChoose', datatypes.CMD_C_SenceChoose); \r\n        //奖励选择\r\n        this.net.registerClient(this, 'requestRewardChoose', datatypes.CMD_C_RewardChoose); \r\n        //开启保险箱奖励\r\n        this.net.registerClient(this, 'requestMailBoxReward', datatypes.CMD_C_MailBoxReward); \r\n        //押注请求奖池\r\n        this.net.registerClient(this, 'requestBetRewardPool', datatypes.CMD_C_BetRewardPool); \r\n\t\t\r\n\t\t////////////////////////////////// 服务端消息 ///////////////////////////////////////\r\n\r\n        //游戏开始\r\n        this.net.registerServer(this, 'onGameMessageGameStart', datatypes.CMD_S_GameStart);\r\n\r\n        //游戏结束\r\n        this.net.registerServer(this, 'onGameMessageGameConclude', datatypes.CMD_S_Game_Conclude); \r\n\r\n\t\tthis.net.registerServer(this, 'onGameMessageSendmailBox', datatypes.CMD_S_SendmailBox);\r\n\r\n        this.net.registerServer(this, 'onEventGameSceneStop', datatypes.CMD_S_Scence_Stop);\r\n\r\n        //场景选择\r\n        this.net.registerServer(this, 'onGameMessageSenceChoose', datatypes.CMD_S_SenceChoose);\r\n        //场景奖励\r\n        this.net.registerServer(this, 'onGameMessageRewardChoose', datatypes.CMD_S_RewardChoose);\r\n        //选择密码纸\r\n        this.net.registerServer(this, 'onGameMessageMailBoxReward', datatypes.CMD_S_MailBoxReward);\r\n        //锁定奖池\r\n        this.net.registerServer(this, 'onGameMessageLockMailBox', datatypes.CMD_S_LockMailBox);\r\n        //押注请求奖池\r\n        this.net.registerServer(this, 'onGameMessageBetRewardPool', datatypes.CMD_S_BetRewardPool);\r\n        \r\n\r\n\t\t////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\t},\r\n\r\n    ////////////////////////////////// network //////////////////////////////////\r\n\r\n\t// 请求spin数据\r\n\trequestSpin(lineNum, betNum){\r\n        if (this.gameModel._freeSpin > 0) {\r\n            this.net.callServer('freeSpinStart');\r\n        }\r\n        else{\r\n            this.net.callServer('C_gameStart',lineNum,betNum - 1);\r\n        }\r\n\r\n        \r\n        //清理黏住的百搭\r\n        if (this._gameView && this._gameView.cleanWildStickItems) {\r\n            this._gameView.cleanWildStickItems(this.gameModel_520.wildList)\r\n        }\r\n\r\n        //黏住的百搭悬浮起来\r\n        if (this.gameModel_520.wildList && this._gameView && this._gameView.drawWildStickItems) {\r\n            this._gameView.drawWildStickItems(this.gameModel_520.wildList)\r\n            this.gameModel_520._wildList = this.gameModel_520.wildList\r\n        }\r\n\t},\r\n\r\n    // @override 发送游戏结束\r\n    requestStop(){\r\n        if (this.gameModel._freeSpin > 0) {\r\n            this.sendUserReady()\r\n        }\r\n        else{ \r\n            this.net.callServer('GameConclude');\r\n        }\r\n    },\r\n\r\n\r\n\r\n    //  场景选择\r\n    requestSenceChoose(num){\r\n        cc.log(\"场景选择\")\r\n        this.net.callServer('requestSenceChoose',num);\r\n    },\r\n\r\n    //  奖励选择\r\n    requestRewardChoose(num){\r\n        cc.log(\"奖励选择\")\r\n        this.net.callServer('requestRewardChoose',num);\r\n    },\r\n\r\n    //  选择密码纸\r\n    requestMailBoxReward(id){\r\n        cc.log(\"选择密码纸\")\r\n        this.net.callServer('requestMailBoxReward',id);\r\n    },\r\n\r\n    //  请求奖池 \r\n    requestBetRewardPool(num){\r\n        cc.log(\"请求奖池\")\r\n        this.net.callServer('requestBetRewardPool',num);\r\n    },\r\n    \r\n\r\n    //游戏结束\r\n    onGameMessageGameConclude:function(){\r\n        cc.log(\"游戏结束\")\r\n        this.sendUserReady()\r\n        this.dealRequestStopResult()\r\n    },\r\n    \r\n    //游戏开始\r\n    onGameMessageGameStart:function(_data){\r\n\r\n        let data = _data\r\n        cc.log(\"游戏开始\",data);\r\n        this.gameModel_520._CanBn = data.bCanBn\r\n        this.gameModel_520._isPlayWaitAni = true     //是否允许播放wait动画\r\n        let ret = {}\r\n\r\n        let winPos = []\r\n        let hash = {}\r\n        for (let [index,type] of Object.entries(data[\"cbItemType\"])){\r\n            if (type != 255) {\r\n                let line = this.gameModel.lines[index]\r\n                for (let i = 0;i < data[\"cbLineCount\"][index];i++) {\r\n                    let way = i + \".\" + line[i]\r\n                    hash[way] = true\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let [k, v] of Object.entries(hash)) {\r\n            let p = k.split(\".\");\r\n            winPos.push([Number(p[0]),Number(p[1])])\r\n        }\r\n\r\n        if (this.gameModel_520.wildList) {\r\n            for (let i = 0;i < 5;i++) {\r\n                for (let j = 0;j < 3;j++) {\r\n                    if (this.gameModel_520.wildList[i][j]===0) {\r\n                        if (data[\"ItemInfo\"][j][i]===0) {\r\n                            data[\"ItemInfo\"][j][i] = Help.getRandomInt(2,10)\r\n                        }\r\n                    }                   \r\n                }\r\n            }\r\n        }\r\n\r\n        this.gameModel_520._GiveAwayCount = data[\"nGiveAwayCount\"]\r\n\r\n        //触发免费，所有免费图标也展示动画\r\n        if (data[\"nGiveAwayCount\"] > 0) {\r\n            for (let i = 0;i < constVal.ITEM_X_COUNT;i++)  {\r\n                for (let j = 0;j < 3;j++) {\r\n                    if (data[\"ItemInfo\"][j][i]===1) {\r\n                        winPos.push([i, j - 1])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        ret[\"win_pos\"] = winPos\r\n        \r\n        let winLine = []\r\n        for (let [index, type] of Object.entries(data[\"cbItemType\"])) {\r\n            if (type != 255) {\r\n                let temp = {}\r\n                temp[\"line\"] = index\r\n                temp[\"symbol\"] = type\r\n                temp[\"count\"] = data[\"cbLineCount\"][index]\r\n                winLine.push(temp)\r\n            }\r\n        }\r\n\r\n        ret[\"win_lines\"] = winLine\r\n\r\n        let itemList = []\r\n        for (let i = 0;i < constVal.ITEM_X_COUNT;i++)  {\r\n            let temp = []\r\n            for (let j = 0;j < 3;j++) {\r\n                temp[j] = data[\"ItemInfo\"][j][i]\r\n            }\r\n            itemList[i] = temp\r\n        }\r\n        //itemList = [[8,10,0],[5,0,2],[7,1,9],[0,7,8],[7,8,9]]\r\n\r\n        ret[\"item_list\"] = itemList\r\n\r\n        if (this._gameView.isOneFree) {\r\n            this.gameModel_520._recoveryFreeList = ret[\"item_list\"]\r\n        }\r\n\r\n        let totalWin = 0\r\n        for (let i = 0;i < constVal.MAX_LINE_COUNT;i++) {\r\n            totalWin = totalWin + data[\"dLineScore\"][i]\r\n        }\r\n\r\n        ret[\"total_win\"] = totalWin\r\n\r\n        ret[\"free_spin\"] = data[\"nTotalGiveAwayCount\"]\r\n        ret[\"free_win\"] = data[\"dUserTotalWinScore\"]\r\n        \r\n        ret[\"free_state\"] = data[\"cbFreeSpinState\"]\r\n        cc.log(ret.item_list)\r\n        cc.log(ret[\"win_lines\"])\r\n        \r\n        this.dealRequestSpinResult(ret)\r\n\r\n        //保存黏住的百搭数据\r\n        this.gameModel_520.wildList = []\r\n        for (let i = 0;i < constVal.ITEM_X_COUNT;i++)  {\r\n            let temp = []\r\n            for (let j = 0;j < 3;j++) {\r\n                if (data[\"WildStickInfo\"][j][i]===0) {\r\n                    //坐标转换\r\n                    temp[j] = data[\"WildStickInfo\"][j][i]\r\n                }\r\n            }\r\n            this.gameModel_520.wildList[i] = temp\r\n        } \r\n    },\r\n\r\n    //奖池数据\r\n    onGameMessageSendmailBox:function(data){\r\n\r\n        //cc.log(\"奖池数据：\"+data);\r\n        this.sendNotification(\"SUB_S_SEND_MAILBOX\",data);\r\n            \r\n    },\r\n\r\n    onEventGameSceneStop: function () {\r\n        cc.log(\"CMD_S_Scence_Stop\");\r\n    },\r\n\r\n    onGameMessageSenceChoose: function (_data) {\r\n        cc.log(\"onGameMessageSenceChoose\");\r\n\r\n        //延迟播放切屏动画\r\n        setTimeout(function(){\r\n            this._gameView.BonusLayer.PlayQiePingAni()\r\n        }.bind(this), 1000)\r\n\r\n    },\r\n    onGameMessageRewardChoose: function (_data) {\r\n        cc.log(\"onGameMessageRewardChoose\");\r\n\r\n        let cmd_table = _data\r\n  \r\n        //(1-3)（金币，保险箱，骷髅头）  //从1开始//选择的物品id\r\n        let RewardGoodsID = cmd_table.bRewardGoodsID\r\n        // 每次的增量\r\n        let RewardValue = cmd_table.llRewardValue\r\n        //选择的物品id\r\n        let GoodsID = cmd_table.cbGoodsID\r\n    \r\n        for (let i = 0;i < 4;i++) {\r\n            this._gameView.BonusLayer.SetJackpot(i,cmd_table.stSendMainbox[i])\r\n        }\r\n        \r\n        this._gameView.BonusLayer.CreateGoods(RewardGoodsID,RewardValue,GoodsID)\r\n    },\r\n    onGameMessageMailBoxReward: function (_data) {\r\n        cc.log(\"onGameMessageMailBoxReward\");\r\n        let cmd_table = _data\r\n        this._gameView.BonusLayer.KaiBaoXianXiang(cmd_table.llRewardValue,cmd_table.cdRewardID)\r\n    },\r\n    onGameMessageLockMailBox: function (_data) {\r\n        cc.log(\"onGameMessageLockMailBox\");\r\n        let cmd_table = _data\r\n        this.gameModel_520._UnlockRewardID = cmd_table.bUnlockRewardID\r\n        this._gameView.BonusLayer.SetjiangchiAni(cmd_table.bUnlockRewardID ) \r\n    },\r\n    onGameMessageBetRewardPool: function (_data) {\r\n        cc.log(\"onGameMessageBetRewardPool\");\r\n        let cmd_table = _data\r\n        this.gameModel_520._UnlockRewardID = cmd_table.bUnlockRewardID\r\n        this._gameView.ShowJackpotKuang(cmd_table.bUnlockRewardID)\r\n        this._gameView.SetJackpotText(cmd_table.stSendMainbox)\r\n    },\r\n\r\n    //场景消息\r\n    onEventGameScene: function (gameStatus) {\r\n\t\tthis._super()\r\n        let data = null;\r\n        if(gameStatus===constVal.GAME_SCENE_FREE || gameStatus===constVal.GAME_SCENE_WAIT){\r\n                \r\n            data = datatypes.CMD_S_StatusFree.createFromStream(this.app.stream);\r\n            this.gameModel_520._UnlockRewardID = data.bUnlockRewardID\r\n\r\n        }else if(gameStatus===constVal.GAME_SCENE_PLAY){\r\n            data = datatypes.CMD_S_StatusPlay.createFromStream(this.app.stream);\r\n        };\r\n            \r\n        if (null===data) {\r\n            return\r\n        }\r\n\r\n        let ret = {}\r\n        ret[\"bet_index\"] = data[\"cbBetIndex\"] + 1\r\n        ret[\"baseScore\"] = data[\"lCellScore\"]\r\n        ret[\"betCount\"] = data[\"cbBetCount\"]\r\n        ret[\"betList\"] = data[\"lBetScoreArr\"]\r\n\r\n        // 断线重连，恢复场景\r\n        if (data[\"ItemInfo\"]) {\r\n            let winPos = []\r\n            let hash = {}\r\n            for (let [index,type] of Object.entries(data[\"cbItemType\"])){\r\n                if (type != 255) {\r\n                    let line = this.gameModel.lines[index]\r\n                    for (let i = 0; i < data[\"cbItemLineCount\"][index];i++) {\r\n                        let way = i + \".\" + line[i]\r\n                        hash[way] = true\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let [k, v] of Object.entries(hash)) {\r\n                let p = k.split(\".\");\r\n                winPos.push([Number(p[0]),Number(p[1])])\r\n            }\r\n            ret[\"win_pos\"] = winPos\r\n            \r\n            let winLine = []\r\n            for (let [index, type] of Object.entries(data[\"cbItemType\"])) {\r\n                if (type != 255) {\r\n                    let temp = {}\r\n                    temp[\"line\"] = index\r\n                    temp[\"symbol\"] = type\r\n                    temp[\"count\"] = data[\"cbLineCount\"][index]\r\n                    winLine.push(temp)\r\n                }\r\n            }\r\n    \r\n            ret[\"win_lines\"] = winLine\r\n\r\n\r\n            let itemList = []\r\n            for (let i = 0;i < constVal.ITEM_X_COUNT;i++)  {\r\n                let temp = []\r\n                for (let j = 0;j < 3;j++) {\r\n                    temp[j] = data[\"ItemInfo\"][j][i]\r\n                }\r\n                itemList[i] = temp\r\n            }\r\n    \r\n            ret[\"item_list\"] = itemList\r\n\r\n\r\n            this.gameModel_520._recoveryFreeList = ret[\"item_list\"]\r\n\r\n            let totalWin = 0\r\n            for (let i = 0;i < constVal.MAX_LINE_COUNT;i++) {\r\n                totalWin = totalWin + data[\"lLineScore\"][i]\r\n            }\r\n    \r\n            ret[\"total_win\"] = totalWin\r\n\r\n            ret[\"free_spin\"] = data[\"nTotalGiveAwayCount\"]\r\n            ret[\"free_win\"] = data[\"dUserTotalWinScore\"]\r\n            \r\n            ret[\"free_state\"] = data[\"cbFreeSpinState\"]\r\n\r\n            ret[\"line_count\"] = data[\"cbLineCount\"]\r\n            ret[\"bet_index\"] = data[\"cbBetIndex\"] + 1\r\n\r\n            this.gameModel_520._CanBn             = data.bCanBn\r\n            this.gameModel_520._VerifyMailBox     = data.bVerifyMailBox\r\n            this.gameModel_520._BnSenceId         = data.bBnSenceId\r\n            this.gameModel_520._bRewardGoodChoose = data.bRewardGoodChoose\r\n            this.gameModel_520._UnlockRewardID    = data.bUnlockRewardID\r\n            this.gameModel_520._RewardNum         = data.llRewardNum\r\n            this.gameModel_520._SkullNum          = data.bSkullNum        \r\n            this.gameModel_520._isBreakLine       = true\r\n        }\r\n\r\n        this.dealSceneData(ret)\r\n\r\n\t},\r\n\r\n    // @override\r\n    createStartFreeLayer(){\r\n\r\n        let startFree = function(){\r\n            this.freeGameStart()\r\n        }.bind(this)\r\n\r\n        if (this._gameView && this._gameView.createStartFreeLayer) {\r\n            this._gameView.createStartFreeLayer(this.gameModel._freeSpin, startFree)\r\n        }\r\n\r\n    },\r\n\r\n    // @override 播放加速动画\r\n    playReelNotifyEffect(col){\r\n    \r\n        if (this.gameModel_520._isPlayWaitAni===false) {\r\n            return\r\n        }\r\n        //todo\r\n        //this._gameView:playBonus_lzjl(col,this.speedUpState[col])\r\n\r\n    },\r\n\r\n    // @override 滚轴滚动停止\r\n    onReelStop(col){\r\n        if (this.notifyState && this.notifyState[col] && this.notifyState[col].length > 0) {\r\n            this.playSpecialSymbolStopAni(col, this.notifyState[col])\r\n    \r\n            if (this.checkSpeedUp(col + 1)) {\r\n                \r\n                this.playReelNotifyEffect(col + 1)  \r\n                this.gameModel_520._isPlayWaitAni = false\r\n            }        \r\n    \r\n        }\r\n    },\r\n\r\n    recoveryFreeScene(){\r\n        if (this._gameView && this._gameView.cleanWildStickItems) {\r\n            this._gameView.cleanWildStickItems(this.gameModel_520.wildList)\r\n            if (this._gameView.animateNode) {\r\n                this._gameView.animateNode.removeAllChildren()\r\n            }\r\n        }\r\n\r\n        for (let [col,keys] of Object.entries(this.gameModel_520._recoveryFreeList)){\r\n            for (let [row,key] of Object.entries(keys)){\r\n                let cell = this._gameView.getCurSpinLayer().getCell(col, row)\r\n                cell.active = true\r\n                this.updateCellSprite(cell, col, true, key)\r\n            }\r\n        }\r\n    },\r\n\r\n    // @override 游戏结束结算和动画展示\r\n    handleResult(){\r\n\r\n        this.drawAnimate(this.gameModel._spinResult)\r\n\r\n        this.sendNotification(\"CHANGE_SPIN_BTN_STATE\",true);\r\n\r\n        let callback = function (){\r\n            \r\n            if (this.gameModel._freeState >= 1 && this.gameModel._freeState <= 2 && this.gameModel._freeSpin > 0) {\r\n                \r\n                this._gameView.scheduleOnce(function(){\r\n                    this.createStartFreeLayer()\r\n                }.bind(this), 1)\r\n                \r\n            }\r\n            else if (this.gameModel._freeState===3 && this.gameModel._freeSpin < 1) {\r\n\r\n                    //免费spin结束一局\r\n                    let delay = 0\r\n                    if (this.gameModel._totalWin > 0) {\r\n                        delay = 1\r\n                    }\r\n\r\n                    this.gameModel._curwinscore = this.gameModel._freewin\r\n\r\n                    this._gameView.scheduleOnce(function(){\r\n                        //this._gameLayer:setFreeGameFireVisible(false)\r\n                        this.createFreeRewardLayer()\r\n                    }.bind(this), delay)\r\n\r\n\r\n            }\r\n\r\n            // 免费游戏期间，单局不结算，统一结束后结算\r\n            if (this.gameModel._freeSpin < 1 && this._freeState != 3) {\r\n\r\n                //非免费spin正常结束一局\r\n\t\t\t\tthis.sendNotification(\"SET_TOTAL_WIN\",this.gameModel._totalWin);\r\n\t\t\t\tthis.sendNotification(\"UPDATE_SCORE\",this.gameModel._totalWin);\r\n\t\t\t\tthis.sendNotification(\"CHANGE_GAME_BTN_STATE\",true);\r\n\t\t\t\tthis.gameModel._curwinscore = this.gameModel._totalWin\r\n\r\n            }\r\n            else{\r\n                this.sendNotification(\"SET_TOTAL_WIN\",this.gameModel._freewin);\r\n            }\r\n            \r\n            if (this.gameModel._freeState != 3) {\r\n                this.requestStop()\r\n            }\r\n            \r\n\r\n        }.bind(this)\r\n\r\n\r\n        //触发BN\r\n        if (this.gameModel_520._CanBn) {\r\n            //未选择场景\r\n            if (this.gameModel_520._BnSenceId===255) {\r\n                setTimeout(function(){\r\n                    this._gameView.createBonusLayer(callback)\r\n                }.bind(this), 4000)\r\n            }     \r\n            else{\r\n                this._gameView.RecoverBonusLayer(callback,this.gameModel_520._BnSenceId + 1,this.gameModel_520._VerifyMailBox,this.gameModel_520._bRewardGoodChoose,this.gameModel_520._UnlockRewardID ,this.gameModel_520._RewardNum,this.gameModel_520._SkullNum)          \r\n            }\r\n        }\r\n        else{\r\n\r\n            callback()\r\n\r\n        }\r\n\r\n        this.gameModel_520._isBreakLine       = false\r\n    },\r\n\r\n    //@override 绘制动画\r\n    drawAnimate(data){\r\n\r\n        this.gameModel_520._CanFree = false\r\n\r\n        if (this.gameModel_520._CanBn) {\r\n            this.gameUIManager.playAudio(\"bell\",false)\r\n            this.gameUIManager.playAudio(\"anti_suc_vo1\",false)\r\n            this._gameView.animateNode.removeAllChildren()\r\n            //绘制特殊符号\r\n            for (let i = 0;i < 5;i++) {\r\n                if (this.notifyState && this.notifyState[i] && this.notifyState[i].length > 0) {\r\n                    this._gameView.playSpecialSymbolStopAni(i, this.notifyState[i],this.gameModel_520._CanBn)\r\n                }             \r\n            }\r\n        }\r\n\r\n        \r\n        //根据点来显示，因为免费没有线\r\n        if (data[\"win_pos\"] && data[\"win_pos\"].length > 0) {\r\n            //免费游戏音效\r\n            if (this.gameModel_520._GiveAwayCount > 0) {\r\n                this.gameModel_520._CanFree = true\r\n                this.gameUIManager.playAudio(\"bell\",false)\r\n                this.gameUIManager.playAudio(\"anti_suc_vo2\",false)\r\n                this._gameView.animateNode.removeAllChildren()\r\n                //绘制特殊符号\r\n                for (let i = 0;i < 5;i++) {\r\n                    if (this.notifyState && this.notifyState[i] && this.notifyState[i].length > 0) {\r\n                        this._gameView.playSpecialSymbolStopAni(i, this.notifyState[i])\r\n                    }             \r\n                }\r\n            }\r\n            \r\n            this.gameUIManager.playAudio(\"win1\",false)\r\n            setTimeout(function(){\r\n                this.gameUIManager.playAudio(\"win1end\",false)\r\n            }.bind(this), 1000)\r\n\r\n\r\n            this.drawLinesThemeAnimate(this.gameModel.winLines, this._gameView.getCurSpinLayer(), data)\r\n        }\r\n\r\n        //隐藏百搭下面的item\r\n        if (this.gameModel_520._wildList && this._gameView && this._gameView.hideWildStickDownItems) {\r\n            this._gameView.hideWildStickDownItems(this.gameModel_520._wildList)\r\n        }\r\n\r\n   \r\n    },\r\n\r\n    //@override 减注\r\n    subBet(){\r\n        if (this.gameModel._betIndex <= 1) {\r\n            this.gameModel._betIndex = this.gameModel._betCount\r\n        }\r\n        else{\r\n            this.gameModel._betIndex = this.gameModel._betIndex - 1\r\n        }\r\n    \r\n        this.requestBetRewardPool(this.gameModel._betIndex - 1)\r\n        \r\n        this.sendNotification(\"SET_TOTAL_BET\",this.gameModel.getTotalBet());\r\n    },\r\n    \r\n    //@override 加注\r\n    addBet(){\r\n        if (this.gameModel._betIndex >= this.gameModel._betCount) {\r\n            this.gameModel._betIndex = 1\r\n        }\r\n        else{\r\n            this.gameModel._betIndex = this.gameModel._betIndex + 1\r\n        }\r\n    \r\n        this.requestBetRewardPool(this.gameModel._betIndex - 1)\r\n       \r\n        this.sendNotification(\"SET_TOTAL_BET\",this.gameModel.getTotalBet());\r\n    },\r\n    \r\n    \r\n    //@override 最大注码\r\n    maxBet(){\r\n        this.gameModel._betIndex = this.gameModel._betCount\r\n        this.requestBetRewardPool(this.gameModel._betIndex - 1)\r\n        this.sendNotification(\"SET_TOTAL_BET\",this.gameModel.getTotalBet());\r\n    },\r\n\r\n    freeGameStart(){\r\n        // this._gameLayer:setFreeGameFireVisible(false)\r\n        if (this._gameView && this._gameView.setFreeRemain) {\r\n            this._gameView.setFreeRemain(this.gameModel._freeSpin - 1)\r\n        }\r\n        this.spin()\r\n    },\t\r\n\r\n})\r\n\r\n","(function(scope){\r\n    scope.Help =  {};\r\n\r\n    // //创建spine动画\r\n    // Help.createSpineAnimation = function (node,path,trackIndex,name,loop){\r\n\r\n        \r\n    //     cc.resources.load(path, sp.SkeletonData, (err, spine)=> {\r\n    //         if(err){\r\n    //             cc.log(err);\r\n    //         };\r\n    //         let spineNode = new cc.Node();\r\n    //         node.addChild(spineNode);\r\n    //         let skeleton = spineNode.addComponent(sp.Skeleton);\r\n            \r\n    //         //设置数据\r\n    //         skeleton.setSkeletonData(spine);\r\n    //         //播放默认动画\r\n    //         skeleton.setAnimation(trackIndex,name,loop);\r\n    //     });\r\n\r\n    // }\r\n\r\n    //加载不能动态生成的spine动画预制体\r\n    Help.LoadSpinePrefab = function (node,path,trackIndex,name,loop,callback){\r\n\r\n        cc.resources.load(path, cc.Prefab, (err, prefab) => {\r\n            if(err){\r\n                cc.log(err);\r\n                return\r\n            };\r\n            var newNode = cc.instantiate(prefab);\r\n            node.addChild(newNode);\r\n            newNode.getComponent(sp.Skeleton).setAnimation(trackIndex,name,loop)\r\n            callback(node,newNode);\r\n            \r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    // 弹窗动画\r\n    Help.popDialog = function (node, _duration){\r\n        if (!node)  {\r\n            return;\r\n        }\r\n\r\n        let duration = _duration || 0.3;\r\n        node.setScale(0);\r\n        node.opacity = 0;\r\n\r\n        let scaleTo = cc.scaleTo(duration, 1.1,1.1)\r\n        let fadeIn = cc.fadeIn(duration);\r\n        let spwan = cc.spawn(scaleTo, fadeIn);\r\n        let scaleTo1 = cc.scaleTo(0.1, 1,1)\r\n        let seq = cc.sequence(spwan, scaleTo1)\r\n\r\n        node.runAction(seq)\r\n\r\n        return duration + 0.1\r\n\r\n    };\r\n\r\n    // 关闭窗口动画\r\n    Help.hideDialog = function (node, _duration, callback){\r\n\r\n        if(!node) {\r\n            if(callback){\r\n                callback();\r\n            };\r\n            return;\r\n        }\r\n\r\n        let duration = _duration || 0.15\r\n        let scaleTo = cc.scaleTo(duration, 0,0)\r\n        let fadeOut = cc.fadeOut(duration)\r\n        let spwan = cc.spawn(scaleTo, fadeOut)\r\n    \r\n        let scaleTo1 = cc.scaleTo(0.1, 1.1,1.1)\r\n        let cb = cc.callFunc(callback)\r\n        let seq = cc.sequence(scaleTo1, spwan, cb)\r\n    \r\n        node.runAction(seq)\r\n    };\r\n\r\n    Help.FormatScore = function(num, fnum) {\r\n        fnum = fnum || 2;\r\n        num = num / SCORE_RATIO;\r\n    \r\n        if (Math.floor(num) === num) {\r\n            // 整数就不需要小数后面的0了\r\n            return num.toString().replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\");\r\n        }\r\n    \r\n        let times = 1;\r\n        for (let i = 1; i <= fnum; i++) {\r\n            // 不需要小数最末尾的0\r\n            times *= 10;\r\n    \r\n            if (Math.floor(num * times) === num * times) {\r\n                return num.toFixed(i);\r\n            }\r\n        }\r\n    \r\n        return num.toFixed(fnum);\r\n    }\r\n\r\n\r\n    //数字格式化显示\r\n    Help.FormatScore2 = function (_num,_fnum){\r\n        let fnum = _fnum || 2;\r\n        let num = _num / SCORE_RATIO;\r\n        return num.toFixed(fnum);\r\n    }\r\n    \r\n    //分数累加效果\r\n    Help.scorllNumber = function (node, _from, _to, _delay, callback){\r\n        let from = _from || 0;\r\n        let to = _to || 0;\r\n        let delay = _delay || 0.8;\r\n\r\n        let addSumNum = to - from;\r\n        let frame = 25;\r\n        let minAddValue = 1;\r\n        let changeCnt = Math.ceil(delay * frame);\r\n        let offset = Math.floor(addSumNum / changeCnt);\r\n        if(Math.abs(offset) < minAddValue){\r\n            offset = minAddValue;\r\n        };\r\n\r\n        let randomValue = Math.floor(Math.abs(offset) * 0.2);\r\n\r\n        if (Math.abs(randomValue) < minAddValue) {\r\n            randomValue = 0;\r\n        }\r\n        let actDelay = cc.delayTime(1 / frame);\r\n        let actCall = cc.callFunc(function () {\r\n            if (from >= to) {\r\n                return\r\n            }\r\n            from = from + offset + Help.getRandomInt(-randomValue, randomValue)\r\n            if ((offset > 0 && from > to) || (offset < 0 && from < to)) {\r\n                from = to;\r\n            };\r\n            if (callback) {\r\n                callback(node,from);\r\n            };\r\n        });\r\n\r\n\r\n        let sequence = cc.sequence(actDelay, actCall);\r\n\r\n        node.runAction(cc.repeatForever(sequence));\r\n    };\r\n\r\n    //深克隆\r\n    Help.deepClone = function (obj) {\r\n        let newObj = Array.isArray(obj) ? [] : {}\r\n        if (obj && typeof obj === \"object\") {\r\n            for (let key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    newObj[key] = (obj && typeof obj[key] === 'object') ? this.deepClone(obj[key]) : obj[key];\r\n                }\r\n            }\r\n        } \r\n        return newObj\r\n    }\r\n\r\n    Help.getRandomInt = function (min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min)) + min; //不含最大值，含最小值\r\n    }\r\n\r\n    \r\n    Help.checknumber = function(value, base) {\r\n        return Number(value, base) || 0;\r\n    }\r\n\r\n\r\n})(window);","\r\ncc.Class({\r\n\textends : cc.Component,\r\n\r\n\tproperties : {\r\n\r\n\t},\r\n\t\r\n\tonLoad : function() {\r\n\t\tlet appFacade = require('FishFacade');\r\n\t\tappFacade.startup();\r\n\t}\r\n});","const i18n = require('i18n');\r\ncc.Class({\r\n    extends: cc.Label,\r\n\r\n    properties: {\r\n        textKey: {\r\n            default: 'TEXT_KEY',\r\n            multiline: true,\r\n            tooltip: 'Enter i18n key here',\r\n            notify: function () {\r\n                this.string = this.localizedString;\r\n            }\r\n        },\r\n        localizedString: {\r\n            override: true,\r\n            tooltip: 'Here shows the localized string of Text Key',\r\n            get: function () {\r\n                return i18n.t(this.textKey);\r\n            },\r\n            set: function (value) {\r\n                this.textKey = value;\r\n                if (CC_EDITOR) {\r\n                    cc.warn('Please set label text key in Text Key property.');\r\n                }\r\n            }\r\n        },\r\n    },\r\n\r\n    onLoad() {\r\n        this._super();\r\n        if (this.localizedString) {\r\n            this.string = this.localizedString;\r\n        }\r\n    }\r\n});\r\n","let appFacade = require('FishFacade');\r\n//let loadtips = require(\"loadtips\")\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        progressBar: cc.ProgressBar,\r\n        psLogo: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        tipLabel: cc.Label\r\n    },\r\n\r\n    onLoad: function () {\r\n\r\n        cc.view.setDesignResolutionSize(1334, 750, cc.ResolutionPolicy.SHOW_ALL);\r\n\r\n        cc.view.on(cc.game.EVENT_GAME_SIZE_CHANGED, function (event) {\r\n            var width = event.width;\r\n            var height = event.height;\r\n            var designWidth = 1334;\r\n            var designHeight = 750;\r\n            var scaleWidth = width / designWidth;\r\n            var scaleHeight = height / designHeight;\r\n            var scale = Math.min(scaleWidth, scaleHeight);\r\n            var gameSize = new cc.Size(designWidth * scale, designHeight * scale);\r\n            cc.view.resizeCanvas(gameSize, cc.ResolutionPolicy.NO_BORDER);\r\n        });\r\n\r\n\r\n        // let frameSize = cc.view.getFrameSize();\r\n        // let rtFrame = frameSize.width / frameSize.height;\r\n        // let deFrame = 1136 / 640;\r\n        // if (rtFrame > 1704 / 640 || rtFrame < 1136 / 960) {\r\n        //     this.node.addComponent(cc.Mask);\r\n        //     cc.view.setDesignResolutionSize(1136, 640, cc.ResolutionPolicy.SHOW_ALL);\r\n        // }\r\n        // else if (rtFrame < deFrame) {\r\n        //     cc.view.setDesignResolutionSize(1136, 640, cc.ResolutionPolicy.FIXED_WIDTH);\r\n        // } else {\r\n        //     cc.view.setDesignResolutionSize(1136, 640, cc.ResolutionPolicy.FIXED_HEIGHT);\r\n        // }\r\n        //cc.view.enableRetina(true)\r\n        // cc.view.setDesignResolutionSize(1334, 750, cc.ResolutionPolicy.SHOW_ALL);\r\n        // cc.log(\"aaaaaaaaaaaaaa\")\r\n        // cc.view.on(cc.game.EVENT_GAME_SIZE_CHANGED, function (event) {\r\n        //     var width = event.width;\r\n        //     var height = event.height;\r\n        //     var designWidth = 1334;\r\n        //     var designHeight = 750;\r\n        //     var scaleWidth = width / designWidth;\r\n        //     var scaleHeight = height / designHeight;\r\n        //     var scale = Math.min(scaleWidth, scaleHeight);\r\n        //     var gameSize = new cc.Size(designWidth * scale, designHeight * scale);\r\n        //     cc.view.resizeCanvas(gameSize, cc.ResolutionPolicy.NO_BORDER);\r\n        // });\r\n        \r\n        appFacade.registerMediator(this);\r\n\r\n        let app = KBEngine.createApp();\r\n        app.wssAddr = LobbyServerAddr;\r\n        this._app = app\r\n\r\n        let gameProxy = appFacade.retrieveProxy('GameProxy');\r\n        if(gameProxy != null){\t\r\n            appFacade.removeProxy('GameProxy');\r\n        }\r\n\r\n        let GameProxy = require('Game_'+ 520 +'_Proxy');\r\n        appFacade.addProxy(new GameProxy());\t\r\n\r\n        gameProxy = appFacade.retrieveProxy('GameProxy');\r\n\r\n\r\n        //添加新桌子代理\r\n        let gameTableProxy = appFacade.retrieveProxy('GameTableProxy');\r\n        if(gameTableProxy != null){\t\r\n            appFacade.removeProxy('GameTableProxy');\r\n        }\r\n        let GameTableProxy = require('GameTableProxy');\r\n        appFacade.addProxy(new GameTableProxy());\r\n\r\n        gameTableProxy = appFacade.retrieveProxy('GameTableProxy');\r\n        appFacade.registerProxy();\r\n\r\n        gameTableProxy.registerNetInterface(app,520);\r\n        gameProxy.registerNetInterface(app,520);\t\t\t\r\n\r\n        \r\n            //appFacade.sendNotification(FishConstants.ENTER_GAME_SCENCE,520,this.app);\r\n        this.GameTableProxy = appFacade.retrieveProxy('GameTableProxy');\r\n        // this.gameSceneName = \"GameScene_\" + this.GameTableProxy._gameInfo.wKindID;\r\n        this.gameSceneName = \"GameScene_520\";\r\n    },\r\n\r\n    start: function () {\r\n        let tipid = Math.ceil(Math.random() * 4)\r\n        if (G_LanguageType == \"zh\")\r\n        {\r\n            //this.tipLabel.string = loadtips[tipid].tip\r\n        }\r\n        else {\r\n            //this.tipLabel.string = loadtips[tipid].tipEN\r\n        }\r\n\r\n        cc.resources.preloadDir(\"games/game520/texture/symbol\",function(){\r\n            var infos = cc.resources.getDirWithPath('games/game520/texture/symbol', cc.SpriteFrame);\r\n            let paths = infos.map(function (info) {\r\n                return info.path;\r\n            });\r\n            //cc.director.loadScene(this.gameSceneName)\r\n            cc.resources.preloadDir(\"games/game520/prefab\",function(){\r\n                cc.director.loadScene(this.gameSceneName)\r\n            }.bind(this));\r\n\r\n        }.bind(this));\r\n        \r\n        this.progressBar.progress = 0\r\n        cc.director.preloadScene(this.gameSceneName, (completedCount, totalCountr, item) => {\r\n            if (this.progressBar) {\r\n                //this.progressBar.progress = completedCount / 600\r\n\r\n                // 计算加载进度（百分比）\r\n                let progress = (completedCount / totalCountr) * 100;\r\n                \r\n                // 更新进度条的值\r\n                this.progressBar.progress = progress / 100;\r\n            }\r\n        }\r\n            , function () {\r\n                //cc.director.loadScene(this.gameSceneName);\r\n                cc.log(\"游戏场景预加载完成，登录游戏\");\r\n                //取Url参数\r\n                let account = \"\";\r\n                let token = \"\";\r\n                var parmStr = window.location.href.split('?')[1];\r\n                if (parmStr) {\r\n                    var parms = parmStr.split('&');\r\n                    parms.forEach(element => {\r\n                        var parm = element.split('=');\r\n                        if (parm[0] == \"member_account\") {\r\n                            account = parm[1];\r\n                        }\r\n                        else if (parm[0] == \"token\") {\r\n                            token = parm[1];\r\n                        }\r\n                    });\r\n                }\r\n\r\n        \r\n                this._app.connect(function () {\r\n                    this.GameTableProxy.logonGame(account, token)\r\n                }.bind(this));\r\n                \r\n            }.bind(this))\r\n\r\n\r\n    },\r\n\r\n    listNotificationInterests: function () {\r\n        return [{\r\n            evtType: FishConstants.LOGIN_GAME_FINISH,\r\n            callback: this.loginFinish\r\n        }\r\n        ];\r\n\r\n    },\r\n\r\n    loginFinish: function () {\r\n        cc.log(\"加载游戏场景\")\r\n        // let GameTableProxy = appFacade.retrieveProxy('GameTableProxy');\r\n        // let gameSceneName = \"GameScene_\" + GameTableProxy._gameInfo.wKindID;\r\n        // cc.director.loadScene(gameSceneName)\r\n\r\n        // cc.resources.preloadDir(\"games/game520/texture/symbol\",function(){\r\n        //     var infos = cc.resources.getDirWithPath('games/game520/texture/symbol', cc.SpriteFrame);\r\n        //     let paths = infos.map(function (info) {\r\n        //         return info.path;\r\n        //     });\r\n        //     //cc.director.loadScene(this.gameSceneName)\r\n        //     cc.resources.preloadDir(\"games/game520/prefab\",function(){\r\n        //         cc.director.loadScene(this.gameSceneName)\r\n        //     }.bind(this));\r\n\r\n        // }.bind(this));\r\n\r\n        \r\n    },\r\n\r\n    onDestroy: function () {\r\n\t\tcc.log(\"LoadingSceneonDestroy\")\r\n\t\tappFacade.removeMediator(this.name);\r\n\t\t\r\n\t},\r\n\r\n});\r\n","cc.Class({\r\n    extends: cc.Mask,\r\n    setVertsDirtySprite() {\r\n        if (this._spriteFrame) {\r\n            this.setVertsDirty();\r\n            this._updateMaterial();\r\n        }\r\n    },\r\n    onEnable() {\r\n        this._super();\r\n        this.node.on(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirtySprite, this);\r\n    },\r\n    onDisable() {\r\n        this._super();\r\n        this.node.off(cc.Node.EventType.SIZE_CHANGED, this.setVertsDirtySprite, this);\r\n    },\r\n});\r\n","//柏林噪音类\r\nlet PerlinNoise = function () {\r\n\tthis.reset()\r\n};\r\nPerlinNoise.prototype = {\r\n\tconstructor: PerlinNoise,\r\n\treset() {\r\n\t},\r\n\tnoise1d(x) {\r\n\t\tx = x << 13 ^ x;\r\n\t\tlet t = (Math.imul(x, (Math.imul(Math.imul(x, x), 15731) + 789221)) + 1376312589) & 0x7fffffff;\r\n\t\treturn 1.0 - t * 0.931322574615478515625e-9;/// 1073741824.0);\r\n\t},\r\n\tgenerateNoise1D(x) {\r\n\t\tlet ix = Math.floor(x);\r\n\t\tlet s = x - ix;\r\n\t\tlet r1 = this.noise1d(ix);\r\n\t\tlet r2 = this.noise1d(ix + 1);\r\n\t\treturn this.interpolate(r1, r2, s)\r\n\t},\r\n\tinterpolate(x, y, s) {\r\n\t\t//cc.log(\"x, y, s\", x, y, s)\r\n\t\tlet ft = s * 3.1415927;\r\n\t\tlet f = (1.0 - Math.cos(ft)) * 0.5;\r\n\t\t//cc.log(\"x * (1.0 - f) + y * f\", x * (1.0 - f) + y * f)\r\n\t\treturn x * (1.0 - f) + y * f;\r\n\t},\r\n}\r\nmodule.exports = new PerlinNoise();\r\n\r\n","const i18n = require('i18n');\r\ncc.Class({\r\n    extends: cc.RichText,\r\n\r\n    properties: {\r\n        textKey: {\r\n            default: 'TEXT_KEY',\r\n            multiline: true,\r\n            tooltip: 'Enter i18n key here',\r\n            notify: function () {\r\n                this.string = this.localizedString;\r\n            }\r\n        },\r\n        localizedString: {\r\n            override: true,\r\n            tooltip: 'Here shows the localized string of Text Key',\r\n            get: function () {\r\n                return i18n.t(this.textKey);\r\n            },\r\n            set: function (value) {\r\n                this.textKey = value;\r\n                if (CC_EDITOR) {\r\n                    cc.warn('Please set label text key in Text Key property.');\r\n                }\r\n            }\r\n        },\r\n    },\r\n\r\n    // onLoad() {\r\n    //    // this._super();\r\n    //     if (this.localizedString) {\r\n    //         this.string = this.localizedString;\r\n    //     }\r\n    // }\r\n});\r\n","\r\ncc.Class({\r\n\textends: cc.Component,\r\n\r\n\tproperties: {\r\n\t},\r\n\r\n\tonLoad: function () {\r\n\t\tcc.dynamicAtlasManager.enabled = false;\r\n\t\tthis.target = this.node.getComponent(cc.Sprite)\r\n\t\tthis._material = this.target.getMaterial(0)\r\n\t\tthis.m_rippleList = []\r\n\t\tthis.rippleDirty = true\r\n\t},\r\n\r\n\tstart: function () {\r\n\t\tthis._material.setProperty('ripple_num',this.m_rippleList.length);\r\n\t},\r\n\taddRipple(pos) {\r\n\t\tif (!this.rippleDirty) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (this.m_rippleList.length <= 8) {\r\n\t\t\tlet rippleList = {}\r\n\t\t\trippleList.centerCoordinate = cc.v2(((pos.x / cc.winSize.width - 0.5) * (cc.winSize.width / 1704) + 0.5) * 1.775, 1 - ((pos.y / cc.winSize.height - 0.5) * (cc.winSize.height / 960) + 0.5))\r\n\t\t\trippleList.runtime = 0;\r\n\t\t\trippleList.lifespan = 4.0;\r\n\t\t\tthis.m_rippleList.push(rippleList)\r\n\t\t}\r\n\t},\r\n\tsetRippleDirty(rippleDirty) {\r\n\t\tthis.rippleDirty = rippleDirty\r\n\t},\r\n\tupdate: function (dt) {\r\n\t\tif (!this.rippleDirty) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tfor (let i = this.m_rippleList.length - 1; i >= 0; i--) {\r\n\t\t\tthis.m_rippleList[i].runtime += dt;\r\n\t\t\tif (this.m_rippleList[i].runtime >= this.m_rippleList[i].lifespan) {\r\n\t\t\t\tcc.js.array.fastRemoveAt(this.m_rippleList, i)\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._material.effect.setProperty('ripple_num', this.m_rippleList.length);\r\n\t\tfor (let i = this.m_rippleList.length - 1; i >= 0; i--) {\r\n\t\t\tswitch (i) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis._material.setProperty('coor_center1', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time1', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis._material.setProperty('coor_center2', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time2', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis._material.setProperty('coor_center3', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time3', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis._material.setProperty('coor_center4', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time4', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tthis._material.setProperty('coor_center5', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time5', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\tthis._material.setProperty('coor_center6', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time6', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tthis._material.setProperty('coor_center7', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time7', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\tthis._material.setProperty('coor_center8', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time8', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});","\r\ncc.Class({\r\n\textends: cc.Component,\r\n\r\n\tproperties: {\r\n\t},\r\n\r\n\tonLoad: function () {\r\n\t\tcc.dynamicAtlasManager.enabled = false;\r\n\t\tthis.target = this.node.getComponent(cc.Sprite)\r\n\t\tthis._material = this.target.getMaterial(0)\r\n\t\tthis.m_rippleList = []\r\n\t\tthis.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnded, this);\r\n\t\tthis.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnded, this);\r\n\t},\r\n\tstart: function () {\r\n\t\tthis._material.setProperty('ripple_num', 0);\r\n\t},\r\n\tonTouchEnded(event) {\r\n\t\tlet touch = event.touch;\r\n\t\tlet pos = touch.getLocation();\r\n\t\tif (this.m_rippleList.length <= 8) {\r\n\t\t\tlet rippleList = {}\r\n\t\t\trippleList.centerCoordinate = cc.v2(((pos.x / cc.winSize.width - 0.5) * (cc.winSize.width / 1704) + 0.5) * 1.775, 1 - ((pos.y / cc.winSize.height - 0.5) * (cc.winSize.height / 960) + 0.5))\r\n\t\t\trippleList.runtime = 0;\r\n\t\t\trippleList.lifespan = 4.0;\r\n\t\t\tthis.m_rippleList.push(rippleList)\r\n\t\t}\r\n\t},\r\n\tupdate: function (dt) {\r\n\t\tfor (let i = this.m_rippleList.length - 1; i >= 0; i--) {\r\n\t\t\tthis.m_rippleList[i].runtime += dt;\r\n\t\t\tif (this.m_rippleList[i].runtime >= this.m_rippleList[i].lifespan) {\r\n\t\t\t\tcc.js.array.fastRemoveAt(this.m_rippleList, i)\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._material.effect.setProperty('ripple_num', this.m_rippleList.length);\r\n\t\tfor (let i = this.m_rippleList.length - 1; i >= 0; i--) {\r\n\t\t\tswitch (i) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis._material.setProperty('coor_center1', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time1', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis._material.setProperty('coor_center2', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time2', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis._material.setProperty('coor_center3', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time3', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis._material.setProperty('coor_center4', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time4', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tthis._material.setProperty('coor_center5', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time5', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\tthis._material.setProperty('coor_center6', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time6', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tthis._material.setProperty('coor_center7', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time7', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\tthis._material.setProperty('coor_center8', this.m_rippleList[i].centerCoordinate);\r\n\t\t\t\t\tthis._material.setProperty('run_time8', this.m_rippleList[i].runtime);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});","/*\r\n\t 动画名, 资源路径, \r\n\t AnimationName, csbRes,\r\n*/\r\nmodule.exports = {\r\n\t[1]: {\r\n\t\tAnimationName: \"jp_shangsuo\",\r\n\t\tcsbRes: \"games/game520/spine/jp_shangsuo\",\r\n\t},\r\n\t\r\n}","/*\r\n\t界面id, 视图名称, 资源路径, 层级, 提示音, 动画类型, 功能描述\r\n\tId, viewName, csbRes, Zorder, isAudio, openAnimationName, des\r\n*/\r\nmodule.exports = {\r\n\t[2]: {\r\n\t\tId: 2,\r\n\t\tviewName: \"tipView_game\",\r\n\t\tcsbRes: \"games/gamebase/prefab/tishi\",\r\n\t\tZorder: 1,\r\n\t\tisAudio: null,\r\n\t\topenAnimationName: 1,\r\n\t\tdes: \"提示页面\",\r\n\t},\r\n\t[3]: {\r\n\t\tId: 2,\r\n\t\tviewName: \"GameHelpLayer\",\r\n\t\tcsbRes: \"games/game520/prefab/GameHelpLayer_Node\",\r\n\t\tZorder: 1,\r\n\t\tisAudio: null,\r\n\t\topenAnimationName: 1,\r\n\t\tdes: \"帮助界面\",\r\n\t},\r\n\t\r\n}","module.exports = {\r\n\r\n    \"GameLobbyLoginScene.fire.1\": \" \",\r\n    \"GameLobbyLoginScene.fire.2\": \"Resource update, please wait.....\",\r\n    \"fish.prefab.1\": \"Up to 60,000 gold coins\\ncan be used in the fishery\",\r\n    \"fish.prefab.2\": \"Up to 130,000 gold coins\\ncan be used in the fishery\",\r\n    \"fish.prefab.3\": \"Up to 300,000 gold coins\\ncan be used in the fishery\",\r\n    \"fish.prefab.4\": \"Up to 600,000 gold coins\\ncan be used in the fishery\",\r\n    \"fish.prefab.5\": \"Single click to switch the\\nnumber of bombs used\",\r\n    \"fish.prefab.6\": \"Double the rate of fire\\nafter use\",\r\n    \"fish.prefab.7\": \"Use to lock any fish\\nin the fishery\",\r\n    \"fish.prefab.8\": \"Use to freeze all the fish\\nin the fishery\",\r\n    \"fish.prefab.T1\": \"Copper Bomb\",\r\n    \"fish.prefab.T2\": \"Super Bomb\",\r\n    \"fish.prefab.T3\": \"Gold Bomb\",\r\n    \"fish.prefab.T4\": \"Silver Bomb\",\r\n    \"fish.prefab.T5\": \"Bomb use\",\r\n    \"fish.prefab.T6\": \"Rapid\",\r\n    \"fish.prefab.T7\": \"Locked\",\r\n    \"fish.prefab.T8\": \"Frozen\",\r\n    \"fish.prefab.M1\": \" \",\r\n    \"fish.prefab.M2\": \" \",\r\n    \"fish.prefab.M3\": \" \",\r\n    \"fish.prefab.M4\": \" \",\r\n\r\n    \"fish.prefab.rule1\": \"Random kills in the fishery\\ncan be rewarded\",\r\n    \"fish.prefab.rule2\": \"Random hits in the fishery will\\ndrop bonus and use\\nhigh-powered cannons to\\ndrop more easily\",\r\n    \"fish.prefab.rule3\": \"Use bombs to get a lot of\\ngold coins\",\r\n    \"fish.prefab.rule4\": \"\\\"BombRoom\\\" kill any fish\\nChance to crit up to 5 times\\n crit 1 line tops 5 lines\",//\r\n    \"fish.prefab.rule5\": \"Killing fish with chain lightning\\ncan capture similar fish\",\r\n    \"fish.prefab.rule6\": \"Successful capture captures\\nall small fish in the screen\",\r\n    \"fish.prefab.ruleT1\": \"bonus\",//\r\n    \"fish.prefab.ruleT2\": \"God of wealth\",\r\n    \"fish.prefab.ruleT3\": \"Bomb\",\r\n    \"fish.prefab.ruleT4\": \"Crit doubled\",\r\n    \"fish.prefab.ruleT5\": \"Chain lightning\",\r\n    \"fish.prefab.ruleT6\": \"Electric eel\",\r\n    \"fish.prefab.ruleI4\": \"*5\",\r\n    \"FishTypeView.1\": \"X\",\r\n\r\n    \"FreeGoldLayer.1\": \"Remaining times of get reward：\",\r\n    \"FreeGoldLayer.2\": \"The total amount of coins is less than \",\r\n    \"FreeGoldLayer.3\": \"Your game currency amount has not reached the claim requirement!\",\r\n    \"FreeGoldLayer.4\": \"Insufficient number of remaining times\",\r\n    \"FreeGoldLayer.prefab.1\": \"Normal reward：\\n\\nVIP bonus：\",\r\n    \"FreeGoldLayer.prefab.2\": \"VIP bonus\",\r\n    \"PiggyBankLayer.prefab.1\": \"Max Storage\",\r\n    \"PiggyBankLayer.prefab.2\": \" Current VIP Storage：\",\r\n\r\n    \"ChangeCannonLayer.prefab.1\": \"No function\",\r\n    \"ChangeCannonLayer.prefab.2\": \"VIP2 exclusive cannon\",\r\n    \"ChangeCannonLayer.prefab.3\": \"VIP3 exclusive cannon\",\r\n    \"ChangeCannonLayer.prefab.4\": \"VIP4 exclusive cannon\",\r\n    \"ChangeCannonLayer.prefab.5\": \"VIP5 exclusive cannon\\nFreeze skill duration +5 seconds\",\r\n    \"ChangeCannonLayer.prefab.6\": \"VIP6 exclusive cannon\",\r\n    \"ChangeCannonLayer.prefab.7\": \"VIP7 exclusive cannon\\nIncrease capture probability\",\r\n\r\n    \"ExchangeRedPacketLayer.prefab.1\": \"Use tickets\",\r\n    \"ExchangeRedPacketLayer.1\": \" \",\r\n    \"ExchangeRedPacketLayer.2\": \" \",\r\n    \"ExchangeRedPacketLayer.3\": \"Insufficient bonus\",\r\n    \"ExchangeRedPacketLayer.4\": \"Do you want to exchange?\",\r\n    \"ExchangeRedPacketLayer.5\": \"Successful exchange\",\r\n    \"ExchangeRedPacketLayer.6\": \"Congratulations player <color=#0fffff>\",\r\n    \"ExchangeRedPacketLayer.7\": \"</color> exchange \",\r\n\r\n    \"NewGuideLayer0.prefab.1\": \"Wow! A lot of fun fishing games!\\nLet's go to the fishery to play.\",\r\n    \"NewGuideLayer0.prefab.2\": \" \",\r\n    \"NewGuideLayer0.prefab.3\": \" \",\r\n    \"NewGuideLayer1.prefab.1\": \"Cannon can accumulate progress energy to get rewards! Look at it quickly, the progress energy will be full soon.\",\r\n    \"NewGuideLayer1.prefab.2\": \"Click on the screen to fire!\",\r\n    \"NewGuideLayer2.prefab.1\": \"The progress energy bar is full, \\ncongratulations on getting a \\nreward for us to open it!\",\r\n    \"NewGuideLayer3.prefab.1\": \"Wow! Good luck, let's continue\\nto get rewards!\",\r\n    \"NewGuideLayer3.prefab.2\": \" \",\r\n    \"NewGuideLayer5.prefab.1\": \"Click here to open the Newbie\\nBonus.\",\r\n    \"NewGuideLayer6.prefab.1\": \"Click here to claim the Newbie\\nBonus.\",\r\n\r\n    \"GameToolProxy.1\": \"reconnecting\",\r\n\r\n    \"OutRoomView.1\": \"Captain, you can get a reward by launching another <color=#D57520>\",\r\n    \"OutRoomView.2\": \"</c> guns! Do you continue to fire?\",\r\n\r\n    \"tanchukuang.prefab.1\": \"Do you really want to leave?\",\r\n\r\n    \"fishUiLayer.1\": \"Frozen needs vip1 to use\",\r\n    \"fishUiLayer.2\": \"Rapid need vip1 to use\",\r\n    \"fishUiLayer.3\": \"Locked need vip1 to use\",\r\n    \"fishUiLayer.Tip1\": \"Insufficient skills (check the usage quantity)\",\r\n    \"fishUiLayer.Tip2\": \"Insufficient bombs (check the usage quantity)\",\r\n    \"fishUiLayer.Tip3\": \"This skill is cooling down\",\r\n\r\n    \"CompetitionRoomRink.prefab.1\": \"weekly score：\",\r\n    \"CompetitionRoomRink.prefab.2\": \"daily score：\",\r\n    \"CompetitionRoomRink.prefab.3\": \"today's ranking：\",\r\n    \"CompetitionRoomRink.prefab.4\": \"time：\",\r\n    \"CompetitionRoomRink.prefab.5\": \"score：\",\r\n    \"CompetitionRoomRink.prefab.6\": \"Rankings are refreshed every 10 minutes\",\r\n    \"CompetitionRoomOver.prefab.1\": \"Earn points：\",\r\n    \"CompetitionRoomOver.prefab.2\": \"Earn rewards：\",\r\n    \"CompetitionRoomOver.prefab.3\": \"game over\",\r\n    \"CompetitionRoomBuy.prefab.1\": \"coins remaining：\",\r\n    \"CompetitionRoomBuy.prefab.2\": \"It can only be exchanged once, and the bullets\\nexchanged are only valid in this game\",\r\n    \"CompetitionRoomBuy.prefab.3\": \"coins                 bullets\",\r\n    \"CompetitionRoomBuy.prefab.4\": \"Supplementary bullets\",\r\n    \"CompetitionRoomBuy.prefab.5\": \"end game\",\r\n    \"CompetitionRoomBuy.prefab.6\": \"exchange\",\r\n\r\n    \"game_resource.prefab.1\": \"score\",\r\n    \"redPacketShowAni_0.prefab.1\": \"Congratulations on getting\",\r\n    \"redPacketShowAni_0.prefab.2\": \"bonus\",\r\n\r\n    \"EmailSystemLayer.prefab.1\": \"Up to 60 pieces of information can be saved\",\r\n\r\n    \"UserInfoLayer.1\": \"not enough bombs\",\r\n    \"UserInfoLayer.2\": \"Giving bombs requires VIP1 and above\",\r\n\r\n    \"shopLayer.1\": \"购买成功\",\r\n    \"SendPacketItemLayer.1\": \"Player id can only be numbers\",\r\n\r\n    \"ExchangeRedPacketLayer2.1\": \"You don't have enough tickets\",\r\n    \"ExchangeRedPacketLayer2.2\": \"Exchange successfully, get \",\r\n    \"ExchangeRedPacketLayer2.3\": \" gold coins\",\r\n\r\n    \"CompetitionRoomRinkView.1\": \"Not enough challenges\",\r\n\r\n    \"GameLobbyLoginUI.1\": \"fish\",\r\n\r\n    \"fishPlayer.1\": \"Do you have insufficient gold coins to recharge?\",\r\n    \"fishPlayer.2\": \"You need to carry at least \",\r\n    \"fishPlayer.3\": \" gold coins to increase the turret multiplier\",\r\n\r\n    \"fishjiFenBanMatch.1\": \"completed\",\r\n\r\n    \"fishAnimationLayer.1\": \"*\",\r\n    \"fishAnimationLayer.2\": \" \",\r\n    \"fishAnimationLayer.3\": \"Get \",\r\n    \"fishAnimationLayer.4\": \" tickets\",\r\n\r\n    \"LotteryTicketTitle.prefab.1\": \"My ticket：\",\r\n    \"LotteryTicketTitle.prefab.2\": \"Use bombs to have a\\n chance to get a ticket\",\r\n    // \"LotteryTicketTitle.prefab.2\": \"使用鱼雷有概率获得夺宝券\",\r\n    \"RedPacketRule.prefab.1\": \"You can get 0.1, 0.2, 0.3 and 1 rewards\",\r\n    \"RedPacketRule.prefab.2\": \"You can get 1, 2, 3 and 8 rewards\",\r\n    \"RedPacketRule.prefab.3\": \"You can get 4, 8, 12 and 88 rewards\",\r\n    \"RedPacketRule.prefab.4\": \"While killing fish to get gold coins, you can get an additional chance to draw bonus. When the bonus energy bar reaches the corresponding level, you can draw bonus. <color=#FFFF00>you can get up to 88 bonus</color>, and the progress of exiting the game will be saved for 30 minutes\",\r\n\r\n    \"ExchangeRedPacketLayer2.prefab.1\": \"Remaining tickets:\",\r\n    \"ExchangeRedPacketLayer2.prefab.2\": \"ticket                      gold coins\",\r\n    \"ExchangeRedPacketLayer2.prefab.3\": \"1 ticket = 20,000 gold coins\",\r\n\r\n    \"RegistAccountLayer.1\": \"Phone number can not be blank!\",\r\n    \"RegistAccountLayer.2\": \"Please enter 11-digit mobile phone number!\",\r\n    \"RegistAccountLayer.3\": \"Please enter a valid phone number!\",\r\n    \"RegistAccountLayer.4\": \"get verification code\",\r\n    \"RegistAccountLayer.5\": \"Code can not be empty!\",\r\n    \"RegistAccountLayer.6\": \"Verification code can only be numbers\",\r\n\r\n    \"RedPacketOpen.prefab.1\": \"Completing the bonus automatically draws the bonus\",\r\n    //\"RedPacketOpen.prefab.1\": \"完成该福卡进度自动抽取福卡\",\r\n};","/*\r\n\t滚轴配置\r\n*/\r\nlet config = {};\r\nconfig.cellHeight   = 137\r\nconfig.cellWidth    = 164\r\n\r\nconfig.reelSpinConfig = {\r\n    maxSpeed           : -60 * 60,                  // 最大速度\r\n\r\n    // spin\r\n    spinDelay          : 0,                         // 滚轴开始滚动的间隔时间\r\n    speedUpTime        : 20 / 60,                   // 开始滚动时候的加速时间\r\n\r\n    upBounce           : config.cellHeight * 2 / 3, // 上弹位移\r\n    upBounceMaxSpeed   : 6 * 60,                    // 上弹的最大速度\r\n    upBounceTime       : 0,                         // 上弹时间\r\n\r\n    // stop\r\n    stopDelay          : (20 / 60 ) ,                   // 滚轴停止的延迟时间\r\n    speedDownTime      : 30 / 60,                   // 减速时间\r\n\r\n    downBounce         : config.cellHeight * 2 / 3, // 下砸位移\r\n    downBounceMaxSpeed : 6 * 60,                    // 下砸的最大速度\r\n    downBounceTime     : 15 / 60,                   // 下砸时间\r\n}\r\n\r\nconfig.gameConfig = {\r\n    // 符号\r\n    [\"game_symbol_coinfig\"] : {\r\n        [\"normal_symbol_list\"]  : [\r\n            0,1,2,3,4,5,6,7,8,9,10,11\r\n        ],\r\n\r\n        [\"special_symbol_config\"] : {\r\n            [1] : {\r\n                [\"min_cnt\"] : 3,\r\n                [\"type\"]\t: 2,\r\n                [\"col_set\"] : [1,1,1,1,1],           \r\n            },\r\n            [11] : {\r\n                [\"min_cnt\"] : 3,\r\n                [\"type\"]\t: 2,\r\n                [\"col_set\"] : [1,1,1,1,1],  \r\n            },\r\n\r\n        },\r\n    },\r\n\r\n    // 类型\r\n    [\"game_type\"] : \"payLine\",\r\n    [\"game_type_config\"] : {\r\n        [\"pay_lines\"] : [\r\n\t\t\t[1, 1, 1, 1, 1], [ 0, 0, 0, 0, 0 ], [ 2, 2, 2, 2, 2 ], [ 0, 1, 2, 1, 0 ], [ 2, 1, 0, 1, 2 ],\r\n\t\t\t[ 0, 0, 1, 0, 0 ], [ 2, 2, 1, 2, 2 ], [ 1, 2, 2, 2, 1 ], [ 1, 0, 0, 0, 1 ], [ 0, 1, 1, 1, 0 ],\r\n\t\t\t[ 2, 1, 1, 1, 2 ], [ 1, 1, 0, 1, 1 ], [ 1, 1, 2, 1, 1 ], [ 1, 0, 1, 0, 1 ], [ 1, 2, 1, 2, 1 ],\r\n\t\t\t[ 0, 1, 0, 1, 0 ], [ 2, 1, 2, 1, 2 ], [ 0, 0, 1, 2, 2 ], [ 2, 2, 1, 0, 0 ], [ 0, 2, 0, 2, 0 ]\r\n        ],\r\n        [\"line_cnt\"] : 20\r\n    },\r\n\r\n    // 面板\r\n    [\"boardConfig\"] : [\r\n        {\r\n            [\"reel_single\"] : true,\r\n            [\"allow_over_range\"] : false,\r\n            [\"colCnt\"] : 5,\r\n            [\"rowCnt\"] : 3,\r\n            [\"cellWidth\"] : config.cellWidth,\r\n            [\"cellHeight\"] : config.cellHeight,\r\n            [\"reelConfig\"] : [\r\n                {\r\n                    [\"base_pos\"] : cc.v2(260, 173), // 左下角坐标\r\n                },\r\n            ],\r\n        },\r\n    ]\r\n}\r\n\r\nmodule.exports = {\r\n\t'config': config\r\n};","let appFacade = require('FishFacade');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        Button_back: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        Button_setting: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        FileNode_setting: {\r\n            type: cc.Node,\r\n            default: null,\r\n        },\r\n        Panel_bg: {\r\n            type: cc.Node,\r\n            default: null,\r\n        },\r\n        Button_spin: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        PanelTimes: {\r\n            type: cc.Node,\r\n            default: null,\r\n        },\r\n        Text_score: {\r\n            type: cc.Label,\r\n            default: null,\r\n        },\r\n        Text_total_bet: {\r\n            type: cc.Label,\r\n            default: null,\r\n        },\r\n        Text_total_win: {\r\n            type: cc.Label,\r\n            default: null,\r\n        },\r\n        Text_time_left: {\r\n            type: cc.Label,\r\n            default: null,\r\n        },\r\n        Button_sub_bet: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        Button_add_bet: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        Button_max_bet: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        Button_stop_spin: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n\r\n        Button_times_10: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        Button_times_20: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        Button_times_50: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        Button_times_100: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        Button_times_500: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        Button_times_fast: {\r\n            type: cc.Button,\r\n            default: null,\r\n        },\r\n        Sprite_total_bet: {\r\n            type: cc.Node,\r\n            default: null,\r\n        },\r\n\r\n        Button_rule: {\r\n            type: cc.Node,\r\n            default: null,\r\n        },\r\n\r\n        Button_sound: {\r\n            type: cc.Toggle,\r\n            default: null,\r\n        },\r\n        Button_music: {\r\n            type: cc.Toggle,\r\n            default: null,\r\n        },\r\n        \r\n        \r\n        \r\n    },\r\n\r\n\r\n    onLoad () {\r\n\r\n        this._btnBack = this.Button_back;\r\n        this._btnSetting = this.Button_setting\r\n        this._nodeSetting = this.FileNode_setting\r\n        this._btnSettingRule = this.Button_rule\r\n\r\n        this._btnSound = this.Button_sound\r\n        this._btnMusic = this.Button_music\r\n\r\n        this._panelTimes = this.PanelTimes\r\n        this._textUserScore = this.Text_score\r\n        this._textTotalBet = this.Text_total_bet\r\n        this._textTotalWin = this.Text_total_win\r\n        this._textTimesLeft = this.Text_time_left\r\n\r\n        \r\n        this._btnSubBet = this.Button_sub_bet\r\n        this._btnAddBet = this.Button_add_bet\r\n        this._btnMaxBet = this.Button_max_bet\r\n        this._btnStartSpin = this.Button_spin\r\n        this._btnStopSpin = this.Button_stop_spin\r\n        let btnTimes10 = this.Button_times_10\r\n        let btnTimes20 = this.Button_times_20\r\n        let btnTimes50 = this.Button_times_50\r\n        let btnTimes100 = this.Button_times_100\r\n        let btnTimes500 = this.Button_times_500\r\n        let btn_times_fast = this.Button_times_fast\r\n\r\n        \r\n\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this);\r\n        this._btnBack.node.on('click', this.BackButtonClickEvent, this);\r\n        this._btnSetting.node.on('click', this.SettingButtonClickEvent, this);\r\n        this._btnSettingRule.on('click', this.SettingRuleButtonClickEvent, this);\r\n\r\n        this._btnSound.node.on('click', this.onClickSound, this);\r\n        this._btnMusic.node.on('click', this.onClickMusic, this);\r\n        /////////////////////////游戏部分//////////////////////////////\r\n        // 开始滚动\r\n        this._btnStartSpin.node.on(cc.Node.EventType.TOUCH_START, this.SpinButtonClickEvent, this);\r\n        this._btnStartSpin.node.on(cc.Node.EventType.TOUCH_END, this.SpinButtonClickEvent, this);\r\n        this._btnStartSpin.node.on(cc.Node.EventType.TOUCH_CANCEL, this.SpinButtonClickEvent, this);\r\n        //停止转动\r\n        this._btnStopSpin.node.on('click', this.onClickStopSpin, this);\r\n        \r\n        btnTimes10.node.on('click', this.onClickAutoSpin, this);\r\n        btnTimes20.node.on('click', this.onClickAutoSpin, this);\r\n        btnTimes50.node.on('click', this.onClickAutoSpin, this);\r\n        btnTimes100.node.on('click', this.onClickAutoSpin, this);\r\n        btnTimes500.node.on('click', this.onClickAutoSpin, this);\r\n        btn_times_fast.node.on('click', this.onClickAutoSpin, this);\r\n\r\n        this._btnSubBet.node.on('click', this.onClickSubBet, this);\r\n        this._btnAddBet.node.on('click', this.onClickAddBet, this);\r\n        this._btnMaxBet.node.on('click', this.onClickMacBet, this);\r\n\r\n        //////////////////////////////////////////////////////////////\r\n\r\n        appFacade.registerMediator(this);\r\n        this._globalDataProxy = appFacade.retrieveProxy('FishGlobalDataProxy');\r\n\r\n        this.updateUIofUserInfo()\r\n        \r\n    },\r\n\r\n    listNotificationInterests: function () {\r\n        return [{\r\n            evtType: \"SHOW_DIALOG\", //发送提示框\r\n            callback: this.showDialog\r\n        },\r\n        {\r\n            evtType: \"UPDATE_UI_OF_USER_INFO\", //更新个人信息UI数据\r\n            callback: this.updateUIofUserInfo\r\n        },\r\n        {\r\n            evtType: \"SET_TOTAL_WIN\", //\r\n            callback: this.setTotalWin\r\n        },\r\n        {\r\n            evtType: \"CHANGE_GAME_BTN_STATE\", //\r\n            callback: this.changeGameBtnState\r\n        },\r\n        {\r\n            evtType: \"SET_TOTAL_BET\", //\r\n            callback: this.setTotalBet\r\n        },\r\n        {\r\n            evtType: \"CHANGE_SPIN_BTN_STATE\", //\r\n            callback: this.changeSpinBtnState\r\n        },\r\n        {\r\n            evtType: \"UPDATE_SCORE\", //\r\n            callback: this.updateScore\r\n        },\r\n        {\r\n            evtType: \"SHOW_TOTAL_TEXT\", //\r\n            callback: this.showTotalText\r\n        },\r\n        {\r\n            evtType: \"SET_AUTO_PLAY_REMAINING\", //\r\n            callback: this.setAutoplayRemaining\r\n        },\r\n        {\r\n            evtType: \"SHOW_TOTAL_BET\", //\r\n            callback: this.showTotal_bet\r\n        },\r\n        ];\r\n        \r\n    },\r\n\r\n    start () {\r\n        \r\n        this.node.parent.parent.getComponent(\"GameView\").GameUIManager.attachUI(this.node.parent.parent)\r\n    },\r\n\r\n    showDialog: function (message,func){\r\n        this.node.parent.parent.getComponent(\"GameView\").GameUIManager.openTip(message,func)\r\n    },\r\n\r\n    showTotal_bet(bshow){\r\n        this.Sprite_total_bet.opacity = bshow ? 255 : 0\r\n    },\r\n\r\n    // 总注\r\n    setTotalBet(_num){\r\n        let num = Help.checknumber(_num)\r\n        if (this._textTotalBet) {\r\n            //this._textTotalBet.string = Help.FormatScore(num)\r\n            this._textTotalBet.string = num / SCORE_RATIO;\r\n            \r\n        }\r\n    },\r\n\r\n    // 更新个人信息UI数据\r\n    updateUIofUserInfo(){\r\n        if (this._textUserScore) {\r\n            this._textUserScore.string = Help.FormatScore(this._globalDataProxy.getLogonSuccessData().lScore)\r\n        }\r\n\r\n    },\r\n\r\n    updateScore(value){\r\n        if (this._textUserScore) {\r\n            this._globalDataProxy.getLogonSuccessData().lScore = this._globalDataProxy.getLogonSuccessData().lScore + value\r\n            this._textUserScore.string = Help.FormatScore(this._globalDataProxy.getLogonSuccessData().lScore)\r\n        }\r\n    },\r\n\r\n    onTouchBegan: function (event){\r\n        if(this._nodeSetting.active === true){\r\n            let camera=cc.Camera.main;\r\n            \r\n            let nsp = this._nodeSetting.convertToNodeSpaceAR(camera.getScreenToWorldPoint(event.getLocation()));\r\n            \r\n            let rect = new cc.Rect(this.Panel_bg.x,this.Panel_bg.y,this.Panel_bg.width,this.Panel_bg.height);\r\n            \r\n            if(!rect.contains(nsp)){\r\n                this.hideSettingDialog()\r\n            }; \r\n                 \r\n        }\r\n\r\n        if (this._panelTimes && this._panelTimes.active) {\r\n            let camera=cc.Camera.main;\r\n            let nsp = this._panelTimes.parent.convertToNodeSpaceAR(camera.getScreenToWorldPoint(event.getLocation()));\r\n            let rect = new cc.Rect(this._panelTimes.x,this._panelTimes.y,this._panelTimes.width,this._panelTimes.height);\r\n            if(!rect.contains(nsp)){\r\n                this._panelTimes.active = false\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    BackButtonClickEvent: function () {\r\n        \r\n        //appFacade.sendNotification(\"SetFreeEnterBackAni\",1);\r\n        appFacade.sendNotification(FishConstants.GAME_TABLE_COMMAND,\"sendStandUpData\");\r\n    },\r\n\r\n    SettingButtonClickEvent: function (event) {\r\n        if (!this._nodeSetting.active) {\r\n            this.updateUIofSetting()\r\n            this._nodeSetting.active = true;\r\n            Help.popDialog(this._nodeSetting)\r\n            \r\n        };\r\n    },\r\n\r\n    // 声音\r\n    onClickSound(){\r\n        if (this.node.parent.parent.getComponent(\"GameView\").GameUIManager.BooleffectV){\r\n            this.node.parent.parent.getComponent(\"GameView\").GameUIManager.setEffectV(0)\r\n        }else{\r\n            this.node.parent.parent.getComponent(\"GameView\").GameUIManager.setEffectV(1)\r\n        }\r\n    },\r\n\r\n    // 音乐\r\n    onClickMusic(){\r\n        if (this.node.parent.parent.getComponent(\"GameView\").GameUIManager.BoolmusicV){\r\n            this.node.parent.parent.getComponent(\"GameView\").GameUIManager.setMusicV(0)\r\n        }else{\r\n            this.node.parent.parent.getComponent(\"GameView\").GameUIManager.setMusicV(1)\r\n        }\r\n        //self:updateUIofSetting()\r\n    },\r\n\r\n    // 设置界面开关\r\n    updateUIofSetting(){\r\n\r\n        if (this._btnSound) {\r\n            this._btnSound.isChecked = this.node.parent.parent.getComponent(\"GameView\").GameUIManager.BooleffectV\r\n        }\r\n\r\n        if (this._btnMusic) {\r\n            this._btnMusic.isChecked = this.node.parent.parent.getComponent(\"GameView\").GameUIManager.BoolmusicV\r\n        }\r\n    },\r\n\r\n    SettingRuleButtonClickEvent: function (event) {\r\n        //this.node.parent.parent.getComponent(\"GameView\").GameHelpLayer_Node.active = true\r\n        this.node.parent.parent.getComponent(\"GameView\").GameUIManager.openUI(3)\r\n    },\r\n\r\n    SpinButtonClickEvent: function (event) {\r\n\r\n        if (event.type === \"touchstart\") {\r\n            this._holdTime = 0\r\n            this.timer = cc.director.getScheduler()\r\n            this.timer.schedule(this.CalculateTime, this, 0, false);\r\n            \r\n\r\n        }else if (event.type === \"touchend\"){\r\n            if(this.timer){\r\n                this.timer.unschedule(this.CalculateTime,this);\r\n                this.timer = null\r\n            }\r\n            if (this._holdTime > 60) {\r\n                return\r\n            }\r\n            this.onClickStartSpin()\r\n        }else if (event.type === \"touchcancel\"){\r\n            if(this.timer){\r\n                this.timer.unschedule(this.CalculateTime,this);\r\n                this.timer = null\r\n            }\r\n        }\r\n    },  \r\n    \r\n    CalculateTime(dt){\r\n        this._holdTime = this._holdTime + 1\r\n        if (this._holdTime > 60) {\r\n            this._panelTimes.active = true\r\n        }\r\n    },\r\n \r\n    hideSettingDialog: function () {\r\n        if (this._nodeSetting) {\r\n            \r\n            if (this._nodeSetting.active){\r\n\r\n                Help.hideDialog(this._nodeSetting, null, function(){\r\n                    this._nodeSetting.active = false;\r\n                }.bind(this))\r\n                \r\n            }\r\n            \r\n            \r\n        };\r\n    },\r\n\r\n    // 减注\r\n    onClickSubBet(){\r\n        appFacade.sendNotification(FishConstants.GAME_COMMAND,\"subBet\");\r\n    },\r\n\r\n    // 加注\r\n    onClickAddBet(){\r\n        appFacade.sendNotification(FishConstants.GAME_COMMAND,\"addBet\");\r\n    },\r\n\r\n    // 最大注码\r\n    onClickMacBet(){\r\n        appFacade.sendNotification(FishConstants.GAME_COMMAND,\"maxBet\");\r\n    },\r\n    \r\n    // 开始旋转\r\n    onClickStartSpin(){\r\n        appFacade.sendNotification(FishConstants.GAME_COMMAND,\"startSpin\");\r\n    },\r\n\r\n    // 停止旋转\r\n    onClickStopSpin(){\r\n\r\n        cc.log(\"click stop=========\")\r\n        appFacade.sendNotification(FishConstants.GAME_COMMAND,\"stopSpin\");\r\n        this._btnStopSpin.interactable = false\r\n        this.scheduleOnce(function(){\r\n            this._btnStopSpin.interactable = true\r\n        }.bind(this), 2)\r\n\r\n    },\r\n\r\n    //自动游戏\r\n    onClickAutoSpin(event){\r\n        let times = 0\r\n        if(event.node.name == \"Button_times_10\"){\r\n            times = 10\r\n        }else if (event.node.name == \"Button_times_20\"){\r\n            times = 20\r\n        }else if (event.node.name == \"Button_times_50\"){\r\n            times = 50\r\n        }else if (event.node.name == \"Button_times_100\"){\r\n            times = 100\r\n        }else if (event.node.name == \"Button_times_500\"){\r\n            times = 500\r\n        }else if (event.node.name == \"Button_times_fast\"){\r\n            times = 10000000\r\n        }\r\n\r\n        this._panelTimes.active = false\r\n        appFacade.sendNotification(FishConstants.GAME_COMMAND,\"autoSpin\",times);\r\n    },\r\n\r\n    // 剩余次数\r\n    setAutoplayRemaining(_count){\r\n        let count = Help.checknumber(_count)\r\n        if (this._textTimesLeft && count > 0) {\r\n            this._textTimesLeft.node.active = true\r\n            if (count > 500) {\r\n                this._textTimesLeft.string = \"∞\"\r\n            }\r\n            else{\r\n                this._textTimesLeft.string = count\r\n            }\r\n        }\r\n        else{\r\n            this._textTimesLeft.node.active = false\r\n            this._textTimesLeft.string = 0\r\n        }\r\n    },\r\n\r\n    //总赢\r\n    setTotalWin(num){\r\n        num = Help.checknumber(num)\r\n        if (this._textTotalWin) {\r\n\r\n            let _oldScore = Number(this._textTotalWin.string)\r\n            if (_oldScore === null || _oldScore < 0) {\r\n                _oldScore = 0\r\n            }\r\n\r\n            _oldScore = _oldScore * SCORE_RATIO\r\n\r\n            if (num > _oldScore) {\r\n                cc.log(\"old:\" + _oldScore + \" new:\" + num)\r\n                Help.scorllNumber(this._textTotalWin.node, _oldScore, num, 0.5, function(node,num){\r\n                    this._textTotalWin.string = Help.FormatScore2(num)\r\n                    return\r\n                }.bind(this))\r\n            }\r\n            else{\r\n                //如果是0则置空\r\n                if (num <= 0) {\r\n                    this._textTotalWin.string = \"\"\r\n                    return\r\n                }\r\n            }\r\n            this._textTotalWin.string = Help.FormatScore2(num)\r\n        }\r\n    },\r\n\r\n    // 显示spin or stop\r\n    changeSpinBtnState(spin){\r\n\r\n        if (this._btnStartSpin) {\r\n            this._btnStartSpin.node.active = spin\r\n        }\r\n    \r\n        if (this._btnStopSpin) {\r\n            this._btnStopSpin.node.active = !spin\r\n        }\r\n    },\r\n\r\n    // 设置按钮状态\r\n    changeGameBtnState(enable){\r\n\r\n        let enableColor = new cc.Color(255, 255, 255)\r\n        let disableColor = new cc.Color(188, 188, 188)\r\n\r\n        if (this._btnBack) {\r\n            this._btnBack.interactable = enable\r\n            if (enable) {\r\n                this._btnBack.node.color = enableColor\r\n            }\r\n            else{\r\n                this._btnBack.node.color = disableColor\r\n            }\r\n        }\r\n\r\n        if (this._btnStartSpin) {\r\n            this._btnStartSpin.interactable = enable\r\n            if  (enable) {\r\n                this._btnStartSpin.node.on(cc.Node.EventType.TOUCH_START, this.SpinButtonClickEvent, this);\r\n                this._btnStartSpin.node.on(cc.Node.EventType.TOUCH_END, this.SpinButtonClickEvent, this);\r\n                this._btnStartSpin.node.on(cc.Node.EventType.TOUCH_CANCEL, this.SpinButtonClickEvent, this);\r\n            }else{\r\n                this._btnStartSpin.node.off(cc.Node.EventType.TOUCH_START, this.SpinButtonClickEvent, this);\r\n                this._btnStartSpin.node.off(cc.Node.EventType.TOUCH_END, this.SpinButtonClickEvent, this);\r\n                this._btnStartSpin.node.off(cc.Node.EventType.TOUCH_CANCEL, this.SpinButtonClickEvent, this);\r\n            }\r\n\r\n\r\n            if (enable) {\r\n                this._btnStartSpin.node.color = enableColor\r\n            }\r\n            else{\r\n                this._btnStartSpin.node.color = disableColor\r\n            }\r\n        }\r\n\r\n        if (this._btnSubBet) {\r\n            this._btnSubBet.interactable = enable\r\n            if (enable) {\r\n                this._btnSubBet.node.color = enableColor\r\n            }\r\n            else{\r\n                this._btnSubBet.node.color = disableColor\r\n            }\r\n        }\r\n\r\n        if (this._btnAddBet) {\r\n            this._btnAddBet.interactable = enable\r\n            if (enable) {\r\n                this._btnAddBet.node.color = enableColor\r\n            }\r\n            else{\r\n                this._btnAddBet.node.color = disableColor\r\n            }\r\n        }\r\n\r\n        if (this._btnMaxBet) {\r\n            this._btnMaxBet.interactable = enable\r\n            if (enable) {\r\n                this._btnMaxBet.node.color = enableColor\r\n            }\r\n            else{\r\n                this._btnMaxBet.node.color = disableColor\r\n            }\r\n        }\r\n    },\r\n\r\n    showTotalText(bshow){\r\n        if (this._textTotalWin) {\r\n            this._textTotalWin.node.opacity = bshow ? 255 : 0\r\n        }\r\n    },\r\n\r\n\r\n    // update (dt) {},\r\n\r\n    onDestroy: function () {\r\n\t\tappFacade.removeMediator(this.name);\r\n\t},\r\n});\r\n","\r\nlet gameModel_520 = function () {\r\n    this.initGameData()\r\n};\r\ngameModel_520.prototype = {\r\n    constructor: gameModel_520,\r\n    initGameData() {\r\n        this._UnlockRewardID    = 255   //当前解锁id\r\n        this._CanBn             = false //能否BN\r\n        this._isPlayWaitAni     = true  //是否允许播放wait动画\r\n        this.wildList  = null;\r\n        this._GiveAwayCount     = 0     //大于0说明触发免费\r\n        this._recoveryFreeList  = []\r\n        this._BnSenceId         = 255   //场景id（0-3）\r\n        this._isBreakLine       = false\r\n        this._CanFree           = false\r\n        this._wildList          = []\r\n    },\r\n\r\n    ResetBNGameData(){\r\n        this._CanBn                     = false   //能否BN\r\n        this._VerifyMailBox             = 255     //是否在获取保险箱的步步骤\r\n        this._BnSenceId                 = 255     //场景id（0-3）\r\n        this._bRewardGoodChoose         = {}      //场景物品被选择的id\r\n        this._RewardNum                 = 255     //BN目前分数\r\n        this._SkullNum                  = 255     //骷髅头数量\r\n    },\r\n    \r\n};\r\n\r\nmodule.exports = new gameModel_520();\r\n","\r\nlet gameModel = function (gameconfig,parent) {\r\n    this.parent = parent\r\n    this._gameConfig = gameconfig;\r\n    this.initConfig()\r\n};\r\ngameModel.prototype = {\r\n    constructor: gameModel,\r\n\r\n    //初始化\r\n    initConfig(){        \r\n        this.initGameData();\r\n        this.initGameConfig();\r\n    },\r\n\r\n    //初始化游戏数据\r\n    initGameData() {\r\n        //////////////////////////////////\r\n        // 场景数据\r\n        this._baseScore     = 0;\r\n        this._betCount      = 10;\r\n        this._betList       = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        //////////////////////////////////\r\n    \r\n        //////////////////////////////////\r\n        // 下注数据\r\n        this._lineCount     = 20;\r\n        this._betIndex      = 1;\r\n        //////////////////////////////////\r\n    \r\n        //////////////////////////////////\r\n        // 对局数据\r\n        this._spinResult    = null;\r\n        this._totalWin      = 0;\r\n        //////////////////////////////////\r\n    \r\n        //////////////////////////////////\r\n        // reel 滚动数据\r\n        this._fakeItems     = [];            // fake data\r\n        this._resultItems   = [];            // result data\r\n        //////////////////////////////////\r\n    \r\n        //////////////////////////////////\r\n        // 免费游戏数据\r\n        this._freeSpin      = 0;             // 剩余免费次数\r\n        this._freewin       = null;\r\n        //////////////////////////////////\r\n    \r\n        this._autoSpin      = 0;\r\n    \r\n        //当局盈利\r\n        this._curwinscore   = 0;\r\n\r\n    },\r\n\r\n\r\n    //初始化游戏配置\r\n    initGameConfig(){\r\n        // 滚轮配置\r\n        let boardConfig = this.getBoardConfig()\r\n    \r\n        // 符号配置\r\n        this.normalSymbolList = this._gameConfig[\"gameConfig\"][\"game_symbol_coinfig\"][\"normal_symbol_list\"] || [];\r\n        this.specialSymbolConfig = this._gameConfig[\"gameConfig\"][\"game_symbol_coinfig\"][\"special_symbol_config\"] || {}\r\n        this.initPicsAndKeys(this.normalSymbolList)\r\n    \r\n        // 游戏类型\r\n        this.themeType = this._gameConfig[\"gameConfig\"][\"game_type\"]\r\n        this.themeTypeConfig = this._gameConfig[\"gameConfig\"][\"game_type_config\"]\r\n        this.initThemeType(this.themeType, this.themeTypeConfig)\r\n    },\r\n\r\n    //滚盘数据\r\n    getBoardConfig(){\r\n\r\n        if (this.boardConfigList) {\r\n            return this.boardConfigList;\r\n        };\r\n    \r\n        let borderConfig = Help.deepClone(this._gameConfig[\"gameConfig\"][\"boardConfig\"]);\r\n\r\n        for (let idx = 0; idx < borderConfig.length; idx++) {\r\n            let temp = borderConfig[idx];\r\n            if (!temp) {\r\n                return;\r\n            };\r\n    \r\n            let newReelConfig = [];\r\n\r\n            for (let [_,posList] of Object.entries(temp.reelConfig)) {\r\n                for (let col = 0; col < temp.colCnt; col++) {\r\n                    let oneConfig = {};\r\n                    oneConfig[\"base_pos\"] = cc.v2((col) * temp[\"cellWidth\"] + posList[\"base_pos\"].x, posList[\"base_pos\"].y);\r\n                    oneConfig[\"adjust_pos\"] = posList[\"adjust_pos\"] || cc.v2(0, 0);\r\n                    oneConfig[\"cellWidth\"] = temp.cellWidth;\r\n                    oneConfig[\"cellHeight\"] = temp.cellHeight;\r\n                    oneConfig[\"symbolCount\"] = temp.rowCnt;\r\n                    newReelConfig.push(oneConfig);\r\n                };  \r\n                borderConfig[idx][\"colReelCnt\"] = temp.colCnt;\r\n                borderConfig[idx][\"reelConfig\"] = newReelConfig;\r\n            };\r\n\r\n\r\n        }\r\n    \r\n        this.boardConfigList = borderConfig;\r\n        return borderConfig;\r\n    },\r\n\r\n\r\n    //符号和符号资源\r\n    initPicsAndKeys(normalSymbolList){\r\n        this._symbolPic = {};\r\n        this._symbolKey = [];\r\n\r\n        for (let [_,theSymbol] of Object.entries(normalSymbolList)) {\r\n            this._symbolPic[theSymbol] = \"games/game520/texture/symbol/symbol_\" + theSymbol;\r\n            this._symbolKey.push(theSymbol);\r\n        }\r\n    },\r\n\r\n    \r\n    //游戏类型，暂时只有line\r\n    initThemeType(themeType, themeTypeConfig){\r\n\r\n        if (themeType === \"payLine\") {\r\n            this.lines = themeTypeConfig[\"pay_lines\"];\r\n            this.maxLine = this.lines.length;\r\n\r\n        };\r\n\r\n    },\r\n\r\n    \r\n    //获取游戏类型\r\n    getPlayType(){\r\n        return this.themeType || \"payLine\";\r\n    },\r\n\r\n    \r\n    \r\n    //获取全线配置数组\r\n    getPayLines(){\r\n        return this.lines || {};\r\n    },\r\n\r\n    //从随机数组中获取下一个符号\r\n    getNextSprite(col, row){\r\n    \r\n        this._fakeItems[col] = this._fakeItems[col] || []\r\n    \r\n        if (this._fakeItems[col].length === 0) {\r\n            this._fakeItems[col] = this.getRandomKey(col)\r\n        }\r\n\r\n        let retKey = this._fakeItems[col].pop();\r\n\r\n        return retKey\r\n    },\r\n\r\n    \r\n    //随机获取一列符号数组\r\n    getRandomKey(col){\r\n        let n = Help.getRandomInt(10, 20)\r\n        let data = []\r\n        for (let i = 0; i < n;i++) {\r\n            let t = Help.getRandomInt(0, this._symbolKey.length)\r\n            //首列过滤wile\r\n            if (col===0) {\r\n                let tempSymbol = this._symbolKey[t]\r\n                if (tempSymbol===0) {\r\n                    tempSymbol=1\r\n                }\r\n                data.push(tempSymbol);\r\n            }\r\n            else{\r\n                data.push(this._symbolKey[t]);\r\n            }\r\n        }\r\n        return data\r\n    },\r\n\r\n\t//获取押注注码\r\n\tgetTotalBet(){\r\n\t\tif (null === this._betList[this._betIndex - 1]) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\treturn this._baseScore * this._betList[this._betIndex - 1] * this._lineCount\r\n\t}, \r\n    \r\n    \r\n    //调整数据winline数据\r\n    adjustRecData(data){\r\n        let themeType = this.getPlayType()\r\n        this.winLines = null\r\n        if (themeType && themeType === \"payLine\" && data[\"win_lines\"]) {\r\n            let winls = data[\"win_lines\"]\r\n            let winLines = []\r\n            for (let i = 0; i < data[\"win_lines\"].length;i++) {\r\n                let temp = \r\n                        [\r\n                            winls[i][\"line\"],\r\n                            winls[i][\"count\"],\r\n                            winls[i][\"symbol\"],\r\n                        ]\r\n                winLines.push(temp)\r\n            }\r\n            this.winLines = winLines\r\n        }\r\n    },    \r\n\r\n    // 添加假数据\r\n    AddFakeData(data){\r\n        if (data && data[\"item_list\"]) {\r\n            let item_list_down = [[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]]\r\n            for (let index = 0;index < 5;index++) {\r\n                for (let i = 0;i < 6;i++) {\r\n                    let t = Help.getRandomInt(1, this._symbolKey.length)\r\n                    item_list_down[index][i] = this._symbolKey[t]\r\n                }\r\n            }\r\n    \r\n            let item_list_up = [[1],[1],[1],[1],[1]]\r\n            for (let index = 0;index < 5;index++) {\r\n                let t = Help.getRandomInt(1, this._symbolKey.length)\r\n                item_list_up[index][0] = this._symbolKey[t]\r\n            }\r\n    \r\n            this._resultItems = []\r\n            for (let [k,v] of Object.entries(data[\"item_list\"])) {\r\n                let reelList = Help.deepClone(v)\r\n    \r\n                reelList.splice(0, 0, item_list_up[k][0]);\r\n\r\n                for (let i = 0;i < item_list_down[k].length;i++) {\r\n                    //reelList[reelList.length + 1] = item_list_down[k][i]\r\n                    reelList.push(item_list_down[k][i])\r\n                }\r\n                this._resultItems.push(reelList)\r\n            }\r\n        }\r\n    \r\n        return data\r\n    },\r\n    \r\n    \r\n};\r\n\r\nmodule.exports = gameModel;\r\n","let UIModuleInfo;\r\nlet AudioConf;\r\n\r\nlet gameUIManager = function (kindId) {\r\n\r\n    if (gameUIManager.instance) {\r\n        return gameUIManager.instance;\r\n    }\r\n    gameUIManager.instance = this;\r\n\r\n    this.kindId = kindId\r\n    UIModuleInfo = require(\"UIModuleInfo_\" + kindId)\r\n    AudioConf = require(\"AudioConf_\" + kindId)\r\n    this.init()\r\n    this.BoolmusicV = true\r\n    this.BooleffectV = true\r\n};\r\ngameUIManager.prototype = {\r\n    constructor: gameUIManager,\r\n\r\n    init() {\r\n        this._openList = {}                      //窗口打开类表(已经打开的UI)\r\n        this._curOpenUI = null                   //最近打开的ui\r\n        this._preUI = null                       //前一个打开的ui\r\n        this.uiOrder = 10\r\n    },\r\n\r\n    closeAll() {\r\n        this.init()\r\n    },\r\n\r\n    attachUI(scene) {\r\n        if (this._uiLayer) {\r\n\r\n        } else {\r\n            this.init()\r\n            this._uiLayer = new cc.Node()\r\n            this.getAudioEngineData()\r\n            //scene.addChild(this._uiLayer, 960)\r\n            cc.game.addPersistRootNode(this._uiLayer)\r\n            this._uiLayer.x = scene.width / 2\r\n            this._uiLayer.y = scene.height / 2\r\n        }\r\n\r\n    },\r\n\r\n    removeUI() {\r\n        this._uiLayer = null\r\n    },\r\n\r\n    openUI(viewId, data) {\r\n\r\n        let viewInfo = UIModuleInfo[viewId]//UIInfoConst[id]\r\n        if (viewInfo) {\r\n\r\n            let view = this._openList[viewId]\r\n            this._curViewID = viewId\r\n\r\n            if (view) {\r\n                view.getComponent(viewInfo.viewName).init(data);\r\n                this._preUI = this._curOpenUI\r\n                this._curOpenUI = view\r\n            }\r\n            else {\r\n                this.uiOrder = viewInfo.Zorder\r\n                //this._openList[viewId] = {}\r\n                cc.resources.load(viewInfo.csbRes, cc.Prefab, (err, prefab) => {\r\n                    cc.log(\"loadRes\", viewId)\r\n                    if (!this._openList[viewId]) {\r\n                        let view = cc.instantiate(prefab);\r\n                        this._openList[viewId] = view\r\n                        this._uiLayer.addChild(view, this.uiOrder);\r\n                        view.getComponent(viewInfo.viewName).init(data);\r\n                        view.viewId = viewId\r\n                        view.kindId = this.kindId\r\n                        this._preUI = this._curOpenUI\r\n                        this._curOpenUI = view\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n        else {\r\n            cc.log(\"视图创建失败，检查配置！\")\r\n            cc.log(\"viewId = \", viewId)\r\n\r\n        }\r\n\r\n    },\r\n\r\n    setUITop(viewId) {\r\n\r\n    },\r\n\r\n    openTip(str, callback, data) {\r\n        this.openUI(2, [str, callback, data])\r\n    },\r\n\r\n    openTipEffect(str) {\r\n        cc.resources.load(\"loadRes/ui/TipsEffect\", cc.Prefab, (err, prefab) => {\r\n            let TipsEffect = cc.instantiate(prefab);\r\n            this._uiLayer.addChild(TipsEffect, 100)\r\n            let TipsLabel = TipsEffect.getChildByName(\"TipsLabel\").getComponent(\"cc.Label\")\r\n            TipsLabel.string = str\r\n            TipsEffect.runAction(cc.sequence(cc.moveBy(1, cc.v2(0, 40)), cc.removeSelf()))\r\n        });\r\n    },\r\n\r\n    getUIById(viewId) {\r\n        return this._openList[viewId] //or cc.log(\"this view is not added\")gameUIManager\r\n    },\r\n\r\n    closeUI(viewId) {\r\n        let view = this._openList[viewId]\r\n        if (!view) { return }\r\n        this._openList[viewId] = undefined\r\n        view.removeFromParent()\r\n        view.destroy()\r\n    },\r\n\r\n    setMusicV(volume) {\r\n        this.musicV = volume\r\n        cc.audioEngine.setMusicVolume(volume)\r\n        if (this.musicV < 0.1) {\r\n            if (this.BoolmusicV) {\r\n                this.BoolmusicV = false\r\n                cc.audioEngine.pauseMusic()\r\n            }\r\n        }\r\n        else {\r\n            if (!this.BoolmusicV) {\r\n                this.BoolmusicV = true\r\n                cc.audioEngine.resumeMusic()\r\n            }\r\n        }\r\n        this.saveAudioEngineData()\r\n    },\r\n\r\n    setEffectV(volume) {\r\n        this.effectV = volume\r\n        cc.audioEngine.setEffectsVolume(volume)\r\n        if (this.effectV < 0.1) {\r\n            this.BooleffectV = false\r\n        }\r\n        else {\r\n            this.BooleffectV = true\r\n        }\r\n        this.saveAudioEngineData()\r\n    },\r\n    saveAudioEngineData() {\r\n        let baseData = [this.musicV, this.effectV]\r\n        let baseData1 = JSON.stringify(baseData); //将json格式转换成string\r\n        cc.sys.localStorage.setItem(\"AudioEngineData\", baseData1)\r\n    },\r\n    getAudioEngineData() {\r\n        let baseData = cc.sys.localStorage.getItem(\"AudioEngineData\"); //从本地读取数据\r\n        if (baseData) {\r\n            baseData = JSON.parse(baseData); //将string转换成json\r\n            this.musicV = baseData[0]\r\n            this.effectV = baseData[1]\r\n        }\r\n        else {\r\n            this.musicV = 0.5\r\n            this.effectV = 0.5\r\n        }\r\n        if (this.musicV < 0.1) {\r\n            this.BoolmusicV = false\r\n        }\r\n        else {\r\n            this.BoolmusicV = true\r\n        }\r\n        if (this.effectV < 0.1) {\r\n            this.BooleffectV = false\r\n        }\r\n        else {\r\n            this.BooleffectV = true\r\n        }\r\n\r\n        cc.audioEngine.setMusicVolume(this.musicV)\r\n        cc.audioEngine.setEffectsVolume(this.effectV)\r\n    },\r\n    playAudio(name, isLoop) {\r\n        let audioInf = AudioConf[name]\r\n        if (audioInf) {\r\n            let path = audioInf.filepath + \"/\" + audioInf.filename\r\n            if (audioInf.isbg) {\r\n                if (this.BoolmusicV===false) {\r\n                    return\r\n                }\r\n                cc.resources.load(path, cc.AudioClip, (err, res) => {\r\n                    // cc.log(\"path ======= \", path)\r\n                    cc.audioEngine.playMusic(res, isLoop || true);\r\n                });\r\n            }\r\n            else {\r\n                if (this.BooleffectV===false) {\r\n                    return\r\n                }\r\n                cc.resources.load(path, cc.AudioClip, (err, res) => {\r\n                    // cc.log(\"path ======= \", path)\r\n                    cc.audioEngine.playEffect(res, isLoop);\r\n                });\r\n            }\r\n\r\n\r\n        }\r\n        else\r\n            cc.log(\"声音配置错误！！\", name)\r\n    },\r\n    saveAccountData(account, password) {\r\n        let code = password\r\n        let c = String.fromCharCode(code.charCodeAt(0) + code.length);\r\n        for (let i = 1; i < code.length; i++) {\r\n            c += String.fromCharCode(code.charCodeAt(i) + code.charCodeAt(i - 1));\r\n        }\r\n        password = escape(c)\r\n\r\n        let baseDataObject = [account, password]\r\n        let baseData = JSON.stringify(baseDataObject); //将json格式转换成string\r\n        cc.sys.localStorage.setItem(\"AccountData\", baseData)\r\n    },\r\n    getAccountData() {\r\n        let baseDataObject = {}\r\n        let baseData = cc.sys.localStorage.getItem(\"AccountData\"); //从本地读取数据\r\n        if (baseData) {\r\n            baseData = JSON.parse(baseData); //将string转换成json\r\n            let account = baseData[0]\r\n            let password = baseData[1]\r\n            let code = password\r\n            code = unescape(code);\r\n            let c = String.fromCharCode(code.charCodeAt(0) - code.length);\r\n            for (let i = 1; i < code.length; i++) {\r\n                c += String.fromCharCode(code.charCodeAt(i) - c.charCodeAt(i - 1));\r\n            }\r\n            password = c\r\n            baseDataObject.account = account\r\n            baseDataObject.password = password\r\n        }\r\n        return baseDataObject\r\n    },\r\n    saveShopOrdersWeChat(baseDataObject) {\r\n        let baseData = JSON.stringify(baseDataObject); //将json格式转换成string\r\n        cc.sys.localStorage.setItem(\"ShopOrdersWeChat2\", baseData)\r\n    },\r\n    getShopOrdersWeChat() {\r\n        let baseDataObject = []\r\n        let baseData = cc.sys.localStorage.getItem(\"ShopOrdersWeChat2\"); //从本地读取数据\r\n        if (baseData) {\r\n            baseDataObject = JSON.parse(baseData); //将string转换成json\r\n            return baseDataObject\r\n        }\r\n        return baseDataObject\r\n    },\r\n    saveShopOrdersWeChatCheck(baseDataObject) {\r\n        let baseData = JSON.stringify(baseDataObject); //将json格式转换成string\r\n        cc.sys.localStorage.setItem(\"ShopOrdersWeChatCheck2\", baseData)\r\n    },\r\n    getShopOrdersWeChatCheck() {\r\n        let baseDataObject = []\r\n        let baseData = cc.sys.localStorage.getItem(\"ShopOrdersWeChatCheck2\"); //从本地读取数据\r\n        if (baseData) {\r\n            baseDataObject = JSON.parse(baseData); //将string转换成json\r\n            return baseDataObject\r\n        }\r\n        return baseDataObject\r\n    },\r\n    saveAccountDataNativeFirst(baseData) {\r\n        cc.sys.localStorage.setItem(\"AccountDataNativeFirst\", baseData)\r\n    },\r\n    getAccountDataNativeFirst() {\r\n        return cc.sys.localStorage.getItem(\"AccountDataNativeFirst\"); //从本地读取数据\r\n    },\r\n    saveDate() {\r\n        cc.sys.localStorage.setItem(\"CarveUpBonusPoolOpenDate1\", new Date().getTime())\r\n    },\r\n    isSameDay() {\r\n        let baseData = cc.sys.localStorage.getItem(\"CarveUpBonusPoolOpenDate1\");\r\n        console.log(\"isSameDay\", baseData)\r\n        if (baseData) {\r\n            let dateA = new Date(Number(baseData));\r\n            let dateB = new Date(new Date().getTime());\r\n            return (dateA.setHours(0, 0, 0, 0)===dateB.setHours(0, 0, 0, 0));\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n\r\n    },\r\n    saveAutoCheckRedPacketTypeIndex(baseData) {\r\n        cc.sys.localStorage.setItem(\"AutoCheckRedPacketTypeIndex\", baseData)\r\n    },\r\n    getAutoCheckRedPacketTypeIndex() {\r\n        return cc.sys.localStorage.getItem(\"AutoCheckRedPacketTypeIndex\"); //从本地读取数据\r\n    },\r\n\r\n    saveNewPlayRedpacketRoomID(baseData) {\r\n        cc.sys.localStorage.setItem(\"NewPlayRedpacketRoomID\", baseData)\r\n    },\r\n    getNewPlayRedpacketRoomID() {\r\n        return cc.sys.localStorage.getItem(\"NewPlayRedpacketRoomID\"); //从本地读取数据\r\n    },\r\n}\r\n\r\nmodule.exports = gameUIManager;\r\n\r\n\r\n\r\n","const Polyglot = require('polyglot');\r\n\r\nlet data = G_LanguageType === 'zh' ? require('zh') : require('en');\r\n// let polyglot = null;\r\nlet polyglot = new Polyglot({phrases: data, allowMissing: true});\r\n\r\n\r\nmodule.exports = {\r\n    /**\r\n     * This method allow you to switch language during runtime, language argument should be the same as your data file name\r\n     * such as when language is 'zh', it will load your 'zh.js' data source.\r\n     * @method init\r\n     * @param language - the language specific data file name, such as 'zh' to load 'zh.js'\r\n     */\r\n    init (language) {\r\n        lang = language;\r\n        data = language === 'zh' ? require('zh') : require('en');\r\n        polyglot.replace(data);\r\n    },\r\n    /**\r\n     * this method takes a text key as input, and return the localized string\r\n     * Please read https://github.com/airbnb/polyglot.js for details\r\n     * @method t\r\n     * @return {String} localized string\r\n     * @example\r\n     *\r\n     * var myText = i18n.t('MY_TEXT_KEY');\r\n     *\r\n     * // if your data source is defined as\r\n     * // {\"hello_name\": \"Hello, %{name}\"}\r\n     * // you can use the following to interpolate the text\r\n     * var greetingText = i18n.t('hello_name', {name: 'nantas'}); // Hello, nantas\r\n     */\r\n    t (key, opt) {\r\n        return polyglot.t(key, opt);\r\n    }\r\n};","let m_PerlinNoise = require('Noise');\r\nlet gfx = cc.gfx;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    // editor: {\r\n    //     executeInEditMode: true\r\n    // },\r\n\r\n    properties: {\r\n        //speed: 50\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    // start2() {\r\n    //     var vfmt = new gfx.VertexFormat([\r\n    //         { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\r\n    //         { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\r\n    //         { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },\r\n    //     ]);\r\n\r\n    //     let mesh = new cc.Mesh();\r\n    //     mesh.init(vfmt, 9, true);\r\n    //     this.mesh = mesh;\r\n\r\n    //     this.vertexes = [\r\n    //         cc.v2(-100, 100), cc.v2(100, 100),\r\n    //         cc.v2(100, -100), cc.v2(-100, -100)\r\n    //     ];\r\n    //     cc.log(JSON.stringify(this.vertexes))\r\n    //     mesh.setVertices(gfx.ATTR_POSITION, this.vertexes);\r\n\r\n    //     mesh.setVertices(gfx.ATTR_UV0, [\r\n    //         cc.v2(0, 0), cc.v2(1, 0),\r\n    //         cc.v2(1, 1), cc.v2(0, 1),\r\n    //     ]);\r\n\r\n    //     this.mesh.setVertices(gfx.ATTR_COLOR, [\r\n    //         cc.color(255, 0, 0, 255), cc.color(255, 0, 0, 255), cc.color(255, 0, 0, 255), cc.color(255, 0, 0, 255),\r\n    //     ]);\r\n\r\n    //     mesh.setIndices([\r\n    //         0, 1, 2, 0, 2, 3,\r\n    //     ]);\r\n\r\n    //     let renderer = this.node.getComponent(cc.MeshRenderer);\r\n    //     if (!renderer) {\r\n    //         renderer = this.node.addComponent(cc.MeshRenderer);\r\n    //     }\r\n    //     renderer.mesh = mesh;\r\n    //     this.mesh = mesh;\r\n    // },\r\n\r\n    start() {\r\n\r\n    },\r\n    setlightLine(Lines) {\r\n        //cc.log(\"setlightLine\", Lines)\r\n        var vfmt = new gfx.VertexFormat([\r\n            { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\r\n            { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\r\n            { name: gfx.ATTR_COLOR, type: gfx.ATTR_TYPE_UINT8, num: 4, normalize: true },\r\n        ]);\r\n\r\n        let mesh = new cc.Mesh();\r\n        mesh.init(vfmt, 9, true);\r\n        this.mesh = mesh;\r\n\r\n        this.m_Time = 0\r\n        this.m_Width = 80\r\n        this.m_Step = 10\r\n        this.m_TextureLength = 100\r\n        this.m_Amplitude0 = 10\r\n        this.m_Frequency0 = 500\r\n        this.m_ProgramState = null\r\n        this.m_TimeFactor = 0.5\r\n        this.m_fTotalAlphaToZeroTime = 1.0\r\n        this.m_fLeaveAlphaToZeroTime = 1.0\r\n        this.dirty = true;\r\n        this.initialCapacity = 0;\r\n        this.m_Vertices = null;\r\n        this.tTriangle = null;\r\n        this.vertexBuffer = null;\r\n        this.indexBuffer = null;\r\n        this.m_Lines = Lines\r\n        \r\n        if (Lines.length > 5) {\r\n            this.m_Step = 10 + (Lines.length - 5) * 2\r\n        }\r\n        // let Line = []\r\n        // Line.lineBegin = cc.v3(-100, -100, 0)\r\n        // Line.lineEnd = cc.v3(100, 100, 0)\r\n        // this.m_Lines.push(Line)\r\n        this.updateMesh()\r\n\r\n        let renderer = this.node.getComponent(cc.MeshRenderer);\r\n        renderer.mesh = mesh;\r\n        //  this.mesh = mesh;\r\n    },\r\n    update(dt) {\r\n        //  if (CC_EDITOR) return;\r\n        if (this.mesh) {\r\n            this.updateMesh()\r\n            this.m_Time += dt;\r\n            if (this.m_Time > 2.5) {\r\n                this.m_Time = 0\r\n            }\r\n        }\r\n    },\r\n    addOneStep(lineBegin, lineEnd, widthOffset, uvBegin, uvEnd, stepType) {\r\n\r\n        // this.vertexesCOLOR[this.m_VertexSize] = cc.Color.RED\r\n        // this.vertexesCOLOR[this.m_VertexSize + 1] = cc.Color.RED\r\n        // this.vertexesCOLOR[this.m_VertexSize + 2] = cc.Color.RED\r\n        // this.vertexesCOLOR[this.m_VertexSize + 3] = cc.Color.RED\r\n\r\n        switch (stepType) {\r\n            case 1:\r\n                {\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineBegin.x, lineBegin.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvBegin, 0.5)\r\n                    this.m_VertexSize += 1;\r\n\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineEnd.x + widthOffset.x, lineEnd.y + widthOffset.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvEnd, 0)\r\n                    this.m_VertexSize += 1;\r\n\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineEnd.x - widthOffset.x, lineEnd.y - widthOffset.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvEnd, 1)\r\n                    this.m_VertexSize += 1;\r\n\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineBegin.x, lineBegin.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvBegin, 0.5)\r\n                    this.m_VertexSize += 1;\r\n\r\n                } break;\r\n            case 3:\r\n                {\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineBegin.x + widthOffset.x, lineBegin.y + widthOffset.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvBegin, 0)\r\n                    this.m_VertexSize += 1;\r\n\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineEnd.x, lineEnd.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvEnd, 0.5)\r\n                    this.m_VertexSize += 1;\r\n\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineEnd.x, lineEnd.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvEnd, 0.5)\r\n                    this.m_VertexSize += 1;\r\n\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineBegin.x - widthOffset.x, lineBegin.y - widthOffset.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvBegin, 1)\r\n                    this.m_VertexSize += 1;\r\n\r\n                } break;\r\n            case 2:\r\n                {\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineBegin.x + widthOffset.x, lineBegin.y + widthOffset.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvBegin, 0)\r\n                    this.m_VertexSize += 1;\r\n\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineEnd.x + widthOffset.x, lineEnd.y + widthOffset.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvEnd, 0)\r\n                    this.m_VertexSize += 1;\r\n\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineEnd.x - widthOffset.x, lineEnd.y - widthOffset.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvEnd, 1)\r\n                    this.m_VertexSize += 1;\r\n\r\n                    this.m_Vertices[this.m_VertexSize] = cc.v2(lineBegin.x - widthOffset.x, lineBegin.y - widthOffset.y)\r\n                    this.vertexesUV0[this.m_VertexSize] = cc.v2(uvBegin, 1)\r\n                    this.m_VertexSize += 1;\r\n                } break;\r\n        }\r\n    },\r\n    updateMesh() {\r\n        if (this.dirty == true) {\r\n            this.dirty = false;\r\n            this.initialCapacity = 0;\r\n            for (let i = 0; i < this.m_Lines.length; ++i) {\r\n                let dir = this.m_Lines[i].lineEnd.sub(this.m_Lines[i].lineBegin)\r\n                let totalLength = dir.mag();\r\n                let stepCount = (totalLength <= this.m_Step * 2) ? 2 : Math.ceil(totalLength / this.m_Step);\r\n                this.initialCapacity += stepCount;\r\n            }\r\n            //cc.log(\"initialCapacity\", this.initialCapacity)\r\n        }\r\n        this.m_VertexSize = 0;\r\n        this.m_Vertices = []\r\n        this.vertexesUV0 = []\r\n        //this.vertexesCOLOR = []\r\n\r\n        // 每段线，每个三角形\r\n        for (let i = 0; i < this.m_Lines.length; ++i) {\r\n            let halfWidth = this.m_Width * 0.5;\r\n            let inverseTextueLength = (this.m_TextureLength != 0) ? (1 / this.m_TextureLength) : 1.0;\r\n\r\n            let lineBegin = this.m_Lines[i].lineBegin\r\n            let lineEnd = this.m_Lines[i].lineEnd\r\n            let dir = lineEnd.sub(lineBegin)\r\n            let totalLength = dir.mag();\r\n            dir.normalizeSelf();\r\n            let invTotalLength = (totalLength != 0) ? (1 / totalLength) : 1.0;\r\n\r\n            let stepCount = (totalLength <= this.m_Step * 2) ? 2 : Math.ceil(totalLength / this.m_Step);\r\n            let step = totalLength / stepCount;\r\n\r\n            // 计算展开朝向，展开朝向应该总是尽量向着相机\r\n            let widthOffset;\r\n            let camForward = cc.v3(0, 0, 1);\r\n            //cc.log(\"step\", step)\r\n            widthOffset = dir;\r\n            widthOffset = widthOffset.cross(camForward);\r\n            //cc.log(\"dir\", JSON.stringify(dir))\r\n            //cc.log(\"widthOffset\", JSON.stringify(widthOffset))\r\n            let stepBegin = lineBegin\r\n            let stepEnd = lineEnd\r\n            let curLength = 0.0\r\n\r\n            for (let j = 0; j < stepCount - 1; ++j) {\r\n                let noiseParam = (this.m_Time * this.m_TimeFactor + curLength * invTotalLength);\r\n                let noise = m_PerlinNoise.generateNoise1D(noiseParam * this.m_Frequency0) * this.m_Amplitude0;\r\n                //cc.log(\"noise\", noise)\r\n                let randomPos = cc.v2(widthOffset.x * noise, widthOffset.y * noise)\r\n                stepEnd = (lineBegin.add(cc.v2(dir.x * (curLength + step), dir.y * (curLength + step)))).add(randomPos)\r\n                //cc.log(\"stepEnd\", JSON.stringify(stepEnd))\r\n                this.addOneStep((j == 0) ? lineBegin : stepBegin, stepEnd,\r\n                    cc.v2(widthOffset.x * halfWidth, widthOffset.y * halfWidth),\r\n                    (curLength * inverseTextueLength - this.m_Time + 100) % 1, ((curLength + step) * inverseTextueLength - this.m_Time + 100) % 1,\r\n                    (j == 0) ? 1 : 2);\r\n\r\n                curLength += step;\r\n                stepBegin = stepEnd;\r\n            }\r\n            this.addOneStep(stepBegin, lineEnd,\r\n                cc.v2(widthOffset.x * halfWidth, widthOffset.y * halfWidth),\r\n                (curLength * inverseTextueLength - this.m_Time + 100) % 1, (totalLength * inverseTextueLength - this.m_Time + 100) % 1, 3);\r\n        }\r\n\r\n        //cc.log(JSON.stringify(this.m_Vertices))\r\n        //cc.log(JSON.stringify(this.vertexesUV0))\r\n        this.mesh.setVertices(gfx.ATTR_POSITION, this.m_Vertices);\r\n        this.mesh.setVertices(gfx.ATTR_UV0, this.vertexesUV0);\r\n        // this.mesh.setVertices(gfx.ATTR_COLOR, this.vertexesCOLOR);\r\n\r\n        let tTriangle = []\r\n        for (let i = 0; i < this.initialCapacity; i++) {\r\n            tTriangle[i * 6 + 0] = 0 + i * 4;\r\n            tTriangle[i * 6 + 1] = 1 + i * 4;\r\n            tTriangle[i * 6 + 2] = 2 + i * 4;\r\n            tTriangle[i * 6 + 3] = 0 + i * 4;\r\n            tTriangle[i * 6 + 4] = 2 + i * 4;\r\n            tTriangle[i * 6 + 5] = 3 + i * 4;\r\n        }\r\n        //cc.log(JSON.stringify(tTriangle))\r\n        this.mesh.setIndices(tTriangle);\r\n    }\r\n});\r\n","//     (c) 2012-2016 Airbnb, Inc.\r\n//\r\n//     polyglot.js may be freely distributed under the terms of the BSD\r\n//     license. For all licensing information, details, and documention:\r\n//     http://airbnb.github.com/polyglot.js\r\n//\r\n//\r\n// Polyglot.js is an I18n helper library written in JavaScript, made to\r\n// work both in the browser and in Node. It provides a simple solution for\r\n// interpolation and pluralization, based off of Airbnb's\r\n// experience adding I18n functionality to its Backbone.js and Node apps.\r\n//\r\n// Polylglot is agnostic to your translation backend. It doesn't perform any\r\n// translation; it simply gives you a way to manage translated phrases from\r\n// your client- or server-side JavaScript application.\r\n//\r\n\r\n\r\n(function(root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    define([], function() {\r\n      return factory(root);\r\n    });\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = factory(root);\r\n  } else {\r\n    root.Polyglot = factory(root);\r\n  }\r\n}(typeof global !== 'undefined' ? global : this, function(root) {\r\n  'use strict';\r\n\r\n  var replace = String.prototype.replace;\r\n\r\n  // ### Polyglot class constructor\r\n  function Polyglot(options) {\r\n    options = options || {};\r\n    this.phrases = {};\r\n    this.extend(options.phrases || {});\r\n    this.currentLocale = options.locale || 'en';\r\n    this.allowMissing = !!options.allowMissing;\r\n    this.warn = options.warn || warn;\r\n  }\r\n\r\n  // ### Version\r\n  Polyglot.VERSION = '1.0.0';\r\n\r\n  // ### polyglot.locale([locale])\r\n  //\r\n  // Get or set locale. Internally, Polyglot only uses locale for pluralization.\r\n  Polyglot.prototype.locale = function(newLocale) {\r\n    if (newLocale) this.currentLocale = newLocale;\r\n    return this.currentLocale;\r\n  };\r\n\r\n  // ### polyglot.extend(phrases)\r\n  //\r\n  // Use `extend` to tell Polyglot how to translate a given key.\r\n  //\r\n  //     polyglot.extend({\r\n  //       \"hello\": \"Hello\",\r\n  //       \"hello_name\": \"Hello, %{name}\"\r\n  //     });\r\n  //\r\n  // The key can be any string.  Feel free to call `extend` multiple times;\r\n  // it will override any phrases with the same key, but leave existing phrases\r\n  // untouched.\r\n  //\r\n  // It is also possible to pass nested phrase objects, which get flattened\r\n  // into an object with the nested keys concatenated using dot notation.\r\n  //\r\n  //     polyglot.extend({\r\n  //       \"nav\": {\r\n  //         \"hello\": \"Hello\",\r\n  //         \"hello_name\": \"Hello, %{name}\",\r\n  //         \"sidebar\": {\r\n  //           \"welcome\": \"Welcome\"\r\n  //         }\r\n  //       }\r\n  //     });\r\n  //\r\n  //     console.log(polyglot.phrases);\r\n  //     // {\r\n  //     //   'nav.hello': 'Hello',\r\n  //     //   'nav.hello_name': 'Hello, %{name}',\r\n  //     //   'nav.sidebar.welcome': 'Welcome'\r\n  //     // }\r\n  //\r\n  // `extend` accepts an optional second argument, `prefix`, which can be used\r\n  // to prefix every key in the phrases object with some string, using dot\r\n  // notation.\r\n  //\r\n  //     polyglot.extend({\r\n  //       \"hello\": \"Hello\",\r\n  //       \"hello_name\": \"Hello, %{name}\"\r\n  //     }, \"nav\");\r\n  //\r\n  //     console.log(polyglot.phrases);\r\n  //     // {\r\n  //     //   'nav.hello': 'Hello',\r\n  //     //   'nav.hello_name': 'Hello, %{name}'\r\n  //     // }\r\n  //\r\n  // This feature is used internally to support nested phrase objects.\r\n  Polyglot.prototype.extend = function(morePhrases, prefix) {\r\n    var phrase;\r\n\r\n    for (var key in morePhrases) {\r\n      if (morePhrases.hasOwnProperty(key)) {\r\n        phrase = morePhrases[key];\r\n        if (prefix) key = prefix + '.' + key;\r\n        if (typeof phrase === 'object') {\r\n          this.extend(phrase, key);\r\n        } else {\r\n          this.phrases[key] = phrase;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // ### polyglot.unset(phrases)\r\n  // Use `unset` to selectively remove keys from a polyglot instance.\r\n  //\r\n  //     polyglot.unset(\"some_key\");\r\n  //     polyglot.unset({\r\n  //       \"hello\": \"Hello\",\r\n  //       \"hello_name\": \"Hello, %{name}\"\r\n  //     });\r\n  //\r\n  // The unset method can take either a string (for the key), or an object hash with\r\n  // the keys that you would like to unset.\r\n  Polyglot.prototype.unset = function(morePhrases, prefix) {\r\n    var phrase;\r\n\r\n    if (typeof morePhrases === 'string') {\r\n      delete this.phrases[morePhrases];\r\n    } else {\r\n      for (var key in morePhrases) {\r\n        if (morePhrases.hasOwnProperty(key)) {\r\n          phrase = morePhrases[key];\r\n          if (prefix) key = prefix + '.' + key;\r\n          if (typeof phrase === 'object') {\r\n            this.unset(phrase, key);\r\n          } else {\r\n            delete this.phrases[key];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // ### polyglot.clear()\r\n  //\r\n  // Clears all phrases. Useful for special cases, such as freeing\r\n  // up memory if you have lots of phrases but no longer need to\r\n  // perform any translation. Also used internally by `replace`.\r\n  Polyglot.prototype.clear = function() {\r\n    this.phrases = {};\r\n  };\r\n\r\n  // ### polyglot.replace(phrases)\r\n  //\r\n  // Completely replace the existing phrases with a new set of phrases.\r\n  // Normally, just use `extend` to add more phrases, but under certain\r\n  // circumstances, you may want to make sure no old phrases are lying around.\r\n  Polyglot.prototype.replace = function(newPhrases) {\r\n    this.clear();\r\n    this.extend(newPhrases);\r\n  };\r\n\r\n\r\n  // ### polyglot.t(key, options)\r\n  //\r\n  // The most-used method. Provide a key, and `t` will return the\r\n  // phrase.\r\n  //\r\n  //     polyglot.t(\"hello\");\r\n  //     => \"Hello\"\r\n  //\r\n  // The phrase value is provided first by a call to `polyglot.extend()` or\r\n  // `polyglot.replace()`.\r\n  //\r\n  // Pass in an object as the second argument to perform interpolation.\r\n  //\r\n  //     polyglot.t(\"hello_name\", {name: \"Spike\"});\r\n  //     => \"Hello, Spike\"\r\n  //\r\n  // If you like, you can provide a default value in case the phrase is missing.\r\n  // Use the special option key \"_\" to specify a default.\r\n  //\r\n  //     polyglot.t(\"i_like_to_write_in_language\", {\r\n  //       _: \"I like to write in %{language}.\",\r\n  //       language: \"JavaScript\"\r\n  //     });\r\n  //     => \"I like to write in JavaScript.\"\r\n  //\r\n  Polyglot.prototype.t = function(key, options) {\r\n    var phrase, result;\r\n    options = options == null ? {} : options;\r\n    // allow number as a pluralization shortcut\r\n    if (typeof options === 'number') {\r\n      options = {smart_count: options};\r\n    }\r\n    if (typeof this.phrases[key] === 'string') {\r\n      phrase = this.phrases[key];\r\n    } else if (typeof options._ === 'string') {\r\n      phrase = options._;\r\n    } else if (this.allowMissing) {\r\n      phrase = key;\r\n    } else {\r\n      this.warn('Missing translation for key: \"'+key+'\"');\r\n      result = key;\r\n    }\r\n    if (typeof phrase === 'string') {\r\n      options = clone(options);\r\n      result = choosePluralForm(phrase, this.currentLocale, options.smart_count);\r\n      result = interpolate(result, options);\r\n    }\r\n    return result;\r\n  };\r\n\r\n\r\n  // ### polyglot.has(key)\r\n  //\r\n  // Check if polyglot has a translation for given key\r\n  Polyglot.prototype.has = function(key) {\r\n    return key in this.phrases;\r\n  };\r\n\r\n\r\n  // #### Pluralization methods\r\n  // The string that separates the different phrase possibilities.\r\n  var delimeter = '||||';\r\n\r\n  // Mapping from pluralization group plural logic.\r\n  var pluralTypes = {\r\n    chinese:   function(n) { return 0; },\r\n    german:    function(n) { return n !== 1 ? 1 : 0; },\r\n    french:    function(n) { return n > 1 ? 1 : 0; },\r\n    russian:   function(n) { return n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2; },\r\n    czech:     function(n) { return (n === 1) ? 0 : (n >= 2 && n <= 4) ? 1 : 2; },\r\n    polish:    function(n) { return (n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2); },\r\n    icelandic: function(n) { return (n % 10 !== 1 || n % 100 === 11) ? 1 : 0; }\r\n  };\r\n\r\n  // Mapping from pluralization group to individual locales.\r\n  var pluralTypeToLanguages = {\r\n    chinese:   ['fa', 'id', 'ja', 'ko', 'lo', 'ms', 'th', 'tr', 'zh'],\r\n    german:    ['da', 'de', 'en', 'es', 'fi', 'el', 'he', 'hu', 'it', 'nl', 'no', 'pt', 'sv'],\r\n    french:    ['fr', 'tl', 'pt-br'],\r\n    russian:   ['hr', 'ru'],\r\n    czech:     ['cs', 'sk'],\r\n    polish:    ['pl'],\r\n    icelandic: ['is']\r\n  };\r\n\r\n  function langToTypeMap(mapping) {\r\n    var type, langs, l, ret = {};\r\n    for (type in mapping) {\r\n      if (mapping.hasOwnProperty(type)) {\r\n        langs = mapping[type];\r\n        for (l in langs) {\r\n          ret[langs[l]] = type;\r\n        }\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  // Trim a string.\r\n  var trimRe = /^\\s+|\\s+$/g;\r\n  function trim(str){\r\n    return replace.call(str, trimRe, '');\r\n  }\r\n\r\n  // Based on a phrase text that contains `n` plural forms separated\r\n  // by `delimeter`, a `locale`, and a `count`, choose the correct\r\n  // plural form, or none if `count` is `null`.\r\n  function choosePluralForm(text, locale, count){\r\n    var ret, texts, chosenText;\r\n    if (count != null && text) {\r\n      texts = text.split(delimeter);\r\n      chosenText = texts[pluralTypeIndex(locale, count)] || texts[0];\r\n      ret = trim(chosenText);\r\n    } else {\r\n      ret = text;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  function pluralTypeName(locale) {\r\n    var langToPluralType = langToTypeMap(pluralTypeToLanguages);\r\n    return langToPluralType[locale] || langToPluralType.en;\r\n  }\r\n\r\n  function pluralTypeIndex(locale, count) {\r\n    return pluralTypes[pluralTypeName(locale)](count);\r\n  }\r\n\r\n  // ### interpolate\r\n  //\r\n  // Does the dirty work. Creates a `RegExp` object for each\r\n  // interpolation placeholder.\r\n  var dollarRegex = /\\$/g;\r\n  var dollarBillsYall = '$$$$';\r\n  function interpolate(phrase, options) {\r\n    for (var arg in options) {\r\n      if (arg !== '_' && options.hasOwnProperty(arg)) {\r\n        // Ensure replacement value is escaped to prevent special $-prefixed\r\n        // regex replace tokens. the \"$$$$\" is needed because each \"$\" needs to\r\n        // be escaped with \"$\" itself, and we need two in the resulting output.\r\n        var replacement = options[arg];\r\n        if (typeof replacement === 'string') {\r\n          replacement = replace.call(options[arg], dollarRegex, dollarBillsYall);\r\n        }\r\n        // We create a new `RegExp` each time instead of using a more-efficient\r\n        // string replace so that the same argument can be replaced multiple times\r\n        // in the same phrase.\r\n        phrase = replace.call(phrase, new RegExp('%\\\\{'+arg+'\\\\}', 'g'), replacement);\r\n      }\r\n    }\r\n    return phrase;\r\n  }\r\n\r\n  // ### warn\r\n  //\r\n  // Provides a warning in the console if a phrase key is missing.\r\n  function warn(message) {\r\n    root.console && root.console.warn && root.console.warn('WARNING: ' + message);\r\n  }\r\n\r\n  // ### clone\r\n  //\r\n  // Clone an object.\r\n  function clone(source) {\r\n    var ret = {};\r\n    for (var prop in source) {\r\n      ret[prop] = source[prop];\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  return Polyglot;\r\n}));\r\n","let appFacade = require('FishFacade');\r\nvar UIManager = require('gameUIManager');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        txtContent: { default: null, type: cc.Label },\r\n    },\r\n    init(data) {\r\n        this.txtContent.string = data[0]\r\n        this.func = data[1]\r\n    },\r\n    start() {\r\n\r\n    },\r\n    onbtnOk() {\r\n        if (this.func) {\r\n            this.func()\r\n        }\r\n        this.closeSelf()\r\n    },\r\n    onBack() {\r\n        this.closeSelf()\r\n    },\r\n    closeSelf() {\r\n        if (this.node.kindId){\r\n            let uiManager = new UIManager(this.node.kindId)\r\n            uiManager.closeUI(this.node.viewId)\r\n        }else{\r\n            cc.log(\"the kindId is null\");\r\n        }\r\n        \r\n    }\r\n});\r\n","module.exports = {\r\n\r\n    \"GameLobbyLoginScene.fire.1\": \"著作权人：昆明锋趣科技有限公司 软著登记号2016SR316454\\n出版服务单位：方圆电子音像出版社有限责任公司 批准文号：新广出审【2017】6205号 出版物号：ISBN 978-7-7979-9403-3\",\r\n    \"GameLobbyLoginScene.fire.2\": \"资源更新中，请稍等.....\",\r\n    \"fish.prefab.1\": \"渔场内使用\\n最高可获得6W金币\\n\\\"鱼雷场\\\"打鱼可获得\",\r\n    \"fish.prefab.2\": \"渔场内使用\\n最高可获得60W金币\\n\\\"鱼雷场\\\"打鱼可获得\",\r\n    \"fish.prefab.3\": \"渔场内使用\\n最高可获得30W金币\\n\\\"鱼雷场\\\"打鱼可获得\",\r\n    \"fish.prefab.4\": \"渔场内使用\\n最高可获得12W金币\\n\\\"鱼雷场\\\"打鱼可获得\",\r\n    \"fish.prefab.5\": \"单次使用鱼雷的数量\\n点击按钮可切换数量\",\r\n    \"fish.prefab.6\": \"使用后子弹射速翻倍\\n速度秒杀大鱼的神技能！\",\r\n    \"fish.prefab.7\": \"使用后可锁定渔场内\\n任意一条鱼\",\r\n    \"fish.prefab.8\": \"使用后可冰冻渔场内\\n所有的鱼（除财神外）\\n大鱼别想逃！\",\r\n    \"fish.prefab.T1\": \"青铜鱼雷\",\r\n    \"fish.prefab.T2\": \"紫金鱼雷\",\r\n    \"fish.prefab.T3\": \"黄金鱼雷\",\r\n    \"fish.prefab.T4\": \"白银鱼雷\",\r\n    \"fish.prefab.T5\": \"鱼雷使用数量\",\r\n    \"fish.prefab.T6\": \"急速\",\r\n    \"fish.prefab.T7\": \"锁定\",\r\n    \"fish.prefab.T8\": \"冰冻\",\r\n    \"fish.prefab.M1\": \"1%概率获得1张夺宝券\",\r\n    \"fish.prefab.M2\": \"10%概率获得1张夺宝券\",\r\n    \"fish.prefab.M3\": \"4%概率获得1张夺宝券\",\r\n    \"fish.prefab.M4\": \"2%概率获得1张夺宝券\",\r\n\r\n    \"fish.prefab.rule1\": \"渔场内随机出现\\n击杀即可获得福卡上\\n对应的红包金额\",\r\n    \"fish.prefab.rule2\": \"渔场内随机出现\\n击打会掉落红包\\n使用高倍炮掉落更轻松\",\r\n    \"fish.prefab.rule3\": \"使用鱼雷可获得大量鱼币\\n\\\"鱼雷场\\\"击杀鱼可获得\",\r\n    \"fish.prefab.rule4\": \"\\\"鱼雷场\\\"击杀任意鱼\\n有机会暴击 最高5倍暴击\\n1条顶5条，瞬间变土壕\",\r\n    \"fish.prefab.rule5\": \"击杀带有连锁闪电的鱼\\n触发连锁闪电效果\\n捕获同类连锁闪电鱼\",\r\n    \"fish.prefab.rule6\": \"威力巨大的深海电鳗\\n成功捕获可触发连锁闪电\\n击杀屏幕内的所有小鱼\",\r\n    \"fish.prefab.ruleT1\": \"福卡\",\r\n    \"fish.prefab.ruleT2\": \"财神\",\r\n    \"fish.prefab.ruleT3\": \"鱼雷\",\r\n    \"fish.prefab.ruleT4\": \"暴击翻倍\",\r\n    \"fish.prefab.ruleT5\": \"连锁闪电\",\r\n    \"fish.prefab.ruleT6\": \"电鳗\",\r\n    \"fish.prefab.ruleI4\": \"暴击*5倍\",\r\n    \"FishTypeView.1\": \"倍\",\r\n    \"FreeGoldLayer.1\": \"剩余次数：\",\r\n    \"FreeGoldLayer.2\": \"领取条件：身上总金币数量不足\",\r\n    \"FreeGoldLayer.3\": \"你的游戏币额度未达到领取要求!\",\r\n    \"FreeGoldLayer.4\": \"剩余次数不足\",\r\n    \"FreeGoldLayer.prefab.1\": \"本次领取奖励：\\n\\n贵族额外奖励：\",\r\n    \"FreeGoldLayer.prefab.2\": \"贵族额外奖励\",\r\n    \"PiggyBankLayer.prefab.1\": \"最大储存金币\",\r\n    \"PiggyBankLayer.prefab.2\": \"当前VIP储存上限：\",\r\n\r\n    \"ChangeCannonLayer.prefab.1\": \"无\",\r\n    \"ChangeCannonLayer.prefab.2\": \"VIP2专属捕鱼炮台\",\r\n    \"ChangeCannonLayer.prefab.3\": \"VIP3专属捕鱼炮台\",\r\n    \"ChangeCannonLayer.prefab.4\": \"VIP4专属捕鱼炮台\",\r\n    \"ChangeCannonLayer.prefab.5\": \"VIP5专属捕鱼炮台\\n冰冻技能持续时间+5秒\",\r\n    \"ChangeCannonLayer.prefab.6\": \"VIP6专属捕鱼炮台\",\r\n    \"ChangeCannonLayer.prefab.7\": \"VIP7专属捕鱼炮台\\n提升鱼雷场暴击概率\",\r\n\r\n    \"ExchangeRedPacketLayer.prefab.1\": \"使用夺宝券\",\r\n\r\n    \"ExchangeRedPacketLayer.1\": \"福卡：\",\r\n    \"ExchangeRedPacketLayer.2\": \"兑换\",\r\n    \"ExchangeRedPacketLayer.3\": \"红包不足\",\r\n    \"ExchangeRedPacketLayer.4\": \"是否兑换?\",\r\n    \"ExchangeRedPacketLayer.5\": \"兑换成功\",\r\n    \"ExchangeRedPacketLayer.6\": \"恭喜玩家<color=#0fffff>\",\r\n    \"ExchangeRedPacketLayer.7\": \"</color>兑换\",\r\n\r\n\r\n    \"NewGuideLayer0.prefab.1\": \"嗨！欢迎来到捕鱼的世界!\\n在这里可以获得免费的红包哦！\\n我们点击\",\r\n    \"NewGuideLayer0.prefab.2\": \"福卡场\",\r\n    \"NewGuideLayer0.prefab.3\": \"去赢红包吧。\",\r\n    \"NewGuideLayer1.prefab.1\": \"发炮可积攒福卡能量领福卡哦！\\n快看，福卡能量马上就要满了。\",\r\n    \"NewGuideLayer1.prefab.2\": \"点击屏幕发炮试试吧！\",\r\n    \"NewGuideLayer2.prefab.1\": \"点击此处可以查看更多档\\n位福卡信息哦！\",\r\n    \"NewGuideLayer3.prefab.1\": \"恭喜您获得一个\\n让我们先打开这个福卡吧！\\n 福卡可直接兑换至微信哦！\",\r\n    \"NewGuideLayer3.prefab.2\": \"新手福卡\",\r\n    \"NewGuideLayer5.prefab.1\": \"点击此处打开新手豪礼。\",\r\n    \"NewGuideLayer6.prefab.1\": \"点击此处领取新手豪礼奖励。\",\r\n\r\n    \"GameToolProxy.1\": \"正在断线重连\",\r\n\r\n    \"OutRoomView.1\": \"船长,您只需要再发射<color=#D57520>\",\r\n    \"OutRoomView.2\": \"</c>炮就可以获得红包啦！是否继续开炮？\",\r\n\r\n    \"tanchukuang.prefab.1\": \" 真的要离开了吗？\",\r\n\r\n    \"fishUiLayer.1\": \"冰冻需要vip1才能使用\",\r\n    \"fishUiLayer.2\": \"急速需要vip1才能使用\",\r\n    \"fishUiLayer.3\": \"锁定需要vip1才能使用\",\r\n    \"fishUiLayer.Tip1\": \"技能不足（请检查使用数量）\",\r\n    \"fishUiLayer.Tip2\": \"鱼雷不足（请检查使用数量）\",\r\n    \"fishUiLayer.Tip3\": \"该技能冷却中\",\r\n\r\n    \"CompetitionRoomRink.prefab.1\": \"周积分：\",\r\n    \"CompetitionRoomRink.prefab.2\": \"日积分：\",\r\n    \"CompetitionRoomRink.prefab.3\": \"今日排名：\",\r\n    \"CompetitionRoomRink.prefab.4\": \"比赛时间：\",\r\n    \"CompetitionRoomRink.prefab.5\": \"积分：\",\r\n    \"CompetitionRoomRink.prefab.6\": \"排名每10分钟刷新一次\",\r\n    \"CompetitionRoomOver.prefab.1\": \"获得积分：\",\r\n    \"CompetitionRoomOver.prefab.2\": \"获得奖励：\",\r\n    \"CompetitionRoomOver.prefab.3\": \"比赛结束\",\r\n\r\n    \"CompetitionRoomBuy.prefab.1\": \"剩余金币：\",\r\n    \"CompetitionRoomBuy.prefab.2\": \"仅可兑换一次，兑换的子弹仅在本场比赛有效\",\r\n    \"CompetitionRoomBuy.prefab.3\": \"金币                 子弹\",\r\n    \"CompetitionRoomBuy.prefab.4\": \"补充子弹\",\r\n    \"CompetitionRoomBuy.prefab.5\": \"结束比赛\",\r\n    \"CompetitionRoomBuy.prefab.6\": \"确认兑换\",\r\n\r\n    \"game_resource.prefab.1\": \"积分\",\r\n    \"redPacketShowAni_0.prefab.1\": \"恭喜获得\",\r\n    \"redPacketShowAni_0.prefab.2\": \"福卡\",\r\n\r\n    \"EmailSystemLayer.prefab.1\": \"信息最多保存最近60条\",\r\n\r\n    \"UserInfoLayer.1\": \"鱼雷数量不足\",\r\n    \"UserInfoLayer.2\": \"赠送鱼雷需要VIP1及以上\",\r\n\r\n    \"shopLayer.1\": \"购买成功\",\r\n    \"SendPacketItemLayer.1\": \"玩家id只能是数字\",\r\n\r\n    \"ExchangeRedPacketLayer2.1\": \"您的夺宝券不足\",\r\n    \"ExchangeRedPacketLayer2.2\": \"兑换成功,获得\",\r\n    \"ExchangeRedPacketLayer2.3\": \"金币\",\r\n\r\n    \"CompetitionRoomRinkView.1\": \"挑战次数不足\",\r\n\r\n    \"GameLobbyLoginUI.1\": \"捕鱼\",\r\n\r\n    \"fishPlayer.1\": \"您的金币不足是否前往充值？\",\r\n    \"fishPlayer.2\": \"需要至少携带\",\r\n    \"fishPlayer.3\": \"金币才可增加炮台倍数\",\r\n\r\n    \"fishjiFenBanMatch.1\": \"已完成\",\r\n\r\n    \"fishAnimationLayer.1\": \"暴击*\",\r\n    \"fishAnimationLayer.2\": \"倍\",\r\n    \"fishAnimationLayer.3\": \"获得\",\r\n    \"fishAnimationLayer.4\": \"张夺宝券\",\r\n\r\n    \"LotteryTicketTitle.prefab.1\": \"我的夺宝券：\",\r\n    \"LotteryTicketTitle.prefab.2\": \"使用鱼雷有概率获得夺宝券\",\r\n\r\n    \"RedPacketRule.prefab.1\": \"可获得0.1张，0.2张，0.3张，1张四种奖励\",\r\n    \"RedPacketRule.prefab.2\": \"可获得1张，2张，3张，8张四种奖励\",\r\n    \"RedPacketRule.prefab.3\": \"可获得4张，8张，12张，88张四种奖励\",\r\n    \"RedPacketRule.prefab.4\": \"在击杀鱼获得金币的同时，可额外获得抽福卡机会，福卡能量条达到对应档次时可抽取福卡，<color=#FFFF00>最高可获得88张福卡</color>，炮台倍数越高，福卡能量条进度增加越快，退出游戏进度保存30分钟。\",\r\n\r\n    \"ExchangeRedPacketLayer2.prefab.1\": \"剩余夺宝券：\",\r\n    \"ExchangeRedPacketLayer2.prefab.2\": \"夺宝券                      金币\",\r\n    \"ExchangeRedPacketLayer2.prefab.3\": \"1夺宝券=2万金币\",\r\n\r\n    \"RegistAccountLayer.1\": \"手机号码不能为空！\",\r\n    \"RegistAccountLayer.2\": \"请输入11位手机号码！\",\r\n    \"RegistAccountLayer.3\": \"请输入有效的手机号码！\",\r\n    \"RegistAccountLayer.4\": \"获取验证码\",\r\n    \"RegistAccountLayer.5\": \"验证码不能为空！\",\r\n    \"RegistAccountLayer.6\": \"验证码只能是数字\",\r\n\r\n    \"RedPacketOpen.prefab.1\": \"完成该福卡进度自动抽取福卡\",\r\n\r\n\r\n};"],"file":"index.js"}